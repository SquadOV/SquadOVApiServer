{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22","program":"C:\\Users\\Michael Bao\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio","--edition=2018","C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"blocking\"","--cfg","feature=\"default\"","--cfg","feature=\"dns\"","--cfg","feature=\"fnv\"","--cfg","feature=\"fs\"","--cfg","feature=\"full\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-std\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-named-pipes\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"net\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"process\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-threaded\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","--cfg","feature=\"winapi\"","-C","metadata=39d390ab44404f2e","-C","extra-filename=-39d390ab44404f2e","--out-dir","a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps","-L","dependency=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps","--extern","bytes=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\libbytes-aa74d759d4f44009.rmeta","--extern","fnv=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\libfnv-6926365ecd0ab74a.rmeta","--extern","futures_core=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\libfutures_core-d94567767000a131.rmeta","--extern","iovec=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\libiovec-c11d05c62cb30619.rmeta","--extern","lazy_static=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\liblazy_static-c0c27719927a1fa3.rmeta","--extern","memchr=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\libmemchr-b02ba94123971a56.rmeta","--extern","mio=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\libmio-fab55c1cb0fff377.rmeta","--extern","mio_named_pipes=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\libmio_named_pipes-0921e906252a933b.rmeta","--extern","num_cpus=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\libnum_cpus-09cb5f75275b8764.rmeta","--extern","pin_project_lite=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\libpin_project_lite-8365bfd55b12b344.rmeta","--extern","slab=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\libslab-22408ed874b2c377.rmeta","--extern","tokio_macros=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\tokio_macros-b934d73bac710477.dll","--extern","winapi=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\libwinapi-cc99a15debdb4505.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Michael Bao\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\libtokio-39d390ab44404f2e.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[3345912048170307118,15521288558634043094]},"crate_root":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src","external_crates":[{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\try_join.rs","num":13,"id":{"name":"pin_project_lite","disambiguator":[14968195364364490066,5764375137140231234]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","num":14,"id":{"name":"bytes","disambiguator":[5820783073455330643,12970661177991392792]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","num":15,"id":{"name":"futures_core","disambiguator":[1524075582971606257,12527665623141758414]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":16,"id":{"name":"mio","disambiguator":[11362897614119932281,12567028581126472002]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":17,"id":{"name":"net2","disambiguator":[2581733920633366392,9122884938121168032]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","num":18,"id":{"name":"winapi","disambiguator":[6813671833369493824,3862385653159252250]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":19,"id":{"name":"cfg_if","disambiguator":[10183188612241806738,3141981603649370946]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","num":20,"id":{"name":"iovec","disambiguator":[14939734292324289300,6136226544270168033]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","num":21,"id":{"name":"slab","disambiguator":[13806605478184841017,7880772981103063193]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":22,"id":{"name":"miow","disambiguator":[12091467485798339594,6488612632228150723]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":23,"id":{"name":"kernel32","disambiguator":[17082474735454774242,4591542647748319794]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":24,"id":{"name":"winapi","disambiguator":[9025474517276677421,6142900392020989985]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":25,"id":{"name":"ws2_32","disambiguator":[10357857738891575680,6064915076307861862]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":26,"id":{"name":"log","disambiguator":[10570576147978254202,5457363935054557540]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","num":27,"id":{"name":"mio_named_pipes","disambiguator":[15994224995508450347,11135435611482391726]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","num":28,"id":{"name":"miow","disambiguator":[16383164732262240850,3485519862661650668]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","num":29,"id":{"name":"socket2","disambiguator":[16058402793258622111,676733853327903379]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","num":30,"id":{"name":"lazy_static","disambiguator":[10336935334542864265,8017296924341794806]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","num":31,"id":{"name":"fnv","disambiguator":[4417970326195262275,14024324247791422672]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":32,"id":{"name":"tokio_macros","disambiguator":[12154782178691267092,13169272162554627568]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_until.rs","num":33,"id":{"name":"memchr","disambiguator":[6044765253443235082,4439111558492427998]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\mod.rs","num":34,"id":{"name":"num_cpus","disambiguator":[565473876673808462,10529406587694774061]}}],"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\support.rs","byte_start":30868,"byte_end":30878,"line_start":2,"line_end":2,"column_start":29,"column_end":39},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\support.rs","byte_start":30880,"byte_end":30887,"line_start":2,"line_end":2,"column_start":41,"column_end":48},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\support.rs","byte_start":30915,"byte_end":30927,"line_start":3,"line_end":3,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":9585},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\support.rs","byte_start":30953,"byte_end":30959,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34793},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\support.rs","byte_start":30979,"byte_end":30982,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":37298},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\support.rs","byte_start":31003,"byte_end":31007,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229036,"byte_end":10229048,"line_start":28,"line_end":28,"column_start":29,"column_end":41},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229093,"byte_end":10229103,"line_start":31,"line_end":31,"column_start":27,"column_end":37},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229156,"byte_end":10229170,"line_start":34,"line_end":34,"column_start":31,"column_end":45},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229217,"byte_end":10229227,"line_start":37,"line_end":37,"column_start":28,"column_end":38},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":967},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229260,"byte_end":10229264,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229307,"byte_end":10229316,"line_start":43,"line_end":43,"column_start":26,"column_end":35},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229357,"byte_end":10229365,"line_start":46,"line_end":46,"column_start":25,"column_end":33},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229414,"byte_end":10229425,"line_start":49,"line_end":49,"column_start":29,"column_end":40},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\mod.rs","byte_start":10279518,"byte_end":10279529,"line_start":4,"line_end":4,"column_start":28,"column_end":39},"alias_span":null,"name":"symlink_dir","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\mod.rs","byte_start":10279578,"byte_end":10279590,"line_start":7,"line_end":7,"column_start":29,"column_end":41},"alias_span":null,"name":"symlink_file","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229471,"byte_end":10229475,"line_start":54,"line_end":54,"column_start":21,"column_end":25},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1142},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229517,"byte_end":10229525,"line_start":57,"line_end":57,"column_start":26,"column_end":34},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229527,"byte_end":10229535,"line_start":57,"line_end":57,"column_start":36,"column_end":44},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229537,"byte_end":10229544,"line_start":57,"line_end":57,"column_start":46,"column_end":53},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229588,"byte_end":10229597,"line_start":60,"line_end":60,"column_start":26,"column_end":35},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229650,"byte_end":10229664,"line_start":63,"line_end":63,"column_start":31,"column_end":45},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229709,"byte_end":10229719,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229772,"byte_end":10229786,"line_start":69,"line_end":69,"column_start":31,"column_end":45},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229833,"byte_end":10229844,"line_start":72,"line_end":72,"column_start":28,"column_end":39},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229881,"byte_end":10229887,"line_start":75,"line_end":75,"column_start":23,"column_end":29},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229942,"byte_end":10229957,"line_start":78,"line_end":78,"column_start":32,"column_end":47},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10230014,"byte_end":10230030,"line_start":81,"line_end":81,"column_start":33,"column_end":49},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10230065,"byte_end":10230070,"line_start":84,"line_end":84,"column_start":22,"column_end":27},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10230103,"byte_end":10230107,"line_start":87,"line_end":87,"column_start":21,"column_end":25},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","byte_start":31111,"byte_end":31121,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":1344},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","byte_start":31123,"byte_end":31132,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","byte_start":31166,"byte_end":31173,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45085,"byte_end":45097,"line_start":187,"line_end":187,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45143,"byte_end":45152,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45197,"byte_end":45206,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45253,"byte_end":45263,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1719},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45359,"byte_end":45370,"line_start":203,"line_end":203,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45421,"byte_end":45433,"line_start":206,"line_end":206,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1775},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45489,"byte_end":45495,"line_start":211,"line_end":211,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45497,"byte_end":45503,"line_start":211,"line_end":211,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45542,"byte_end":45547,"line_start":214,"line_end":214,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1781},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45549,"byte_end":45554,"line_start":214,"line_end":214,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45595,"byte_end":45601,"line_start":217,"line_end":217,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45603,"byte_end":45609,"line_start":217,"line_end":217,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1910},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45665,"byte_end":45670,"line_start":222,"line_end":222,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45672,"byte_end":45680,"line_start":222,"line_end":222,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45682,"byte_end":45691,"line_start":222,"line_end":222,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1912},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45744,"byte_end":45748,"line_start":225,"line_end":225,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2708},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45804,"byte_end":45808,"line_start":229,"line_end":229,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45810,"byte_end":45815,"line_start":229,"line_end":229,"column_start":15,"column_end":20},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2957},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45817,"byte_end":45823,"line_start":229,"line_end":229,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2972},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45825,"byte_end":45829,"line_start":229,"line_end":229,"column_start":30,"column_end":34},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2602},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45831,"byte_end":45846,"line_start":229,"line_end":229,"column_start":36,"column_end":51},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2610},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45848,"byte_end":45860,"line_start":229,"line_end":229,"column_start":53,"column_end":65},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1991},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45862,"byte_end":45874,"line_start":229,"line_end":229,"column_start":67,"column_end":79},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2662},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45876,"byte_end":45889,"line_start":229,"line_end":229,"column_start":81,"column_end":94},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11760},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45899,"byte_end":45908,"line_start":230,"line_end":230,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11746},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45910,"byte_end":45919,"line_start":230,"line_end":230,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11683},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45921,"byte_end":45930,"line_start":230,"line_end":230,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45932,"byte_end":45936,"line_start":230,"line_end":230,"column_start":42,"column_end":46},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2728},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45938,"byte_end":45943,"line_start":230,"line_end":230,"column_start":48,"column_end":53},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11611},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45945,"byte_end":45950,"line_start":230,"line_end":230,"column_start":55,"column_end":60},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2958},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45952,"byte_end":45958,"line_start":230,"line_end":230,"column_start":62,"column_end":68},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2970},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45960,"byte_end":45964,"line_start":230,"line_end":230,"column_start":70,"column_end":74},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10777},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45966,"byte_end":45971,"line_start":230,"line_end":230,"column_start":76,"column_end":81},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10686},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45973,"byte_end":45977,"line_start":230,"line_end":230,"column_start":83,"column_end":87},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2988},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":46028,"byte_end":46041,"line_start":234,"line_end":234,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10731},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":46043,"byte_end":46055,"line_start":234,"line_end":234,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2782},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":46210,"byte_end":46215,"line_start":239,"line_end":239,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":7139},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":46217,"byte_end":46226,"line_start":239,"line_end":239,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2780},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":46228,"byte_end":46234,"line_start":239,"line_end":239,"column_start":41,"column_end":47},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72675,"byte_end":72688,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3246},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72748,"byte_end":72759,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3509},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":10527199,"byte_end":10527207,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3251}},{"kind":"Use","ref_id":{"krate":0,"index":3515},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":10527237,"byte_end":10527245,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3251}},{"kind":"Use","ref_id":{"krate":0,"index":3522},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":10527247,"byte_end":10527256,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3251}},{"kind":"Use","ref_id":{"krate":0,"index":3529},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":10527299,"byte_end":10527312,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3251}},{"kind":"Use","ref_id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":10527314,"byte_end":10527328,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3251}},{"kind":"Use","ref_id":{"krate":0,"index":3538},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":10527330,"byte_end":10527342,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3251}},{"kind":"Use","ref_id":{"krate":0,"index":3539},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":10527330,"byte_end":10527342,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3404}},{"kind":"Use","ref_id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72819,"byte_end":72830,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72857,"byte_end":72866,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3676},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","byte_start":10586997,"byte_end":10587005,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":3546}},{"kind":"Use","ref_id":{"krate":0,"index":3681},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","byte_start":10587007,"byte_end":10587019,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3546}},{"kind":"Use","ref_id":{"krate":0,"index":3682},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","byte_start":10587007,"byte_end":10587019,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3666}},{"kind":"Use","ref_id":{"krate":0,"index":3671},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","byte_start":10587021,"byte_end":10587029,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":3546}},{"kind":"Use","ref_id":{"krate":0,"index":3669},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72924,"byte_end":72933,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105483,"byte_end":105485,"line_start":16,"line_end":16,"column_start":16,"column_end":18},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105494,"byte_end":105506,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105508,"byte_end":105517,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105519,"byte_end":105529,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2602},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105594,"byte_end":105609,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2610},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105616,"byte_end":105628,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":1991},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105635,"byte_end":105647,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2662},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105654,"byte_end":105667,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113198,"byte_end":113205,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":4830},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113290,"byte_end":113296,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113298,"byte_end":113313,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":5320},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794561,"byte_end":10794567,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":5315}},{"kind":"Use","ref_id":{"krate":0,"index":5535},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831471,"byte_end":10831481,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":5457}},{"kind":"Use","ref_id":{"krate":0,"index":5627},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831511,"byte_end":10831516,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":5457}},{"kind":"Use","ref_id":{"krate":0,"index":6067},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831518,"byte_end":10831523,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":5457}},{"kind":"Use","ref_id":{"krate":0,"index":5728},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831689,"byte_end":10831693,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":5457}},{"kind":"Use","ref_id":{"krate":0,"index":6074},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831695,"byte_end":10831699,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5457}},{"kind":"Use","ref_id":{"krate":0,"index":5818},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831809,"byte_end":10831813,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":5457}},{"kind":"Use","ref_id":{"krate":0,"index":6088},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831815,"byte_end":10831819,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":5457}},{"kind":"Use","ref_id":{"krate":0,"index":5841},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831854,"byte_end":10831861,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":5457}},{"kind":"Use","ref_id":{"krate":0,"index":6094},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831863,"byte_end":10831870,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":5457}},{"kind":"Use","ref_id":{"krate":0,"index":6101},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831910,"byte_end":10831919,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":5457}},{"kind":"Use","ref_id":{"krate":15,"index":68},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832211,"byte_end":10832217,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":5457}},{"kind":"Use","ref_id":{"krate":0,"index":7478},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950026,"byte_end":10950033,"line_start":433,"line_end":433,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":6146}},{"kind":"Use","ref_id":{"krate":0,"index":7490},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950035,"byte_end":10950052,"line_start":433,"line_end":433,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":6146}},{"kind":"Use","ref_id":{"krate":0,"index":6448},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10998457,"byte_end":10998464,"line_start":70,"line_end":70,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":6347}},{"kind":"Use","ref_id":{"krate":0,"index":6442},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10998466,"byte_end":10998474,"line_start":70,"line_end":70,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":6347}},{"kind":"Use","ref_id":{"krate":0,"index":6433},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10998476,"byte_end":10998482,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":6347}},{"kind":"Use","ref_id":{"krate":0,"index":6720},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10998560,"byte_end":10998577,"line_start":77,"line_end":77,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":6347}},{"kind":"Use","ref_id":{"krate":0,"index":6714},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10998579,"byte_end":10998596,"line_start":77,"line_end":77,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":6347}},{"kind":"Use","ref_id":{"krate":0,"index":6705},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10998598,"byte_end":10998613,"line_start":77,"line_end":77,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":6347}},{"kind":"Use","ref_id":{"krate":0,"index":7615},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950277,"byte_end":10950282,"line_start":445,"line_end":445,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":6146}},{"kind":"Use","ref_id":{"krate":0,"index":6783},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950284,"byte_end":10950294,"line_start":445,"line_end":445,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":6146}},{"kind":"Use","ref_id":{"krate":0,"index":7622},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950296,"byte_end":10950308,"line_start":445,"line_end":445,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":6146}},{"kind":"Use","ref_id":{"krate":0,"index":6787},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950310,"byte_end":10950325,"line_start":445,"line_end":445,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":6146}},{"kind":"Use","ref_id":{"krate":0,"index":7627},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950365,"byte_end":10950371,"line_start":448,"line_end":448,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":6146}},{"kind":"Use","ref_id":{"krate":0,"index":7760},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950508,"byte_end":10950517,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":6146}},{"kind":"Use","ref_id":{"krate":0,"index":7764},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950519,"byte_end":10950534,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":6146}},{"kind":"Use","ref_id":{"krate":0,"index":7771},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950536,"byte_end":10950556,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":6146}},{"kind":"Use","ref_id":{"krate":0,"index":7781},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950597,"byte_end":10950603,"line_start":458,"line_end":458,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":6146}},{"kind":"Use","ref_id":{"krate":0,"index":7788},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950605,"byte_end":10950620,"line_start":458,"line_end":458,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":6146}},{"kind":"Use","ref_id":{"krate":0,"index":7797},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950622,"byte_end":10950638,"line_start":458,"line_end":458,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":6146}},{"kind":"Use","ref_id":{"krate":0,"index":7871},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11223233,"byte_end":11223247,"line_start":219,"line_end":219,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":7863}},{"kind":"Use","ref_id":{"krate":0,"index":7868},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11223299,"byte_end":11223313,"line_start":222,"line_end":222,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":7863}},{"kind":"Use","ref_id":{"krate":0,"index":4561},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11223374,"byte_end":11223383,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":7863}},{"kind":"Use","ref_id":{"krate":0,"index":4563},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11223385,"byte_end":11223395,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":7863}},{"kind":"Use","ref_id":{"krate":0,"index":7890},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11223433,"byte_end":11223438,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":7863}},{"kind":"Use","ref_id":{"krate":0,"index":7892},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11223483,"byte_end":11223492,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":7863}},{"kind":"Use","ref_id":{"krate":0,"index":8052},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11223547,"byte_end":11223558,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":7863}},{"kind":"Use","ref_id":{"krate":0,"index":8043},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11223560,"byte_end":11223568,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":7863}},{"kind":"Use","ref_id":{"krate":0,"index":7995},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11223616,"byte_end":11223624,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":7863}},{"kind":"Use","ref_id":{"krate":0,"index":7890},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14562,"byte_end":14567,"line_start":389,"line_end":389,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8552},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262733,"byte_end":11262743,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":8158},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262773,"byte_end":11262782,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":8157},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262784,"byte_end":11262795,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":8594},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262797,"byte_end":11262802,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":8651},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262856,"byte_end":11262861,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":8663},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262900,"byte_end":11262907,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":8411},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262943,"byte_end":11262951,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":8412},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262953,"byte_end":11262964,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":8686},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262966,"byte_end":11262974,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":8439},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11263024,"byte_end":11263031,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":8441},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11263033,"byte_end":11263043,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":8691},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11263045,"byte_end":11263052,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":9151},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11263054,"byte_end":11263061,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":8713},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11263120,"byte_end":11263128,"line_start":123,"line_end":123,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":9105},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11263130,"byte_end":11263138,"line_start":123,"line_end":123,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":2,"index":37168},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11263247,"byte_end":11263255,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":8067}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\mod.rs","byte_start":179642,"byte_end":179654,"line_start":26,"line_end":26,"column_start":15,"column_end":27},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":765}},{"kind":"Use","ref_id":{"krate":32,"index":45},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14841,"byte_end":14872,"line_start":403,"line_end":403,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":32,"index":39},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":15208,"byte_end":15221,"line_start":412,"line_end":412,"column_start":35,"column_end":48},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":32,"index":42},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":15328,"byte_end":15341,"line_start":415,"line_end":415,"column_start":35,"column_end":48},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":896},{"krate":0,"index":83},{"krate":0,"index":177},{"krate":0,"index":308},{"krate":0,"index":373},{"krate":0,"index":509},{"krate":0,"index":556},{"krate":0,"index":3792},{"krate":0,"index":562},{"krate":0,"index":746},{"krate":0,"index":5315},{"krate":0,"index":5457},{"krate":0,"index":6146},{"krate":0,"index":7863},{"krate":0,"index":7864},{"krate":0,"index":8067},{"krate":0,"index":765},{"krate":0,"index":9077},{"krate":0,"index":9078},{"krate":0,"index":9079}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":56,"byte_end":168,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":169,"byte_end":275,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":276,"byte_end":319,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/ A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":518,"byte_end":590,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":591,"byte_end":594,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":595,"byte_end":675,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":676,"byte_end":748,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":749,"byte_end":785,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":786,"byte_end":789,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":790,"byte_end":857,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":858,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":939,"byte_end":962,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":963,"byte_end":1050,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1051,"byte_end":1124,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1125,"byte_end":1203,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1204,"byte_end":1284,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1285,"byte_end":1335,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1336,"byte_end":1339,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1340,"byte_end":1396,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1397,"byte_end":1400,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1401,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1458,"byte_end":1481,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1482,"byte_end":1508,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1509,"byte_end":1530,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1531,"byte_end":1550,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1551,"byte_end":1580,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1581,"byte_end":1608,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1609,"byte_end":1628,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1629,"byte_end":1658,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/docs/overview/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1659,"byte_end":1705,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1706,"byte_end":1709,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1710,"byte_end":1731,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1732,"byte_end":1735,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1736,"byte_end":1815,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1816,"byte_end":1889,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1890,"byte_end":1969,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1970,"byte_end":1985,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1986,"byte_end":1989,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1990,"byte_end":2062,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2063,"byte_end":2100,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2101,"byte_end":2104,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2105,"byte_end":2116,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2117,"byte_end":2169,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2170,"byte_end":2177,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2178,"byte_end":2181,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2182,"byte_end":2202,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2203,"byte_end":2206,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2207,"byte_end":2288,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2289,"byte_end":2367,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2368,"byte_end":2448,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2449,"byte_end":2526,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2527,"byte_end":2610,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2611,"byte_end":2688,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2689,"byte_end":2776,"line_start":72,"line_end":72,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2777,"byte_end":2858,"line_start":73,"line_end":73,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2859,"byte_end":2868,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2869,"byte_end":2872,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2873,"byte_end":2938,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"/ - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2939,"byte_end":3021,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"/ - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3022,"byte_end":3104,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3105,"byte_end":3154,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"/ - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3155,"byte_end":3208,"line_start":80,"line_end":80,"column_start":1,"column_end":54}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3209,"byte_end":3260,"line_start":81,"line_end":81,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3261,"byte_end":3321,"line_start":82,"line_end":82,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3322,"byte_end":3412,"line_start":83,"line_end":83,"column_start":1,"column_end":91}},{"value":"/ - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3413,"byte_end":3462,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/ - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3463,"byte_end":3512,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3513,"byte_end":3563,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3564,"byte_end":3641,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"/ the built in timer.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3642,"byte_end":3665,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3666,"byte_end":3714,"line_start":89,"line_end":89,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3715,"byte_end":3784,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3785,"byte_end":3831,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"/ - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3832,"byte_end":3913,"line_start":92,"line_end":92,"column_start":1,"column_end":82}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3914,"byte_end":3964,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3965,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":39}},{"value":"/ - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4004,"byte_end":4059,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4060,"byte_end":4138,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4139,"byte_end":4203,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4204,"byte_end":4207,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4208,"byte_end":4290,"line_start":99,"line_end":99,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4291,"byte_end":4313,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4314,"byte_end":4317,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4318,"byte_end":4343,"line_start":102,"line_end":102,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4344,"byte_end":4347,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4348,"byte_end":4416,"line_start":104,"line_end":104,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4417,"byte_end":4480,"line_start":105,"line_end":105,"column_start":1,"column_end":64}},{"value":"/ dependencies. They are not included in `full`:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4481,"byte_end":4531,"line_start":106,"line_end":106,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4532,"byte_end":4535,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4536,"byte_end":4615,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4616,"byte_end":4693,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4694,"byte_end":4727,"line_start":110,"line_end":110,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4728,"byte_end":4731,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4732,"byte_end":4829,"line_start":112,"line_end":112,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4830,"byte_end":4833,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4834,"byte_end":4864,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4865,"byte_end":4868,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4869,"byte_end":4950,"line_start":116,"line_end":116,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4951,"byte_end":5036,"line_start":117,"line_end":117,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5037,"byte_end":5121,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5122,"byte_end":5152,"line_start":119,"line_end":119,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5153,"byte_end":5156,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5157,"byte_end":5173,"line_start":121,"line_end":121,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5174,"byte_end":5177,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5178,"byte_end":5244,"line_start":123,"line_end":123,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5245,"byte_end":5248,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5249,"byte_end":5260,"line_start":125,"line_end":125,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5261,"byte_end":5313,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5314,"byte_end":5321,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5322,"byte_end":5325,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5326,"byte_end":5353,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5354,"byte_end":5357,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5358,"byte_end":5437,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5438,"byte_end":5520,"line_start":132,"line_end":132,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5521,"byte_end":5602,"line_start":133,"line_end":133,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5603,"byte_end":5638,"line_start":134,"line_end":134,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5639,"byte_end":5642,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5643,"byte_end":5659,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5660,"byte_end":5663,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5664,"byte_end":5746,"line_start":138,"line_end":138,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5747,"byte_end":5797,"line_start":139,"line_end":139,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5798,"byte_end":5801,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5802,"byte_end":5813,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5814,"byte_end":5876,"line_start":142,"line_end":142,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5877,"byte_end":5884,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5885,"byte_end":5888,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5889,"byte_end":5914,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5915,"byte_end":5918,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5919,"byte_end":5995,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5996,"byte_end":6079,"line_start":148,"line_end":148,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6080,"byte_end":6123,"line_start":149,"line_end":149,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6124,"byte_end":6127,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6128,"byte_end":6207,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6208,"byte_end":6291,"line_start":152,"line_end":152,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6292,"byte_end":6370,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6371,"byte_end":6390,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6391,"byte_end":6394,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6395,"byte_end":6473,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ is enabled.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6474,"byte_end":6489,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6490,"byte_end":6493,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6494,"byte_end":6537,"line_start":159,"line_end":159,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6538,"byte_end":6570,"line_start":160,"line_end":160,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6571,"byte_end":6606,"line_start":161,"line_end":161,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6607,"byte_end":6650,"line_start":162,"line_end":162,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6651,"byte_end":6704,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6705,"byte_end":6708,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6709,"byte_end":6787,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6788,"byte_end":6844,"line_start":166,"line_end":166,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6845,"byte_end":6848,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6849,"byte_end":6922,"line_start":168,"line_end":168,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6923,"byte_end":6943,"line_start":169,"line_end":169,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6944,"byte_end":7019,"line_start":170,"line_end":170,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7020,"byte_end":7032,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7033,"byte_end":7113,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7114,"byte_end":7144,"line_start":173,"line_end":173,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7145,"byte_end":7148,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7149,"byte_end":7225,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7226,"byte_end":7238,"line_start":176,"line_end":176,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7239,"byte_end":7242,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7243,"byte_end":7275,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7276,"byte_end":7309,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7310,"byte_end":7347,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7348,"byte_end":7385,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7386,"byte_end":7417,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7418,"byte_end":7451,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7452,"byte_end":7455,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7456,"byte_end":7527,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7528,"byte_end":7608,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"/ tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7609,"byte_end":7697,"line_start":187,"line_end":187,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7698,"byte_end":7722,"line_start":188,"line_end":188,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7723,"byte_end":7726,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7727,"byte_end":7802,"line_start":190,"line_end":190,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7803,"byte_end":7806,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7807,"byte_end":7839,"line_start":192,"line_end":192,"column_start":1,"column_end":33}},{"value":"/ [delay]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7840,"byte_end":7877,"line_start":193,"line_end":193,"column_start":1,"column_end":38}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7878,"byte_end":7917,"line_start":194,"line_end":194,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7918,"byte_end":7955,"line_start":195,"line_end":195,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7956,"byte_end":7959,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7960,"byte_end":8038,"line_start":197,"line_end":197,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8039,"byte_end":8123,"line_start":198,"line_end":198,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8124,"byte_end":8196,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"/ required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8197,"byte_end":8274,"line_start":200,"line_end":200,"column_start":1,"column_end":78}},{"value":"/ managing runtimes.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8275,"byte_end":8297,"line_start":201,"line_end":201,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8298,"byte_end":8301,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8302,"byte_end":8381,"line_start":203,"line_end":203,"column_start":1,"column_end":80}},{"value":"/ enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8382,"byte_end":8460,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"/ scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8461,"byte_end":8529,"line_start":205,"line_end":205,"column_start":1,"column_end":69}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8530,"byte_end":8608,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8609,"byte_end":8679,"line_start":207,"line_end":207,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8680,"byte_end":8683,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8684,"byte_end":8710,"line_start":209,"line_end":209,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8711,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8750,"byte_end":8790,"line_start":211,"line_end":211,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8791,"byte_end":8831,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"/ [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8832,"byte_end":8881,"line_start":213,"line_end":213,"column_start":1,"column_end":50}},{"value":"/ [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8882,"byte_end":8938,"line_start":214,"line_end":214,"column_start":1,"column_end":57}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8939,"byte_end":8994,"line_start":215,"line_end":215,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8995,"byte_end":8998,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8999,"byte_end":9039,"line_start":217,"line_end":217,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9040,"byte_end":9043,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9044,"byte_end":9123,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9124,"byte_end":9201,"line_start":220,"line_end":220,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9202,"byte_end":9282,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9283,"byte_end":9357,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9358,"byte_end":9437,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9438,"byte_end":9515,"line_start":224,"line_end":224,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9516,"byte_end":9589,"line_start":225,"line_end":225,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9590,"byte_end":9670,"line_start":226,"line_end":226,"column_start":1,"column_end":81}},{"value":"/ block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9671,"byte_end":9749,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"/ out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9750,"byte_end":9828,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ on the number of blocking threads is very large. These limits can be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9829,"byte_end":9901,"line_start":229,"line_end":229,"column_start":1,"column_end":73}},{"value":"/ configured on the [`Builder`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9902,"byte_end":9936,"line_start":230,"line_end":230,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9937,"byte_end":9940,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9941,"byte_end":10018,"line_start":232,"line_end":232,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10019,"byte_end":10022,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10023,"byte_end":10063,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10064,"byte_end":10117,"line_start":235,"line_end":235,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10118,"byte_end":10121,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10122,"byte_end":10129,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10130,"byte_end":10148,"line_start":238,"line_end":238,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10149,"byte_end":10170,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10171,"byte_end":10215,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10216,"byte_end":10219,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10220,"byte_end":10280,"line_start":242,"line_end":242,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10281,"byte_end":10333,"line_start":243,"line_end":243,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10334,"byte_end":10369,"line_start":244,"line_end":244,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10370,"byte_end":10381,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10382,"byte_end":10385,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10386,"byte_end":10441,"line_start":247,"line_end":247,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10442,"byte_end":10517,"line_start":248,"line_end":248,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10518,"byte_end":10535,"line_start":249,"line_end":249,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10536,"byte_end":10573,"line_start":250,"line_end":250,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10574,"byte_end":10579,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10580,"byte_end":10587,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10588,"byte_end":10591,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10592,"byte_end":10670,"line_start":254,"line_end":254,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10671,"byte_end":10747,"line_start":255,"line_end":255,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10748,"byte_end":10824,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10825,"byte_end":10849,"line_start":257,"line_end":257,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10850,"byte_end":10853,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10854,"byte_end":10888,"line_start":259,"line_end":259,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10889,"byte_end":10926,"line_start":260,"line_end":260,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10927,"byte_end":10930,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10931,"byte_end":10953,"line_start":262,"line_end":262,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10954,"byte_end":10957,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10958,"byte_end":11037,"line_start":264,"line_end":264,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11038,"byte_end":11085,"line_start":265,"line_end":265,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11086,"byte_end":11089,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11090,"byte_end":11169,"line_start":267,"line_end":267,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11170,"byte_end":11250,"line_start":268,"line_end":268,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11251,"byte_end":11331,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11332,"byte_end":11403,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11404,"byte_end":11484,"line_start":271,"line_end":271,"column_start":1,"column_end":81}},{"value":"/ also provides utilities for library authors implementing I/O resources.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11485,"byte_end":11560,"line_start":272,"line_end":272,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11561,"byte_end":11564,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11565,"byte_end":11645,"line_start":274,"line_end":274,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11646,"byte_end":11706,"line_start":275,"line_end":275,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11707,"byte_end":11710,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11711,"byte_end":11790,"line_start":277,"line_end":277,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11791,"byte_end":11860,"line_start":278,"line_end":278,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11861,"byte_end":11938,"line_start":279,"line_end":279,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11939,"byte_end":11995,"line_start":280,"line_end":280,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11996,"byte_end":12076,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12077,"byte_end":12122,"line_start":282,"line_end":282,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12123,"byte_end":12202,"line_start":283,"line_end":283,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12203,"byte_end":12237,"line_start":284,"line_end":284,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12238,"byte_end":12241,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12242,"byte_end":12270,"line_start":286,"line_end":286,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12271,"byte_end":12310,"line_start":287,"line_end":287,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12311,"byte_end":12352,"line_start":288,"line_end":288,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12353,"byte_end":12398,"line_start":289,"line_end":289,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12399,"byte_end":12423,"line_start":290,"line_end":290,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12424,"byte_end":12454,"line_start":291,"line_end":291,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12455,"byte_end":12481,"line_start":292,"line_end":292,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::udp","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12482,"byte_end":12508,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12509,"byte_end":12536,"line_start":294,"line_end":294,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12537,"byte_end":12565,"line_start":295,"line_end":295,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12566,"byte_end":12590,"line_start":296,"line_end":296,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12591,"byte_end":12627,"line_start":297,"line_end":297,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12628,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12667,"byte_end":12670,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12671,"byte_end":12685,"line_start":300,"line_end":300,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12686,"byte_end":12689,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12690,"byte_end":12719,"line_start":302,"line_end":302,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12720,"byte_end":12723,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12724,"byte_end":12737,"line_start":304,"line_end":304,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12738,"byte_end":12770,"line_start":305,"line_end":305,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12771,"byte_end":12797,"line_start":306,"line_end":306,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12798,"byte_end":12801,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12802,"byte_end":12820,"line_start":308,"line_end":308,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12821,"byte_end":12884,"line_start":309,"line_end":309,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12885,"byte_end":12955,"line_start":310,"line_end":310,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12956,"byte_end":12959,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12960,"byte_end":12974,"line_start":312,"line_end":312,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12975,"byte_end":13034,"line_start":313,"line_end":313,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13035,"byte_end":13038,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13039,"byte_end":13076,"line_start":315,"line_end":315,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13077,"byte_end":13117,"line_start":316,"line_end":316,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13118,"byte_end":13121,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13122,"byte_end":13202,"line_start":318,"line_end":318,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13203,"byte_end":13225,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13226,"byte_end":13289,"line_start":320,"line_end":320,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13290,"byte_end":13330,"line_start":321,"line_end":321,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13331,"byte_end":13381,"line_start":322,"line_end":322,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13382,"byte_end":13417,"line_start":323,"line_end":323,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13418,"byte_end":13453,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13454,"byte_end":13537,"line_start":325,"line_end":325,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13538,"byte_end":13573,"line_start":326,"line_end":326,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13574,"byte_end":13599,"line_start":327,"line_end":327,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13600,"byte_end":13622,"line_start":328,"line_end":328,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13623,"byte_end":13626,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13627,"byte_end":13669,"line_start":330,"line_end":330,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13670,"byte_end":13742,"line_start":331,"line_end":331,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13743,"byte_end":13821,"line_start":332,"line_end":332,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13822,"byte_end":13853,"line_start":333,"line_end":333,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13854,"byte_end":13875,"line_start":334,"line_end":334,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13876,"byte_end":13893,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13894,"byte_end":13909,"line_start":336,"line_end":336,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13910,"byte_end":13919,"line_start":337,"line_end":337,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13920,"byte_end":13925,"line_start":338,"line_end":338,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13926,"byte_end":13933,"line_start":339,"line_end":339,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":884},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14122,"byte_end":14134,"line_start":345,"line_end":345,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\support.rs","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1114},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1287}],"decl_id":null,"docs":" Asynchronous file and standard stream adaptation.","sig":null,"attributes":[{"value":"cfg(feature = \"fs\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":18938,"byte_end":18960,"line_start":115,"line_end":115,"column_start":13,"column_end":35}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10227725,"byte_end":10227743,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ Asynchronous file and standard stream adaptation.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10227745,"byte_end":10227798,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10227799,"byte_end":10227802,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains utility methods and adapter types for input/output to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10227803,"byte_end":10227881,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ files or standard streams (`Stdin`, `Stdout`, `Stderr`), and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10227882,"byte_end":10227946,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/ filesystem manipulation, for use within (and only within) a Tokio runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10227947,"byte_end":10228025,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228026,"byte_end":10228029,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Tasks run by *worker* threads should not block, as this could delay","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228030,"byte_end":10228101,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ servicing reactor events. Portable filesystem operations are blocking,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228102,"byte_end":10228176,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ however. This module offers adapters which use a `blocking` annotation","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228177,"byte_end":10228251,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ to inform the runtime that a blocking operation is required. When","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228252,"byte_end":10228321,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ necessary, this allows the runtime to convert the current thread from a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228322,"byte_end":10228397,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ *worker* to a *backup* thread, where blocking is acceptable.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228398,"byte_end":10228462,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228463,"byte_end":10228466,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228467,"byte_end":10228479,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228480,"byte_end":10228483,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Where possible, users should prefer the provided asynchronous-specific","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228484,"byte_end":10228558,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ traits such as [`AsyncRead`], or methods returning a `Future` or `Poll`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228559,"byte_end":10228634,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ type. Adaptions also extend to traits like `std::io::Read` where methods","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228635,"byte_end":10228711,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ return `std::io::Result`. Be warned that these adapted methods may return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228712,"byte_end":10228789,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ `std::io::ErrorKind::WouldBlock` if a *worker* thread can not be converted","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228790,"byte_end":10228868,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ to a *backup* thread immediately.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228869,"byte_end":10228906,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228907,"byte_end":10228910,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: https://docs.rs/tokio-io/0.1/tokio_io/trait.AsyncRead.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10228911,"byte_end":10228988,"line_start":25,"line_end":25,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232268,"byte_end":10232280,"line_start":48,"line_end":48,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical, absolute form of a path with all intermediate\n components normalized and symbolic links resolved.","sig":null,"attributes":[{"value":"/ Returns the canonical, absolute form of a path with all intermediate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10230762,"byte_end":10230834,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ components normalized and symbolic links resolved.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10230835,"byte_end":10230889,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10230890,"byte_end":10230893,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::canonicalize`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10230894,"byte_end":10230956,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10230957,"byte_end":10230960,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::canonicalize","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10230961,"byte_end":10230993,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10230994,"byte_end":10230997,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10230998,"byte_end":10231030,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231031,"byte_end":10231034,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `realpath` function on Unix","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231035,"byte_end":10231109,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ and the `CreateFile` and `GetFinalPathNameByHandle` functions on Windows.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231110,"byte_end":10231187,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231188,"byte_end":10231244,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231245,"byte_end":10231248,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ On Windows, this converts the path to use [extended length path][path]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231249,"byte_end":10231323,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ syntax, which allows your program to use longer path names, but means you","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231324,"byte_end":10231401,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ can only join backslash-delimited paths to it, and it may be incompatible","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231402,"byte_end":10231479,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ with other applications (if passed to the application on the command-line,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231480,"byte_end":10231558,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or written to a file another application may read).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231559,"byte_end":10231614,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231615,"byte_end":10231618,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231619,"byte_end":10231704,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ [path]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx#maxpath","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231705,"byte_end":10231804,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231805,"byte_end":10231808,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231809,"byte_end":10231821,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231822,"byte_end":10231825,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231826,"byte_end":10231904,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231905,"byte_end":10231937,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231938,"byte_end":10231941,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * `path` does not exist.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231942,"byte_end":10231970,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ * A non-final component in path is not a directory.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10231971,"byte_end":10232026,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232027,"byte_end":10232030,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232031,"byte_end":10232045,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232046,"byte_end":10232049,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232050,"byte_end":10232063,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232064,"byte_end":10232082,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232083,"byte_end":10232099,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232100,"byte_end":10232103,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232104,"byte_end":10232122,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232123,"byte_end":10232162,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/     let path = fs::canonicalize(\"../a/../foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232163,"byte_end":10232225,"line_start":44,"line_end":44,"column_start":1,"column_end":63}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232226,"byte_end":10232240,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232241,"byte_end":10232246,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\canonicalize.rs","byte_start":10232247,"byte_end":10232254,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233837,"byte_end":10233847,"line_start":49,"line_end":49,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty directory at the provided path","sig":null,"attributes":[{"value":"/ Creates a new, empty directory at the provided path","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232491,"byte_end":10232546,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232547,"byte_end":10232550,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232551,"byte_end":10232611,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232612,"byte_end":10232615,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232616,"byte_end":10232646,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232647,"byte_end":10232650,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232651,"byte_end":10232683,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232684,"byte_end":10232687,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232688,"byte_end":10232759,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232760,"byte_end":10232810,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232811,"byte_end":10232867,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232868,"byte_end":10232871,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232872,"byte_end":10232957,"line_start":18,"line_end":18,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232958,"byte_end":10232961,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If a parent of the given path doesn't exist, this function will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10232962,"byte_end":10233039,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ return an error. To create a directory and all its missing parents at the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233040,"byte_end":10233117,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ same time, use the [`create_dir_all`] function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233118,"byte_end":10233169,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233170,"byte_end":10233173,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233174,"byte_end":10233186,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233187,"byte_end":10233190,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233191,"byte_end":10233269,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233270,"byte_end":10233302,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233303,"byte_end":10233306,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * User lacks permissions to create directory at `path`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233307,"byte_end":10233366,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ * A parent of the given path doesn't exist. (To create a directory and all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233367,"byte_end":10233445,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   its missing parents at the same time, use the [`create_dir_all`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233446,"byte_end":10233516,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/   function.)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233517,"byte_end":10233533,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ * `path` already exists.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233534,"byte_end":10233562,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233563,"byte_end":10233566,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: super::create_dir_all()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233567,"byte_end":10233614,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233615,"byte_end":10233618,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233619,"byte_end":10233633,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233634,"byte_end":10233637,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233638,"byte_end":10233651,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233652,"byte_end":10233670,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233671,"byte_end":10233687,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233688,"byte_end":10233691,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233692,"byte_end":10233710,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233711,"byte_end":10233750,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/     fs::create_dir(\"/some/dir\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233751,"byte_end":10233794,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233795,"byte_end":10233809,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233810,"byte_end":10233815,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir.rs","byte_start":10233816,"byte_end":10233823,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235600,"byte_end":10235614,"line_start":50,"line_end":50,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Recursively creates a directory and all of its parent components if they\n are missing.","sig":null,"attributes":[{"value":"/ Recursively creates a directory and all of its parent components if they","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234051,"byte_end":10234127,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ are missing.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234128,"byte_end":10234144,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234145,"byte_end":10234148,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir_all`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234149,"byte_end":10234213,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234214,"byte_end":10234217,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir_all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234218,"byte_end":10234252,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234253,"byte_end":10234256,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234257,"byte_end":10234289,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234290,"byte_end":10234293,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234294,"byte_end":10234365,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234366,"byte_end":10234416,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234417,"byte_end":10234473,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234474,"byte_end":10234477,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234478,"byte_end":10234563,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234564,"byte_end":10234567,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234568,"byte_end":10234580,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234581,"byte_end":10234584,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234585,"byte_end":10234663,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234664,"byte_end":10234696,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234697,"byte_end":10234700,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * If any directory in the path specified by `path` does not already exist","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234701,"byte_end":10234778,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ and it could not be created otherwise. The specific error conditions for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234779,"byte_end":10234855,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ when a directory is being created (after it is determined to not exist) are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234856,"byte_end":10234935,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ outlined by [`fs::create_dir`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234936,"byte_end":10234971,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234972,"byte_end":10234975,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Notable exception is made for situations where any of the directories","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10234976,"byte_end":10235049,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ specified in the `path` could not be created as it was being created concurrently.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235050,"byte_end":10235136,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ Such cases are considered to be successful. That is, calling `create_dir_all`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235137,"byte_end":10235218,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ concurrently from multiple threads or processes is guaranteed not to fail","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235219,"byte_end":10235296,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ due to a race condition with itself.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235297,"byte_end":10235337,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235338,"byte_end":10235341,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`fs::create_dir`]: std::fs::create_dir","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235342,"byte_end":10235385,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235386,"byte_end":10235389,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235390,"byte_end":10235404,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235405,"byte_end":10235408,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235409,"byte_end":10235422,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235423,"byte_end":10235441,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235442,"byte_end":10235445,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235446,"byte_end":10235464,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235465,"byte_end":10235509,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/     fs::create_dir_all(\"/some/dir\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235510,"byte_end":10235557,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235558,"byte_end":10235572,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235573,"byte_end":10235578,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\create_dir_all.rs","byte_start":10235579,"byte_end":10235586,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236230,"byte_end":10236240,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":1292}],"decl_id":null,"docs":" A builder for creating directories in various manners.","sig":null,"attributes":[{"value":"/ A builder for creating directories in various manners.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10235822,"byte_end":10235880,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10235881,"byte_end":10235884,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Additional Unix-specific options are available via importing the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10235885,"byte_end":10235953,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ [`DirBuilderExt`] trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10235954,"byte_end":10235982,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10235983,"byte_end":10235986,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirBuilder`] for usage on","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10235987,"byte_end":10236060,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ the Tokio runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236061,"byte_end":10236083,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236084,"byte_end":10236087,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std::fs::DirBuilder]: std::fs::DirBuilder","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236088,"byte_end":10236134,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`DirBuilderExt`]: crate::fs::os::unix::DirBuilderExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236135,"byte_end":10236192,"line_start":15,"line_end":15,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236879,"byte_end":10236882,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of options with default mode/security settings for all\n platforms and also non-recursive.","sig":null,"attributes":[{"value":"/ Creates a new set of options with default mode/security settings for all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236474,"byte_end":10236550,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ platforms and also non-recursive.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236555,"byte_end":10236592,"line_start":28,"line_end":28,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236597,"byte_end":10236600,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::new`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236605,"byte_end":10236670,"line_start":30,"line_end":30,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236675,"byte_end":10236678,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::new","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236683,"byte_end":10236718,"line_start":32,"line_end":32,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236723,"byte_end":10236726,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236731,"byte_end":10236745,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236750,"byte_end":10236753,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236758,"byte_end":10236771,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236776,"byte_end":10236806,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236811,"byte_end":10236814,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236819,"byte_end":10236855,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236860,"byte_end":10236867,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237504,"byte_end":10237513,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether to create directories recursively (including all parent directories).\n Parents that do not exist are created with the same security and permissions settings.","sig":null,"attributes":[{"value":"/ Indicates whether to create directories recursively (including all parent directories).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236933,"byte_end":10237024,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ Parents that do not exist are created with the same security and permissions settings.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237029,"byte_end":10237119,"line_start":46,"line_end":46,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237124,"byte_end":10237127,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This option defaults to `false`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237132,"byte_end":10237168,"line_start":48,"line_end":48,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237173,"byte_end":10237176,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::recursive`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237181,"byte_end":10237252,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237257,"byte_end":10237260,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::recursive","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237265,"byte_end":10237306,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237311,"byte_end":10237314,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237319,"byte_end":10237333,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237338,"byte_end":10237341,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237346,"byte_end":10237359,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237364,"byte_end":10237394,"line_start":57,"line_end":57,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237399,"byte_end":10237402,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237407,"byte_end":10237447,"line_start":59,"line_end":59,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237452,"byte_end":10237480,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237485,"byte_end":10237492,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238718,"byte_end":10238724,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"create","qualname":"<DirBuilder>::create","value":"pub async fn create<P: AsRef<Path>, '_>(&'_ Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates the specified directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates the specified directory with the configured options.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237617,"byte_end":10237681,"line_start":67,"line_end":67,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237686,"byte_end":10237689,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237694,"byte_end":10237762,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ recursive mode is enabled.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237767,"byte_end":10237797,"line_start":70,"line_end":70,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237802,"byte_end":10237805,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::create`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237810,"byte_end":10237878,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237883,"byte_end":10237886,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::create","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237891,"byte_end":10237929,"line_start":74,"line_end":74,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237934,"byte_end":10237937,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237942,"byte_end":10237954,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237959,"byte_end":10237962,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned under the following circumstances:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10237967,"byte_end":10238031,"line_start":78,"line_end":78,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238036,"byte_end":10238039,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * Path already points to an existing file.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238044,"byte_end":10238090,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/ * Path already points to an existing directory and the mode is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238095,"byte_end":10238161,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"/   non-recursive.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238166,"byte_end":10238186,"line_start":82,"line_end":82,"column_start":5,"column_end":25}},{"value":"/ * The calling process doesn't have permissions to create the directory","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238191,"byte_end":10238265,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/   or its missing parents.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238270,"byte_end":10238299,"line_start":84,"line_end":84,"column_start":5,"column_end":34}},{"value":"/ * Other I/O error occurred.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238304,"byte_end":10238335,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238340,"byte_end":10238343,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238348,"byte_end":10238362,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238367,"byte_end":10238370,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238375,"byte_end":10238388,"line_start":89,"line_end":89,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238393,"byte_end":10238423,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238428,"byte_end":10238444,"line_start":91,"line_end":91,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238449,"byte_end":10238452,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238457,"byte_end":10238475,"line_start":93,"line_end":93,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238480,"byte_end":10238519,"line_start":94,"line_end":94,"column_start":5,"column_end":44}},{"value":"/     DirBuilder::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238524,"byte_end":10238549,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/         .recursive(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238554,"byte_end":10238582,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/         .create(\"/tmp/foo/bar/baz\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238587,"byte_end":10238626,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238631,"byte_end":10238651,"line_start":98,"line_end":98,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238656,"byte_end":10238659,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238664,"byte_end":10238678,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238683,"byte_end":10238688,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10238693,"byte_end":10238700,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":967},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241730,"byte_end":10241734,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"decl_id":null,"docs":" A reference to an open file on the filesystem.","sig":null,"attributes":[{"value":"/ A reference to an open file on the filesystem.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10239597,"byte_end":10239647,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10239648,"byte_end":10239651,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::File`][std] for usage from the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10239652,"byte_end":10239730,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ Tokio runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10239731,"byte_end":10239749,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10239750,"byte_end":10239753,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ An instance of a `File` can be read and/or written depending on what options","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10239754,"byte_end":10239834,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ it was opened with. Files also implement [`AsyncSeek`] to alter the logical","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10239835,"byte_end":10239914,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ cursor that the file contains internally.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10239915,"byte_end":10239960,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10239961,"byte_end":10239964,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A file will not be closed immediately when it goes out of scope if there","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10239965,"byte_end":10240041,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ are any IO operations that have not yet completed. To ensure that a file is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240042,"byte_end":10240121,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ closed immediately when it is dropped, you should call [`flush`] before","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240122,"byte_end":10240197,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ dropping it. Note that this does not ensure that the file has been fully","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240198,"byte_end":10240274,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ written to disk; the operating system might keep the changes around in an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240275,"byte_end":10240352,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ in-memory buffer. See the [`sync_all`] method for telling the OS to write","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240353,"byte_end":10240430,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ the data to disk.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240431,"byte_end":10240452,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240453,"byte_end":10240456,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Reading and writing to a `File` is usually done using the convenience","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240457,"byte_end":10240530,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ methods found on the [`AsyncReadExt`] and [`AsyncWriteExt`] traits. Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240531,"byte_end":10240611,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ import these traits through [the prelude].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240612,"byte_end":10240658,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240659,"byte_end":10240662,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [std]: struct@std::fs::File","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240663,"byte_end":10240694,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ [`AsyncSeek`]: trait@crate::io::AsyncSeek","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240695,"byte_end":10240740,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ [`flush`]: fn@crate::io::AsyncWriteExt::flush","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240741,"byte_end":10240790,"line_start":44,"line_end":44,"column_start":1,"column_end":50}},{"value":"/ [`sync_all`]: fn@crate::fs::File::sync_all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240791,"byte_end":10240837,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240838,"byte_end":10240889,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240890,"byte_end":10240943,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240944,"byte_end":10240977,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240978,"byte_end":10240981,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240982,"byte_end":10240996,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10240997,"byte_end":10241000,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Create a new file and asynchronously write bytes to it:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241001,"byte_end":10241060,"line_start":52,"line_end":52,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241061,"byte_end":10241064,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241065,"byte_end":10241078,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241079,"byte_end":10241103,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for write_all()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241104,"byte_end":10241149,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241150,"byte_end":10241153,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241154,"byte_end":10241199,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241200,"byte_end":10241250,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241251,"byte_end":10241295,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241296,"byte_end":10241308,"line_start":61,"line_end":61,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241309,"byte_end":10241316,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241317,"byte_end":10241324,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241325,"byte_end":10241328,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a buffer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241329,"byte_end":10241374,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241375,"byte_end":10241378,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241379,"byte_end":10241392,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241393,"byte_end":10241417,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for read_to_end()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241418,"byte_end":10241465,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241466,"byte_end":10241469,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241470,"byte_end":10241515,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241516,"byte_end":10241564,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241565,"byte_end":10241568,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ let mut contents = vec![];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241569,"byte_end":10241599,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241600,"byte_end":10241643,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241644,"byte_end":10241647,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241648,"byte_end":10241689,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241690,"byte_end":10241702,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241703,"byte_end":10241710,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10241711,"byte_end":10241718,"line_start":80,"line_end":80,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243280,"byte_end":10243284,"line_start":138,"line_end":138,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242249,"byte_end":10242295,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242300,"byte_end":10242303,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242308,"byte_end":10242349,"line_start":107,"line_end":107,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242354,"byte_end":10242357,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242362,"byte_end":10242401,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242406,"byte_end":10242409,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242414,"byte_end":10242426,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242431,"byte_end":10242434,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if called from outside of the Tokio","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242439,"byte_end":10242513,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ runtime or if path does not already exist. Other errors may also be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242518,"byte_end":10242589,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ returned according to OpenOptions::open.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242594,"byte_end":10242638,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242643,"byte_end":10242646,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242651,"byte_end":10242665,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242670,"byte_end":10242673,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242678,"byte_end":10242691,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242696,"byte_end":10242720,"line_start":120,"line_end":120,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242725,"byte_end":10242751,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242756,"byte_end":10242759,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242764,"byte_end":10242809,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242814,"byte_end":10242862,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242867,"byte_end":10242870,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242875,"byte_end":10242905,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242910,"byte_end":10242953,"line_start":127,"line_end":127,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242958,"byte_end":10242961,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242966,"byte_end":10243007,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243012,"byte_end":10243024,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243029,"byte_end":10243036,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243041,"byte_end":10243048,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243053,"byte_end":10243056,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The [`read_to_end`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243061,"byte_end":10243133,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243138,"byte_end":10243141,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`read_to_end`]: fn@crate::io::AsyncReadExt::read_to_end","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243146,"byte_end":10243206,"line_start":136,"line_end":136,"column_start":5,"column_end":65}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243211,"byte_end":10243262,"line_start":137,"line_end":137,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244502,"byte_end":10244508,"line_start":178,"line_end":178,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243481,"byte_end":10243517,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243522,"byte_end":10243525,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243530,"byte_end":10243606,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ it if it does.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243611,"byte_end":10243629,"line_start":148,"line_end":148,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243634,"byte_end":10243637,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243642,"byte_end":10243683,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243688,"byte_end":10243691,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243696,"byte_end":10243735,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243740,"byte_end":10243743,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243748,"byte_end":10243760,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243765,"byte_end":10243768,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Results in an error if called from outside of the Tokio runtime or if","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243773,"byte_end":10243846,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ the underlying [`create`] call results in an error.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243851,"byte_end":10243906,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243911,"byte_end":10243914,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`create`]: std::fs::File::create","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243919,"byte_end":10243956,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243961,"byte_end":10243964,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243969,"byte_end":10243983,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243988,"byte_end":10243991,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10243996,"byte_end":10244009,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244014,"byte_end":10244038,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244043,"byte_end":10244069,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244074,"byte_end":10244077,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244082,"byte_end":10244127,"line_start":167,"line_end":167,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244132,"byte_end":10244182,"line_start":168,"line_end":168,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244187,"byte_end":10244231,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244236,"byte_end":10244248,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244253,"byte_end":10244260,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244265,"byte_end":10244272,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244277,"byte_end":10244280,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244285,"byte_end":10244356,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244361,"byte_end":10244364,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244369,"byte_end":10244426,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244431,"byte_end":10244484,"line_start":177,"line_end":177,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245145,"byte_end":10245153,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"from_std","qualname":"<File>::from_std","value":"pub fn from_std(sys::File) -> File","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","sig":null,"attributes":[{"value":"/ Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244721,"byte_end":10244790,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244795,"byte_end":10244798,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244803,"byte_end":10244827,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/ [file]: File","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244832,"byte_end":10244848,"line_start":187,"line_end":187,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244853,"byte_end":10244856,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244861,"byte_end":10244875,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244880,"byte_end":10244883,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244888,"byte_end":10244901,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ // This line could block. It is not recommended to do this on the Tokio","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244906,"byte_end":10244981,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ // runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10244986,"byte_end":10245001,"line_start":193,"line_end":193,"column_start":5,"column_end":20}},{"value":"/ let std_file = std::fs::File::open(\"foo.txt\").unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245006,"byte_end":10245065,"line_start":194,"line_end":194,"column_start":5,"column_end":64}},{"value":"/ let file = tokio::fs::File::from_std(std_file);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245070,"byte_end":10245121,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245126,"byte_end":10245133,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10246065,"byte_end":10246069,"line_start":229,"line_end":229,"column_start":18,"column_end":22},"name":"seek","qualname":"<File>::seek","value":"pub async fn seek<'_>(&'_ mut Self, SeekFrom) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Seeks to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Seeks to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245343,"byte_end":10245389,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245394,"byte_end":10245397,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245402,"byte_end":10245416,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245421,"byte_end":10245424,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245429,"byte_end":10245442,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245447,"byte_end":10245471,"line_start":210,"line_end":210,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245476,"byte_end":10245502,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245507,"byte_end":10245510,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245515,"byte_end":10245541,"line_start":213,"line_end":213,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245546,"byte_end":10245549,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245554,"byte_end":10245599,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245604,"byte_end":10245652,"line_start":216,"line_end":216,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245657,"byte_end":10245698,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245703,"byte_end":10245706,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245711,"byte_end":10245748,"line_start":219,"line_end":219,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245753,"byte_end":10245795,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245800,"byte_end":10245812,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245817,"byte_end":10245824,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245829,"byte_end":10245836,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245841,"byte_end":10245844,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The [`read_exact`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245849,"byte_end":10245920,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245925,"byte_end":10245928,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ [`read_exact`]: fn@crate::io::AsyncReadExt::read_exact","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245933,"byte_end":10245991,"line_start":227,"line_end":227,"column_start":5,"column_end":63}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10245996,"byte_end":10246047,"line_start":228,"line_end":228,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247810,"byte_end":10247818,"line_start":290,"line_end":290,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to sync all OS-internal metadata to disk.","sig":null,"attributes":[{"value":"/ Attempts to sync all OS-internal metadata to disk.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247054,"byte_end":10247108,"line_start":267,"line_end":267,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247113,"byte_end":10247116,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to ensure that all in-core data reaches the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247121,"byte_end":10247195,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/ filesystem before returning.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247200,"byte_end":10247232,"line_start":270,"line_end":270,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247237,"byte_end":10247240,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247245,"byte_end":10247259,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247264,"byte_end":10247267,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247272,"byte_end":10247285,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247290,"byte_end":10247314,"line_start":275,"line_end":275,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247319,"byte_end":10247345,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247350,"byte_end":10247353,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247358,"byte_end":10247403,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247408,"byte_end":10247458,"line_start":279,"line_end":279,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247463,"byte_end":10247507,"line_start":280,"line_end":280,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247512,"byte_end":10247539,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247544,"byte_end":10247556,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247561,"byte_end":10247568,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247573,"byte_end":10247580,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247585,"byte_end":10247588,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247593,"byte_end":10247664,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247669,"byte_end":10247672,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247677,"byte_end":10247734,"line_start":288,"line_end":288,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247739,"byte_end":10247792,"line_start":289,"line_end":289,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248959,"byte_end":10248968,"line_start":324,"line_end":324,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function is similar to `sync_all`, except that it may not\n synchronize file metadata to the filesystem.","sig":null,"attributes":[{"value":"/ This function is similar to `sync_all`, except that it may not","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10247985,"byte_end":10248051,"line_start":297,"line_end":297,"column_start":5,"column_end":71}},{"value":"/ synchronize file metadata to the filesystem.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248056,"byte_end":10248104,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248109,"byte_end":10248112,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize content, but don't","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248117,"byte_end":10248192,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ need the metadata on disk. The goal of this method is to reduce disk","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248197,"byte_end":10248269,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ operations.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248274,"byte_end":10248289,"line_start":302,"line_end":302,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248294,"byte_end":10248297,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of `sync_all`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248302,"byte_end":10248380,"line_start":304,"line_end":304,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248385,"byte_end":10248388,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248393,"byte_end":10248407,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248412,"byte_end":10248415,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248420,"byte_end":10248433,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248438,"byte_end":10248462,"line_start":309,"line_end":309,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248467,"byte_end":10248493,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248498,"byte_end":10248501,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248506,"byte_end":10248551,"line_start":312,"line_end":312,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248556,"byte_end":10248606,"line_start":313,"line_end":313,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248611,"byte_end":10248655,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248660,"byte_end":10248688,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248693,"byte_end":10248705,"line_start":316,"line_end":316,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248710,"byte_end":10248717,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248722,"byte_end":10248729,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248734,"byte_end":10248737,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248742,"byte_end":10248813,"line_start":320,"line_end":320,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248818,"byte_end":10248821,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248826,"byte_end":10248883,"line_start":322,"line_end":322,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10248888,"byte_end":10248941,"line_start":323,"line_end":323,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10250193,"byte_end":10250200,"line_start":361,"line_end":361,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ mut Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the underlying file, updating the size of this file to become size.","sig":null,"attributes":[{"value":"/ Truncates or extends the underlying file, updating the size of this file to become size.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249136,"byte_end":10249228,"line_start":331,"line_end":331,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249233,"byte_end":10249236,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If the size is less than the current file's size, then the file will be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249241,"byte_end":10249316,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ shrunk. If it is greater than the current file's size, then the file","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249321,"byte_end":10249393,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ will be extended to size and have all of the intermediate data filled in","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249398,"byte_end":10249474,"line_start":335,"line_end":335,"column_start":5,"column_end":81}},{"value":"/ with 0s.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249479,"byte_end":10249491,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249496,"byte_end":10249499,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249504,"byte_end":10249516,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249521,"byte_end":10249524,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the file is not opened for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249529,"byte_end":10249597,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ writing.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249602,"byte_end":10249614,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249619,"byte_end":10249622,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249627,"byte_end":10249641,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249646,"byte_end":10249649,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249654,"byte_end":10249667,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249672,"byte_end":10249696,"line_start":346,"line_end":346,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249701,"byte_end":10249727,"line_start":347,"line_end":347,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249732,"byte_end":10249735,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249740,"byte_end":10249785,"line_start":349,"line_end":349,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249790,"byte_end":10249840,"line_start":350,"line_end":350,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249845,"byte_end":10249889,"line_start":351,"line_end":351,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249894,"byte_end":10249922,"line_start":352,"line_end":352,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249927,"byte_end":10249939,"line_start":353,"line_end":353,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249944,"byte_end":10249951,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249956,"byte_end":10249963,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249968,"byte_end":10249971,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10249976,"byte_end":10250047,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10250052,"byte_end":10250055,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10250060,"byte_end":10250117,"line_start":359,"line_end":359,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10250122,"byte_end":10250175,"line_start":360,"line_end":360,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251686,"byte_end":10251694,"line_start":417,"line_end":417,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries metadata about the underlying file.","sig":null,"attributes":[{"value":"/ Queries metadata about the underlying file.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251300,"byte_end":10251347,"line_start":402,"line_end":402,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251352,"byte_end":10251355,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251360,"byte_end":10251374,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251379,"byte_end":10251382,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251387,"byte_end":10251400,"line_start":406,"line_end":406,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251405,"byte_end":10251429,"line_start":407,"line_end":407,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251434,"byte_end":10251437,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251442,"byte_end":10251487,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251492,"byte_end":10251536,"line_start":410,"line_end":410,"column_start":5,"column_end":49}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251541,"byte_end":10251583,"line_start":411,"line_end":411,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251588,"byte_end":10251591,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", metadata);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251596,"byte_end":10251627,"line_start":413,"line_end":413,"column_start":5,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251632,"byte_end":10251644,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251649,"byte_end":10251656,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251661,"byte_end":10251668,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252318,"byte_end":10252327,"line_start":437,"line_end":437,"column_start":18,"column_end":27},"name":"try_clone","qualname":"<File>::try_clone","value":"pub async fn try_clone<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create a new `File` instance that shares the same underlying file handle\n as the existing `File` instance. Reads, writes, and seeks will affect both\n File instances simultaneously.","sig":null,"attributes":[{"value":"/ Create a new `File` instance that shares the same underlying file handle","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251822,"byte_end":10251898,"line_start":422,"line_end":422,"column_start":5,"column_end":81}},{"value":"/ as the existing `File` instance. Reads, writes, and seeks will affect both","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251903,"byte_end":10251981,"line_start":423,"line_end":423,"column_start":5,"column_end":83}},{"value":"/ File instances simultaneously.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10251986,"byte_end":10252020,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252025,"byte_end":10252028,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252033,"byte_end":10252047,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252052,"byte_end":10252055,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252060,"byte_end":10252073,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252078,"byte_end":10252102,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252107,"byte_end":10252110,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252115,"byte_end":10252160,"line_start":431,"line_end":431,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252165,"byte_end":10252209,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/ let file_clone = file.try_clone().await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252214,"byte_end":10252259,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252264,"byte_end":10252276,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252281,"byte_end":10252288,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252293,"byte_end":10252300,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253057,"byte_end":10253065,"line_start":461,"line_end":461,"column_start":18,"column_end":26},"name":"into_std","qualname":"<File>::into_std","value":"pub async fn into_std(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Destructures `File` into a [`std::fs::File`][std]. This function is\n async to allow any in-flight operations to complete.","sig":null,"attributes":[{"value":"/ Destructures `File` into a [`std::fs::File`][std]. This function is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252506,"byte_end":10252577,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/ async to allow any in-flight operations to complete.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252582,"byte_end":10252638,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252643,"byte_end":10252646,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Use `File::try_into_std` to attempt conversion immediately.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252651,"byte_end":10252714,"line_start":446,"line_end":446,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252719,"byte_end":10252722,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252727,"byte_end":10252751,"line_start":448,"line_end":448,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252756,"byte_end":10252759,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252764,"byte_end":10252778,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252783,"byte_end":10252786,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252791,"byte_end":10252804,"line_start":452,"line_end":452,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252809,"byte_end":10252833,"line_start":453,"line_end":453,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252838,"byte_end":10252841,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252846,"byte_end":10252891,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252896,"byte_end":10252946,"line_start":456,"line_end":456,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.into_std().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10252951,"byte_end":10252998,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253003,"byte_end":10253015,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253020,"byte_end":10253027,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253032,"byte_end":10253039,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253763,"byte_end":10253775,"line_start":486,"line_end":486,"column_start":12,"column_end":24},"name":"try_into_std","qualname":"<File>::try_into_std","value":"pub fn try_into_std(Self) -> Result<sys::File, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to immediately destructure `File` into a [`std::fs::File`][std].","sig":null,"attributes":[{"value":"/ Tries to immediately destructure `File` into a [`std::fs::File`][std].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253209,"byte_end":10253283,"line_start":466,"line_end":466,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253288,"byte_end":10253291,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253296,"byte_end":10253320,"line_start":468,"line_end":468,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253325,"byte_end":10253328,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253333,"byte_end":10253345,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253350,"byte_end":10253353,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function will return an error containing the file if some","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253358,"byte_end":10253424,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/ operation is in-flight.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253429,"byte_end":10253456,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253461,"byte_end":10253464,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253469,"byte_end":10253483,"line_start":475,"line_end":475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253488,"byte_end":10253491,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253496,"byte_end":10253509,"line_start":477,"line_end":477,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253514,"byte_end":10253538,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253543,"byte_end":10253546,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253551,"byte_end":10253596,"line_start":480,"line_end":480,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253601,"byte_end":10253651,"line_start":481,"line_end":481,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.try_into_std().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253656,"byte_end":10253710,"line_start":482,"line_end":482,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253715,"byte_end":10253727,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253732,"byte_end":10253739,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10253744,"byte_end":10253751,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10255053,"byte_end":10255068,"line_start":525,"line_end":525,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the underlying file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the underlying file.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254028,"byte_end":10254079,"line_start":496,"line_end":496,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254084,"byte_end":10254087,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254092,"byte_end":10254124,"line_start":498,"line_end":498,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254129,"byte_end":10254132,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This function currently corresponds to the `fchmod` function on Unix and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254137,"byte_end":10254213,"line_start":500,"line_end":500,"column_start":5,"column_end":81}},{"value":"/ the `SetFileInformationByHandle` function on Windows. Note that, this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254218,"byte_end":10254291,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ [may change in the future][changes].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254296,"byte_end":10254336,"line_start":502,"line_end":502,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254341,"byte_end":10254344,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254349,"byte_end":10254434,"line_start":504,"line_end":504,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254439,"byte_end":10254442,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254447,"byte_end":10254459,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254464,"byte_end":10254467,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the user lacks permission change","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254472,"byte_end":10254546,"line_start":508,"line_end":508,"column_start":5,"column_end":79}},{"value":"/ attributes on the underlying file. It may also return an error in other","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254551,"byte_end":10254626,"line_start":509,"line_end":509,"column_start":5,"column_end":80}},{"value":"/ os-specific unspecified cases.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254631,"byte_end":10254665,"line_start":510,"line_end":510,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254670,"byte_end":10254673,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254678,"byte_end":10254692,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254697,"byte_end":10254700,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254705,"byte_end":10254718,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254723,"byte_end":10254747,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254752,"byte_end":10254755,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254760,"byte_end":10254805,"line_start":517,"line_end":517,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254810,"byte_end":10254854,"line_start":518,"line_end":518,"column_start":5,"column_end":49}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254859,"byte_end":10254916,"line_start":519,"line_end":519,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254921,"byte_end":10254950,"line_start":520,"line_end":520,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254955,"byte_end":10254994,"line_start":521,"line_end":521,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10254999,"byte_end":10255011,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10255016,"byte_end":10255023,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10255028,"byte_end":10255035,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10265074,"byte_end":10265083,"line_start":41,"line_end":41,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<impl AsRef<Path>: AsRef<Path>,\n                       impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                      impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new hard link on the filesystem.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264027,"byte_end":10264073,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264074,"byte_end":10264077,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::hard_link`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264078,"byte_end":10264137,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264138,"byte_end":10264141,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::hard_link","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264142,"byte_end":10264171,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264172,"byte_end":10264175,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that systems","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264176,"byte_end":10264255,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ often require these two paths to both be located on the same filesystem.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264256,"byte_end":10264332,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264333,"byte_end":10264336,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264337,"byte_end":10264369,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264370,"byte_end":10264373,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `link` function on Unix","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264374,"byte_end":10264444,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ and the `CreateHardLink` function on Windows.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264445,"byte_end":10264494,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264495,"byte_end":10264551,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264552,"byte_end":10264555,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264556,"byte_end":10264641,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264642,"byte_end":10264645,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264646,"byte_end":10264658,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264659,"byte_end":10264662,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264663,"byte_end":10264741,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264742,"byte_end":10264774,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264775,"byte_end":10264778,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * The `src` path is not a file or doesn't exist.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264779,"byte_end":10264831,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264832,"byte_end":10264835,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264836,"byte_end":10264850,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264851,"byte_end":10264854,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264855,"byte_end":10264868,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264869,"byte_end":10264887,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264888,"byte_end":10264891,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264892,"byte_end":10264910,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264911,"byte_end":10264955,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/     fs::hard_link(\"a.txt\", \"b.txt\").await?; // Hard link a.txt to b.txt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10264956,"byte_end":10265031,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10265032,"byte_end":10265046,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10265047,"byte_end":10265052,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\hard_link.rs","byte_start":10265053,"byte_end":10265060,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266478,"byte_end":10266486,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Given a path, queries the file system to get information about a file,\n directory, etc.","sig":null,"attributes":[{"value":"/ Given a path, queries the file system to get information about a file,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265373,"byte_end":10265447,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ directory, etc.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265448,"byte_end":10265467,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265468,"byte_end":10265471,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::metadata`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265472,"byte_end":10265530,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265531,"byte_end":10265534,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265535,"byte_end":10265612,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ destination file.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265613,"byte_end":10265634,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265635,"byte_end":10265638,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265639,"byte_end":10265671,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265672,"byte_end":10265675,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `stat` function on Unix and the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265676,"byte_end":10265754,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ `GetFileAttributesEx` function on Windows.  Note that, this [may change in","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265755,"byte_end":10265833,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ the future][changes].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265834,"byte_end":10265859,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265860,"byte_end":10265863,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::metadata","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265864,"byte_end":10265892,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265893,"byte_end":10265978,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265979,"byte_end":10265982,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265983,"byte_end":10265995,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10265996,"byte_end":10265999,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266000,"byte_end":10266078,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266079,"byte_end":10266111,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266112,"byte_end":10266115,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * The user lacks permissions to perform `metadata` call on `path`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266116,"byte_end":10266186,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ * `path` does not exist.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266187,"byte_end":10266215,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266216,"byte_end":10266219,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266220,"byte_end":10266234,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266235,"byte_end":10266238,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266239,"byte_end":10266257,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266258,"byte_end":10266276,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266277,"byte_end":10266280,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266281,"byte_end":10266299,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266300,"byte_end":10266344,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/     let attr = fs::metadata(\"/some/file/path.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266345,"byte_end":10266407,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/     // inspect attr ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266408,"byte_end":10266435,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266436,"byte_end":10266450,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266451,"byte_end":10266456,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\metadata.rs","byte_start":10266457,"byte_end":10266464,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268582,"byte_end":10268593,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Options and flags which can be used to configure how a file is opened.","sig":null,"attributes":[{"value":"/ Options and flags which can be used to configure how a file is opened.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10266697,"byte_end":10266771,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10266772,"byte_end":10266775,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This builder exposes the ability to configure how a [`File`] is opened and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10266776,"byte_end":10266854,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ what operations are permitted on the open file. The [`File::open`] and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10266855,"byte_end":10266929,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ [`File::create`] methods are aliases for commonly used options using this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10266930,"byte_end":10267007,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ builder.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267008,"byte_end":10267020,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267021,"byte_end":10267024,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, when using `OpenOptions`, you'll first call [`new`],","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267025,"byte_end":10267101,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ then chain calls to methods to set each option, then call [`open`], passing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267102,"byte_end":10267181,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ the path of the file you're trying to open. This will give you a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267182,"byte_end":10267250,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`][result] with a [`File`] inside that you can further operate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267251,"byte_end":10267329,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ on.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267330,"byte_end":10267337,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267338,"byte_end":10267341,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::OpenOptions`] for usage from","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267342,"byte_end":10267418,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ the Tokio runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267419,"byte_end":10267441,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267442,"byte_end":10267445,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `From<std::fs::OpenOptions>` is implemented for more advanced configuration","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267446,"byte_end":10267525,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ than the methods provided here.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267526,"byte_end":10267561,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267562,"byte_end":10267565,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`new`]: OpenOptions::new","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267566,"byte_end":10267595,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ [`open`]: OpenOptions::open","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267596,"byte_end":10267627,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ [result]: std::io::Result","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267628,"byte_end":10267657,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ [`File`]: File","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267658,"byte_end":10267676,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ [`File::open`]: File::open","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267677,"byte_end":10267707,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ [`File::create`]: File::create","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267708,"byte_end":10267742,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::OpenOptions`]: std::fs::OpenOptions","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267743,"byte_end":10267793,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267794,"byte_end":10267797,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267798,"byte_end":10267812,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267813,"byte_end":10267816,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Opening a file to read:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267817,"byte_end":10267844,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267845,"byte_end":10267848,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267849,"byte_end":10267862,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267863,"byte_end":10267894,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267895,"byte_end":10267911,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267912,"byte_end":10267915,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267916,"byte_end":10267934,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267935,"byte_end":10267974,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10267975,"byte_end":10268012,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268013,"byte_end":10268036,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268037,"byte_end":10268065,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268066,"byte_end":10268086,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268087,"byte_end":10268090,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268091,"byte_end":10268105,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268106,"byte_end":10268111,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268112,"byte_end":10268119,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268120,"byte_end":10268123,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Opening a file for both reading and writing, as well as creating it if it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268124,"byte_end":10268201,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ doesn't exist:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268202,"byte_end":10268220,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268221,"byte_end":10268224,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268225,"byte_end":10268238,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268239,"byte_end":10268270,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268271,"byte_end":10268287,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268288,"byte_end":10268291,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268292,"byte_end":10268310,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268311,"byte_end":10268350,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268351,"byte_end":10268388,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268389,"byte_end":10268412,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268413,"byte_end":10268437,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/         .create(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268438,"byte_end":10268463,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268464,"byte_end":10268492,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268493,"byte_end":10268513,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268514,"byte_end":10268517,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268518,"byte_end":10268532,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268533,"byte_end":10268538,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268539,"byte_end":10268546,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269114,"byte_end":10269117,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank new set of options ready for configuration.","sig":null,"attributes":[{"value":"/ Creates a blank new set of options ready for configuration.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268641,"byte_end":10268704,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268709,"byte_end":10268712,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268717,"byte_end":10268762,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268767,"byte_end":10268770,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::new`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268775,"byte_end":10268841,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268846,"byte_end":10268849,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::new","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268854,"byte_end":10268890,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268895,"byte_end":10268898,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268903,"byte_end":10268917,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268922,"byte_end":10268925,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268930,"byte_end":10268943,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268948,"byte_end":10268979,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268984,"byte_end":10268987,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut options = OpenOptions::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268992,"byte_end":10269033,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ let future = options.read(true).open(\"foo.txt\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269038,"byte_end":10269090,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269095,"byte_end":10269102,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269846,"byte_end":10269850,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for read access.","sig":null,"attributes":[{"value":"/ Sets the option for read access.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269197,"byte_end":10269233,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269238,"byte_end":10269241,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269246,"byte_end":10269311,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ `read`-able if opened.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269316,"byte_end":10269342,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269347,"byte_end":10269350,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::read`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269355,"byte_end":10269422,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269427,"byte_end":10269430,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269435,"byte_end":10269472,"line_start":102,"line_end":102,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269477,"byte_end":10269480,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269485,"byte_end":10269499,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269504,"byte_end":10269507,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269512,"byte_end":10269525,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269530,"byte_end":10269561,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269566,"byte_end":10269582,"line_start":108,"line_end":108,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269587,"byte_end":10269590,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269595,"byte_end":10269613,"line_start":110,"line_end":110,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269618,"byte_end":10269657,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269662,"byte_end":10269699,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/         .read(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269704,"byte_end":10269727,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269732,"byte_end":10269760,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269765,"byte_end":10269785,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269790,"byte_end":10269793,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269798,"byte_end":10269812,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269817,"byte_end":10269822,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269827,"byte_end":10269834,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270601,"byte_end":10270606,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for write access.","sig":null,"attributes":[{"value":"/ Sets the option for write access.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269947,"byte_end":10269984,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269989,"byte_end":10269992,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10269997,"byte_end":10270062,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ `write`-able if opened.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270067,"byte_end":10270094,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270099,"byte_end":10270102,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::write`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270107,"byte_end":10270175,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270180,"byte_end":10270183,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::write","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270188,"byte_end":10270226,"line_start":132,"line_end":132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270231,"byte_end":10270234,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270239,"byte_end":10270253,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270258,"byte_end":10270261,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270266,"byte_end":10270279,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270284,"byte_end":10270315,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270320,"byte_end":10270336,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270341,"byte_end":10270344,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270349,"byte_end":10270367,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270372,"byte_end":10270411,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270416,"byte_end":10270453,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270458,"byte_end":10270482,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270487,"byte_end":10270515,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270520,"byte_end":10270540,"line_start":145,"line_end":145,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270545,"byte_end":10270548,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270553,"byte_end":10270567,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270572,"byte_end":10270577,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270582,"byte_end":10270589,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272836,"byte_end":10272842,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for the append mode.","sig":null,"attributes":[{"value":"/ Sets the option for the append mode.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270706,"byte_end":10270746,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270751,"byte_end":10270754,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This option, when true, means that writes will append to a file instead","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270759,"byte_end":10270834,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ of overwriting previous contents.  Note that setting","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270839,"byte_end":10270895,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/ `.write(true).append(true)` has the same effect as setting only","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270900,"byte_end":10270967,"line_start":159,"line_end":159,"column_start":5,"column_end":72}},{"value":"/ `.append(true)`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270972,"byte_end":10270992,"line_start":160,"line_end":160,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10270997,"byte_end":10271000,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ For most filesystems, the operating system guarantees that all writes are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271005,"byte_end":10271082,"line_start":162,"line_end":162,"column_start":5,"column_end":82}},{"value":"/ atomic: no writes get mangled because another process writes at the same","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271087,"byte_end":10271163,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271168,"byte_end":10271177,"line_start":164,"line_end":164,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271182,"byte_end":10271185,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ One maybe obvious note when using append-mode: make sure that all data","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271190,"byte_end":10271264,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ that belongs together is written to the file in one operation. This","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271269,"byte_end":10271340,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ can be done by concatenating strings before passing them to [`write()`],","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271345,"byte_end":10271421,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ or using a buffered writer (with a buffer of adequate size),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271426,"byte_end":10271490,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ and calling [`flush()`] when the message is complete.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271495,"byte_end":10271552,"line_start":170,"line_end":170,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271557,"byte_end":10271560,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ If a file is opened with both read and append access, beware that after","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271565,"byte_end":10271640,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ opening, and after every write, the position for reading may be set at the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271645,"byte_end":10271723,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ end of the file. So, before writing, save the current position (using","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271728,"byte_end":10271801,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ [`seek`]`(`[`SeekFrom`]`::`[`Current`]`(0))`), and restore it before the next read.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271806,"byte_end":10271893,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271898,"byte_end":10271901,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::append`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271906,"byte_end":10271975,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271980,"byte_end":10271983,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::append","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10271988,"byte_end":10272027,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272032,"byte_end":10272035,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272040,"byte_end":10272051,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272056,"byte_end":10272059,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This function doesn't create the file if it doesn't exist. Use the [`create`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272064,"byte_end":10272145,"line_start":183,"line_end":183,"column_start":5,"column_end":86}},{"value":"/ method to do so.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272150,"byte_end":10272170,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272175,"byte_end":10272178,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`write()`]: crate::io::AsyncWriteExt::write","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272183,"byte_end":10272231,"line_start":186,"line_end":186,"column_start":5,"column_end":53}},{"value":"/ [`flush()`]: crate::io::AsyncWriteExt::flush","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272236,"byte_end":10272284,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/ [`seek`]: crate::io::AsyncSeekExt::seek","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272289,"byte_end":10272332,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/ [`SeekFrom`]: std::io::SeekFrom","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272337,"byte_end":10272372,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/ [`Current`]: std::io::SeekFrom::Current","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272377,"byte_end":10272420,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ [`create`]: OpenOptions::create","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272425,"byte_end":10272460,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272465,"byte_end":10272468,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272473,"byte_end":10272487,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272492,"byte_end":10272495,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272500,"byte_end":10272513,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272518,"byte_end":10272549,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272554,"byte_end":10272570,"line_start":197,"line_end":197,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272575,"byte_end":10272578,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272583,"byte_end":10272601,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272606,"byte_end":10272645,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272650,"byte_end":10272687,"line_start":201,"line_end":201,"column_start":5,"column_end":42}},{"value":"/         .append(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272692,"byte_end":10272717,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272722,"byte_end":10272750,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272755,"byte_end":10272775,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272780,"byte_end":10272783,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272788,"byte_end":10272802,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272807,"byte_end":10272812,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272817,"byte_end":10272824,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273759,"byte_end":10273767,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for truncating a previous file.","sig":null,"attributes":[{"value":"/ Sets the option for truncating a previous file.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10272945,"byte_end":10272996,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273001,"byte_end":10273004,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a file is successfully opened with this option set it will truncate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273009,"byte_end":10273083,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the file to 0 length if it already exists.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273088,"byte_end":10273134,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273139,"byte_end":10273142,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write access for truncate to work.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273147,"byte_end":10273214,"line_start":219,"line_end":219,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273219,"byte_end":10273222,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::truncate`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273227,"byte_end":10273298,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273303,"byte_end":10273306,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::truncate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273311,"byte_end":10273352,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273357,"byte_end":10273360,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273365,"byte_end":10273379,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273384,"byte_end":10273387,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273392,"byte_end":10273405,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273410,"byte_end":10273441,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273446,"byte_end":10273462,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273467,"byte_end":10273470,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273475,"byte_end":10273493,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273498,"byte_end":10273537,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273542,"byte_end":10273579,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273584,"byte_end":10273608,"line_start":234,"line_end":234,"column_start":5,"column_end":29}},{"value":"/         .truncate(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273613,"byte_end":10273640,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273645,"byte_end":10273673,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273678,"byte_end":10273698,"line_start":237,"line_end":237,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273703,"byte_end":10273706,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273711,"byte_end":10273725,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273730,"byte_end":10273735,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273740,"byte_end":10273747,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274764,"byte_end":10274770,"line_start":278,"line_end":278,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for creating a new file.","sig":null,"attributes":[{"value":"/ Sets the option for creating a new file.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273876,"byte_end":10273920,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273925,"byte_end":10273928,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created if the file","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10273933,"byte_end":10274005,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ does not yet already exist.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274010,"byte_end":10274041,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274046,"byte_end":10274049,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ In order for the file to be created, [`write`] or [`append`] access must","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274054,"byte_end":10274130,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ be used.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274135,"byte_end":10274147,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274152,"byte_end":10274155,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274160,"byte_end":10274229,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274234,"byte_end":10274237,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274242,"byte_end":10274281,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ [`write`]: OpenOptions::write","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274286,"byte_end":10274319,"line_start":258,"line_end":258,"column_start":5,"column_end":38}},{"value":"/ [`append`]: OpenOptions::append","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274324,"byte_end":10274359,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274364,"byte_end":10274367,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274372,"byte_end":10274386,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274391,"byte_end":10274394,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274399,"byte_end":10274412,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274417,"byte_end":10274448,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274453,"byte_end":10274469,"line_start":265,"line_end":265,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274474,"byte_end":10274477,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274482,"byte_end":10274500,"line_start":267,"line_end":267,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274505,"byte_end":10274544,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274549,"byte_end":10274586,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274591,"byte_end":10274615,"line_start":270,"line_end":270,"column_start":5,"column_end":29}},{"value":"/         .create(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274620,"byte_end":10274645,"line_start":271,"line_end":271,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274650,"byte_end":10274678,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274683,"byte_end":10274703,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274708,"byte_end":10274711,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274716,"byte_end":10274730,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274735,"byte_end":10274740,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274745,"byte_end":10274752,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276169,"byte_end":10276179,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option to always create a new file.","sig":null,"attributes":[{"value":"/ Sets the option to always create a new file.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274873,"byte_end":10274921,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274926,"byte_end":10274929,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created.  No file is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10274934,"byte_end":10275007,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ allowed to exist at the target location, also no (dangling) symlink.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275012,"byte_end":10275084,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275089,"byte_end":10275092,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This option is useful because it is atomic. Otherwise between checking","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275097,"byte_end":10275171,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ whether a file exists and creating a new one, the file may have been","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275176,"byte_end":10275248,"line_start":289,"line_end":289,"column_start":5,"column_end":77}},{"value":"/ created by another process (a TOCTOU race condition / attack).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275253,"byte_end":10275319,"line_start":290,"line_end":290,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275324,"byte_end":10275327,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If `.create_new(true)` is set, [`.create()`] and [`.truncate()`] are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275332,"byte_end":10275404,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ ignored.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275409,"byte_end":10275421,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275426,"byte_end":10275429,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write or append access in order to create a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275434,"byte_end":10275510,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ new file.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275515,"byte_end":10275528,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275533,"byte_end":10275536,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create_new`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275541,"byte_end":10275614,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275619,"byte_end":10275622,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create_new","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275627,"byte_end":10275670,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ [`.create()`]: OpenOptions::create","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275675,"byte_end":10275713,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/ [`.truncate()`]: OpenOptions::truncate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275718,"byte_end":10275760,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275765,"byte_end":10275768,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275773,"byte_end":10275787,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275792,"byte_end":10275795,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275800,"byte_end":10275813,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275818,"byte_end":10275849,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275854,"byte_end":10275870,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275875,"byte_end":10275878,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275883,"byte_end":10275901,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275906,"byte_end":10275945,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275950,"byte_end":10275987,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10275992,"byte_end":10276016,"line_start":313,"line_end":313,"column_start":5,"column_end":29}},{"value":"/         .create_new(true)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276021,"byte_end":10276050,"line_start":314,"line_end":314,"column_start":5,"column_end":34}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276055,"byte_end":10276083,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276088,"byte_end":10276108,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276113,"byte_end":10276116,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276121,"byte_end":10276135,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276140,"byte_end":10276145,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276150,"byte_end":10276157,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278631,"byte_end":10278635,"line_start":378,"line_end":378,"column_start":18,"column_end":22},"name":"open","qualname":"<OpenOptions>::open","value":"pub async fn open<'_,\n                  impl AsRef<Path>: AsRef<Path>>(&'_ Self, impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file at `path` with the options specified by `self`.","sig":null,"attributes":[{"value":"/ Opens a file at `path` with the options specified by `self`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276294,"byte_end":10276358,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276363,"byte_end":10276366,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::open`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276371,"byte_end":10276438,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276443,"byte_end":10276446,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::open","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276451,"byte_end":10276488,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276493,"byte_end":10276496,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276501,"byte_end":10276513,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276518,"byte_end":10276521,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will return an error under a number of different","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276526,"byte_end":10276592,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/ circumstances. Some of these error conditions are listed here, together","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276597,"byte_end":10276672,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ with their [`ErrorKind`]. The mapping to [`ErrorKind`]s is not part of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276677,"byte_end":10276751,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ the compatibility contract of the function, especially the `Other` kind","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276756,"byte_end":10276831,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ might change to more specific kinds in the future.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276836,"byte_end":10276890,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276895,"byte_end":10276898,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ * [`NotFound`]: The specified file does not exist and neither `create`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276903,"byte_end":10276977,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/   or `create_new` is set.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10276982,"byte_end":10277011,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/ * [`NotFound`]: One of the directory components of the file path does","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277016,"byte_end":10277089,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/   not exist.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277094,"byte_end":10277110,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to get the specified","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277115,"byte_end":10277189,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/   access rights for the file.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277194,"byte_end":10277227,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to open one of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277232,"byte_end":10277304,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/   directory components of the specified path.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277309,"byte_end":10277358,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ * [`AlreadyExists`]: `create_new` was specified and the file already","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277363,"byte_end":10277435,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/   exists.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277440,"byte_end":10277453,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/ * [`InvalidInput`]: Invalid combinations of open options (truncate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277458,"byte_end":10277528,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/   without write access, no access mode set, etc.).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277533,"byte_end":10277587,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ * [`Other`]: One of the directory components of the specified file path","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277592,"byte_end":10277667,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/   was not, in fact, a directory.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277672,"byte_end":10277708,"line_start":353,"line_end":353,"column_start":5,"column_end":41}},{"value":"/ * [`Other`]: Filesystem-level errors: full disk, write permission","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277713,"byte_end":10277782,"line_start":354,"line_end":354,"column_start":5,"column_end":74}},{"value":"/   requested on a read-only file system, exceeded disk quota, too many","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277787,"byte_end":10277860,"line_start":355,"line_end":355,"column_start":5,"column_end":78}},{"value":"/   open files, too long filename, too many symbolic links in the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277865,"byte_end":10277932,"line_start":356,"line_end":356,"column_start":5,"column_end":72}},{"value":"/   specified path (Unix-like systems only), etc.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277937,"byte_end":10277988,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10277993,"byte_end":10277996,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278001,"byte_end":10278015,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278020,"byte_end":10278023,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278028,"byte_end":10278041,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278046,"byte_end":10278077,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278082,"byte_end":10278098,"line_start":363,"line_end":363,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278103,"byte_end":10278106,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278111,"byte_end":10278129,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278134,"byte_end":10278173,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new().open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278178,"byte_end":10278239,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278244,"byte_end":10278258,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278263,"byte_end":10278268,"line_start":369,"line_end":369,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278273,"byte_end":10278280,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278285,"byte_end":10278288,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind`]: std::io::ErrorKind","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278293,"byte_end":10278330,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/ [`AlreadyExists`]: std::io::ErrorKind::AlreadyExists","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278335,"byte_end":10278391,"line_start":373,"line_end":373,"column_start":5,"column_end":61}},{"value":"/ [`InvalidInput`]: std::io::ErrorKind::InvalidInput","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278396,"byte_end":10278450,"line_start":374,"line_end":374,"column_start":5,"column_end":59}},{"value":"/ [`NotFound`]: std::io::ErrorKind::NotFound","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278455,"byte_end":10278501,"line_start":375,"line_end":375,"column_start":5,"column_end":51}},{"value":"/ [`Other`]: std::io::ErrorKind::Other","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278506,"byte_end":10278546,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/ [`PermissionDenied`]: std::io::ErrorKind::PermissionDenied","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10278551,"byte_end":10278613,"line_start":377,"line_end":377,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::fs::os","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\mod.rs","parent":null,"children":[{"krate":0,"index":1091}],"decl_id":null,"docs":" OS-specific functionality.\n","sig":null,"attributes":[{"value":"/ OS-specific functionality.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\mod.rs","byte_start":10279302,"byte_end":10279332,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::fs::os::windows","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\mod.rs","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1113}],"decl_id":null,"docs":" Windows-specific extensions for the primitives in the `tokio_fs` module.\n","sig":null,"attributes":[{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\mod.rs","byte_start":10279362,"byte_end":10279377,"line_start":6,"line_end":6,"column_start":1,"column_end":16}},{"value":"/ Windows-specific extensions for the primitives in the `tokio_fs` module.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\mod.rs","byte_start":10279396,"byte_end":10279472,"line_start":1,"line_end":1,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_dir.rs","byte_start":10279939,"byte_end":10279950,"line_start":14,"line_end":14,"column_start":14,"column_end":25},"name":"symlink_dir","qualname":"::fs::os::windows::symlink_dir::symlink_dir","value":"pub async fn symlink_dir<impl AsRef<Path>: AsRef<Path>,\n                         impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                        impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory symlink on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new directory symlink on the filesystem.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_dir.rs","byte_start":10279654,"byte_end":10279708,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_dir.rs","byte_start":10279709,"byte_end":10279712,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a directory symbolic link pointing to the `src`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_dir.rs","byte_start":10279713,"byte_end":10279787,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ path.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_dir.rs","byte_start":10279788,"byte_end":10279797,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_dir.rs","byte_start":10279798,"byte_end":10279801,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::windows::fs::symlink_dir`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_dir.rs","byte_start":10279802,"byte_end":10279876,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_dir.rs","byte_start":10279877,"byte_end":10279880,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [std]: std::os::windows::fs::symlink_dir","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_dir.rs","byte_start":10279881,"byte_end":10279925,"line_start":13,"line_end":13,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_file.rs","byte_start":10280515,"byte_end":10280527,"line_start":14,"line_end":14,"column_start":14,"column_end":26},"name":"symlink_file","qualname":"::fs::os::windows::symlink_file::symlink_file","value":"pub async fn symlink_file<impl AsRef<Path>: AsRef<Path>,\n                          impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                         impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new file symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new file symbolic link on the filesystem.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_file.rs","byte_start":10280232,"byte_end":10280287,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_file.rs","byte_start":10280288,"byte_end":10280291,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a file symbolic link pointing to the `src`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_file.rs","byte_start":10280292,"byte_end":10280361,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ path.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_file.rs","byte_start":10280362,"byte_end":10280371,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_file.rs","byte_start":10280372,"byte_end":10280375,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::windows::fs::symlink_file`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_file.rs","byte_start":10280376,"byte_end":10280451,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_file.rs","byte_start":10280452,"byte_end":10280455,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [std]: std::os::windows::fs::symlink_file","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\windows\\symlink_file.rs","byte_start":10280456,"byte_end":10280501,"line_start":13,"line_end":13,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10282127,"byte_end":10282131,"line_start":44,"line_end":44,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file into a bytes vector.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file into a bytes vector.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10280803,"byte_end":10280863,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10280864,"byte_end":10280867,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10280868,"byte_end":10280922,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10280923,"byte_end":10280926,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10280927,"byte_end":10280951,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10280952,"byte_end":10280955,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using [`File::open`] and [`read_to_end`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10280956,"byte_end":10281035,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ with fewer imports and without an intermediate variable. It pre-allocates a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281036,"byte_end":10281115,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ buffer based on the file size when available, so it is generally faster than","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281116,"byte_end":10281196,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ reading into a vector created with `Vec::new()`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281197,"byte_end":10281249,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281250,"byte_end":10281253,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`File::open`]: super::File::open","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281254,"byte_end":10281291,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ [`read_to_end`]: crate::io::AsyncReadExt::read_to_end","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281292,"byte_end":10281349,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281350,"byte_end":10281353,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281354,"byte_end":10281366,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281367,"byte_end":10281370,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281371,"byte_end":10281443,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281444,"byte_end":10281517,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281518,"byte_end":10281521,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`OpenOptions::open`]: super::OpenOptions::open","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281522,"byte_end":10281573,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281574,"byte_end":10281577,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281578,"byte_end":10281650,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ of a kind other than [`ErrorKind::Interrupted`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281651,"byte_end":10281703,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281704,"byte_end":10281707,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::Interrupted`]: std::io::ErrorKind::Interrupted","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281708,"byte_end":10281771,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281772,"byte_end":10281775,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281776,"byte_end":10281790,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281791,"byte_end":10281794,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281795,"byte_end":10281808,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281809,"byte_end":10281827,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281828,"byte_end":10281857,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281858,"byte_end":10281861,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281862,"byte_end":10281880,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281881,"byte_end":10281954,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/     let contents = fs::read(\"address.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10281955,"byte_end":10282009,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/     let foo: SocketAddr = String::from_utf8_lossy(&contents).parse()?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10282010,"byte_end":10282084,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10282085,"byte_end":10282099,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10282100,"byte_end":10282105,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read.rs","byte_start":10282106,"byte_end":10282113,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1142},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10282717,"byte_end":10282725,"line_start":18,"line_end":18,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10282569,"byte_end":10282626,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10282627,"byte_end":10282630,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_dir`](std::fs::read_dir)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10282631,"byte_end":10282703,"line_start":17,"line_end":17,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283537,"byte_end":10283544,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream of the entries in a directory.","sig":null,"attributes":[{"value":"/ Stream of the entries in a directory.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10282919,"byte_end":10282960,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10282961,"byte_end":10282964,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This stream is returned from the [`read_dir`] function of this module and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10282965,"byte_end":10283042,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will yield instances of [`DirEntry`]. Through a [`DirEntry`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283043,"byte_end":10283107,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/ information like the entry's path and possibly other metadata can be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283108,"byte_end":10283180,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ learned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283181,"byte_end":10283193,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283194,"byte_end":10283197,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283198,"byte_end":10283210,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283211,"byte_end":10283214,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This [`Stream`] will return an [`Err`] if there's some sort of intermittent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283215,"byte_end":10283294,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ IO error during iteration.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283295,"byte_end":10283325,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283326,"byte_end":10283329,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: read_dir","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283330,"byte_end":10283356,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ [`DirEntry`]: DirEntry","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283357,"byte_end":10283383,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283384,"byte_end":10283421,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ [`Err`]: std::result::Result::Err","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283422,"byte_end":10283459,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283477,"byte_end":10283525,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283798,"byte_end":10283808,"line_start":53,"line_end":53,"column_start":18,"column_end":28},"name":"next_entry","qualname":"<ReadDir>::next_entry","value":"pub async fn next_entry<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next entry in the directory stream.\n","sig":null,"attributes":[{"value":"/ Returns the next entry in the directory stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283729,"byte_end":10283780,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283980,"byte_end":10283995,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"poll_next_entry","qualname":"<ReadDir>::poll_next_entry","value":"pub fn poll_next_entry(&mut Self, &mut Context)\n-> Poll<io::Result<Option<DirEntry>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285751,"byte_end":10285759,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::read_dir::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" Entries returned by the [`ReadDir`] stream.","sig":null,"attributes":[{"value":"/ Entries returned by the [`ReadDir`] stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285300,"byte_end":10285347,"line_start":100,"line_end":100,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285348,"byte_end":10285351,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`ReadDir`]: struct@ReadDir","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285352,"byte_end":10285383,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285384,"byte_end":10285387,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirEntry`] for usage from the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285388,"byte_end":10285465,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ Tokio runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285466,"byte_end":10285484,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285485,"byte_end":10285488,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ An instance of `DirEntry` represents an entry inside of a directory on the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285489,"byte_end":10285567,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ filesystem. Each entry can be inspected via methods to learn about the full","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285568,"byte_end":10285647,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ path or possibly other metadata through per-platform extension traits.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285648,"byte_end":10285722,"line_start":109,"line_end":109,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286591,"byte_end":10286595,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the file that this entry represents.","sig":null,"attributes":[{"value":"/ Returns the full path to the file that this entry represents.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285806,"byte_end":10285871,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285876,"byte_end":10285879,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path to `read_dir`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285884,"byte_end":10285955,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ with the filename of this entry.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285960,"byte_end":10285996,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286001,"byte_end":10286004,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286009,"byte_end":10286023,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286028,"byte_end":10286031,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286036,"byte_end":10286049,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286054,"byte_end":10286072,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286077,"byte_end":10286080,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286085,"byte_end":10286130,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286135,"byte_end":10286182,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286187,"byte_end":10286190,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286195,"byte_end":10286252,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286257,"byte_end":10286296,"line_start":128,"line_end":128,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286301,"byte_end":10286306,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286311,"byte_end":10286323,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286328,"byte_end":10286335,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286340,"byte_end":10286347,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286352,"byte_end":10286355,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This prints output like:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286360,"byte_end":10286388,"line_start":134,"line_end":134,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286393,"byte_end":10286396,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286401,"byte_end":10286412,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/ \"./whatever.txt\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286417,"byte_end":10286437,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ \"./foo.html\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286442,"byte_end":10286458,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/ \"./hello_world.rs\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286463,"byte_end":10286485,"line_start":139,"line_end":139,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286490,"byte_end":10286497,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286502,"byte_end":10286505,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The exact text, of course, depends on what files you have in `.`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286510,"byte_end":10286579,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287115,"byte_end":10287124,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare file name of this directory entry without any other\n leading path component.","sig":null,"attributes":[{"value":"/ Returns the bare file name of this directory entry without any other","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286649,"byte_end":10286721,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ leading path component.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286726,"byte_end":10286753,"line_start":148,"line_end":148,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286758,"byte_end":10286761,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286766,"byte_end":10286780,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286785,"byte_end":10286788,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286793,"byte_end":10286800,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286805,"byte_end":10286823,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286828,"byte_end":10286831,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286836,"byte_end":10286881,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286886,"byte_end":10286933,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286938,"byte_end":10286941,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10286946,"byte_end":10287003,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.file_name());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287008,"byte_end":10287052,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287057,"byte_end":10287062,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287067,"byte_end":10287079,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287084,"byte_end":10287091,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287096,"byte_end":10287103,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288221,"byte_end":10288229,"line_start":198,"line_end":198,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the metadata for the file that this entry points at.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287184,"byte_end":10287248,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287253,"byte_end":10287256,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287261,"byte_end":10287331,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287336,"byte_end":10287348,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287353,"byte_end":10287356,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287361,"byte_end":10287393,"line_start":173,"line_end":173,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287398,"byte_end":10287401,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ On Windows this function is cheap to call (no extra system calls","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287406,"byte_end":10287474,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/ needed), but on Unix platforms this function is the equivalent of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287479,"byte_end":10287548,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ calling `symlink_metadata` on the path.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287553,"byte_end":10287596,"line_start":177,"line_end":177,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287601,"byte_end":10287604,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287609,"byte_end":10287623,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287628,"byte_end":10287631,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287636,"byte_end":10287643,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287648,"byte_end":10287666,"line_start":182,"line_end":182,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287671,"byte_end":10287674,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287679,"byte_end":10287724,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287729,"byte_end":10287776,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287781,"byte_end":10287784,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287789,"byte_end":10287846,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/     if let Ok(metadata) = entry.metadata().await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287851,"byte_end":10287905,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/         // Now let's show our entry's permissions!","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287910,"byte_end":10287964,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), metadata.permissions());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10287969,"byte_end":10288042,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288047,"byte_end":10288063,"line_start":191,"line_end":191,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288068,"byte_end":10288138,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288143,"byte_end":10288152,"line_start":193,"line_end":193,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288157,"byte_end":10288162,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288167,"byte_end":10288179,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288184,"byte_end":10288191,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288196,"byte_end":10288203,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10289413,"byte_end":10289422,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the file type for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the file type for the file that this entry points at.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288355,"byte_end":10288420,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288425,"byte_end":10288428,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288433,"byte_end":10288503,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288508,"byte_end":10288520,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288525,"byte_end":10288528,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288533,"byte_end":10288565,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288570,"byte_end":10288573,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ On Windows and most Unix platforms this function is free (no extra","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288578,"byte_end":10288648,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ system calls needed), but some Unix platforms may require the equivalent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288653,"byte_end":10288729,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ call to `symlink_metadata` to learn about the target file type.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288734,"byte_end":10288801,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288806,"byte_end":10288809,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288814,"byte_end":10288828,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288833,"byte_end":10288836,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288841,"byte_end":10288848,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288853,"byte_end":10288871,"line_start":217,"line_end":217,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288876,"byte_end":10288879,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288884,"byte_end":10288929,"line_start":219,"line_end":219,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288934,"byte_end":10288981,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288986,"byte_end":10288989,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10288994,"byte_end":10289051,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/     if let Ok(file_type) = entry.file_type().await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10289056,"byte_end":10289112,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/         // Now let's show our entry's file type!","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10289117,"byte_end":10289169,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), file_type);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10289174,"byte_end":10289234,"line_start":225,"line_end":225,"column_start":5,"column_end":65}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10289239,"byte_end":10289255,"line_start":226,"line_end":226,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10289260,"byte_end":10289330,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10289335,"byte_end":10289344,"line_start":228,"line_end":228,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10289349,"byte_end":10289354,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10289359,"byte_end":10289371,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10289376,"byte_end":10289383,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10289388,"byte_end":10289395,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_link.rs","byte_start":10289903,"byte_end":10289912,"line_start":11,"line_end":11,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_link.rs","byte_start":10289721,"byte_end":10289791,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_link.rs","byte_start":10289792,"byte_end":10289795,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_link`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_link.rs","byte_start":10289796,"byte_end":10289855,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_link.rs","byte_start":10289856,"byte_end":10289859,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read_link","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_link.rs","byte_start":10289860,"byte_end":10289889,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290571,"byte_end":10290585,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will open a file for reading and read the entire\n contents into a string and return said string.","sig":null,"attributes":[{"value":"/ Creates a future which will open a file for reading and read the entire","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290113,"byte_end":10290188,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents into a string and return said string.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290189,"byte_end":10290239,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290240,"byte_end":10290243,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::read_to_string`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290244,"byte_end":10290306,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290307,"byte_end":10290310,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290311,"byte_end":10290325,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290326,"byte_end":10290329,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290330,"byte_end":10290343,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290344,"byte_end":10290362,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290363,"byte_end":10290366,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290367,"byte_end":10290412,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let contents = fs::read_to_string(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290413,"byte_end":10290469,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ println!(\"foo.txt contains {} bytes\", contents.len());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290470,"byte_end":10290528,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290529,"byte_end":10290541,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290542,"byte_end":10290549,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_to_string.rs","byte_start":10290550,"byte_end":10290557,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_dir.rs","byte_start":10290933,"byte_end":10290943,"line_start":9,"line_end":9,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an existing, empty directory.","sig":null,"attributes":[{"value":"/ Removes an existing, empty directory.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_dir.rs","byte_start":10290797,"byte_end":10290838,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_dir.rs","byte_start":10290839,"byte_end":10290842,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir`](std::fs::remove_dir)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_dir.rs","byte_start":10290843,"byte_end":10290919,"line_start":8,"line_end":8,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_dir_all.rs","byte_start":10291357,"byte_end":10291371,"line_start":11,"line_end":11,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory at this path, after removing all its contents. Use carefully!","sig":null,"attributes":[{"value":"/ Removes a directory at this path, after removing all its contents. Use carefully!","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_dir_all.rs","byte_start":10291147,"byte_end":10291232,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_dir_all.rs","byte_start":10291233,"byte_end":10291236,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir_all`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_dir_all.rs","byte_start":10291237,"byte_end":10291301,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_dir_all.rs","byte_start":10291302,"byte_end":10291305,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::remove_dir_all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_dir_all.rs","byte_start":10291306,"byte_end":10291343,"line_start":10,"line_end":10,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_file.rs","byte_start":10291908,"byte_end":10291919,"line_start":15,"line_end":15,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file from the filesystem.","sig":null,"attributes":[{"value":"/ Removes a file from the filesystem.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_file.rs","byte_start":10291579,"byte_end":10291618,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_file.rs","byte_start":10291619,"byte_end":10291622,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that there is no guarantee that the file is immediately deleted (e.g.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_file.rs","byte_start":10291623,"byte_end":10291701,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ depending on platform, other open file descriptors may prevent immediate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_file.rs","byte_start":10291702,"byte_end":10291778,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ removal).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_file.rs","byte_start":10291779,"byte_end":10291792,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_file.rs","byte_start":10291793,"byte_end":10291796,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_file`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_file.rs","byte_start":10291797,"byte_end":10291858,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_file.rs","byte_start":10291859,"byte_end":10291862,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::remove_file","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\remove_file.rs","byte_start":10291863,"byte_end":10291894,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\rename.rs","byte_start":10292387,"byte_end":10292393,"line_start":12,"line_end":12,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<impl AsRef<Path>: AsRef<Path>,\n                    impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                   impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new name, replacing the original file if\n `to` already exists.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new name, replacing the original file if","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\rename.rs","byte_start":10292124,"byte_end":10292201,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ `to` already exists.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\rename.rs","byte_start":10292202,"byte_end":10292226,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\rename.rs","byte_start":10292227,"byte_end":10292230,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This will not work if the new name is on a different mount point.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\rename.rs","byte_start":10292231,"byte_end":10292300,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\rename.rs","byte_start":10292301,"byte_end":10292304,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::rename`](std::fs::rename)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\rename.rs","byte_start":10292305,"byte_end":10292373,"line_start":11,"line_end":11,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\set_permissions.rs","byte_start":10292869,"byte_end":10292884,"line_start":12,"line_end":12,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                            Permissions)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions found on a file or a directory.","sig":null,"attributes":[{"value":"/ Changes the permissions found on a file or a directory.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\set_permissions.rs","byte_start":10292683,"byte_end":10292742,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\set_permissions.rs","byte_start":10292743,"byte_end":10292746,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::set_permissions`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\set_permissions.rs","byte_start":10292747,"byte_end":10292812,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\set_permissions.rs","byte_start":10292813,"byte_end":10292816,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::set_permissions","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\set_permissions.rs","byte_start":10292817,"byte_end":10292855,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\symlink_metadata.rs","byte_start":10293313,"byte_end":10293329,"line_start":12,"line_end":12,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries the file system metadata for a path.","sig":null,"attributes":[{"value":"/ Queries the file system metadata for a path.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\symlink_metadata.rs","byte_start":10293136,"byte_end":10293184,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\symlink_metadata.rs","byte_start":10293185,"byte_end":10293188,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::symlink_metadata`][std]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\symlink_metadata.rs","byte_start":10293189,"byte_end":10293255,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\symlink_metadata.rs","byte_start":10293256,"byte_end":10293259,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::symlink_metadata","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\symlink_metadata.rs","byte_start":10293260,"byte_end":10293299,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293899,"byte_end":10293904,"line_start":20,"line_end":20,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<C: AsRef<[u8]> + Unpin,\n                   impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>, C)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will open a file for writing and write the entire\n contents of `contents` to it.","sig":null,"attributes":[{"value":"/ Creates a future that will open a file for writing and write the entire","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293533,"byte_end":10293608,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents of `contents` to it.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293609,"byte_end":10293642,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293643,"byte_end":10293646,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::write`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293647,"byte_end":10293700,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293701,"byte_end":10293704,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293705,"byte_end":10293719,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293720,"byte_end":10293723,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293724,"byte_end":10293737,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293738,"byte_end":10293756,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293757,"byte_end":10293760,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293761,"byte_end":10293806,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ fs::write(\"foo.txt\", b\"Hello world!\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293807,"byte_end":10293856,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293857,"byte_end":10293869,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293870,"byte_end":10293877,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\write.rs","byte_start":10293878,"byte_end":10293885,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294631,"byte_end":10294635,"line_start":20,"line_end":20,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.\n This function will overwrite the contents of to.","sig":null,"attributes":[{"value":"/ Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294186,"byte_end":10294328,"line_start":4,"line_end":4,"column_start":1,"column_end":143}},{"value":"/ This function will overwrite the contents of to.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294329,"byte_end":10294381,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294382,"byte_end":10294385,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::copy`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294386,"byte_end":10294438,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294439,"byte_end":10294442,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294443,"byte_end":10294457,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294458,"byte_end":10294461,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294462,"byte_end":10294475,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294476,"byte_end":10294494,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294495,"byte_end":10294498,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294499,"byte_end":10294544,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ fs::copy(\"foo.txt\", \"bar.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294545,"byte_end":10294587,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294588,"byte_end":10294600,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294601,"byte_end":10294608,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\copy.rs","byte_start":10294609,"byte_end":10294616,"line_start":18,"line_end":18,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":176}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","byte_start":31010,"byte_end":31046,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/ Asynchronous values.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","byte_start":31048,"byte_end":31072,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1346},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31537,"byte_end":31543,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31502,"byte_end":31532,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1349},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31597,"byte_end":31601,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31554,"byte_end":31592,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1352},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31763,"byte_end":31767,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31620,"byte_end":31686,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31691,"byte_end":31758,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1344},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31473,"byte_end":31482,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1349},{"krate":0,"index":1352}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31409,"byte_end":31446,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31930,"byte_end":31940,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31885,"byte_end":31922,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32343,"byte_end":32353,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32059,"byte_end":32144,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32149,"byte_end":32220,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32225,"byte_end":32298,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32303,"byte_end":32331,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32731,"byte_end":32742,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32610,"byte_end":32677,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32682,"byte_end":32705,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32710,"byte_end":32719,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":33954,"byte_end":33960,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":33902,"byte_end":33942,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":34090,"byte_end":34097,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":34011,"byte_end":34082,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34862,"byte_end":34867,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34633,"byte_end":34674,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34675,"byte_end":34678,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34679,"byte_end":34756,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34825,"byte_end":34850,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":178},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":307},{"krate":0,"index":1510},{"krate":0,"index":1605},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1692},{"krate":0,"index":1728},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1790},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":3185}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37622,"byte_end":37699,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37700,"byte_end":37703,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37704,"byte_end":37775,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37776,"byte_end":37856,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37857,"byte_end":37931,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37932,"byte_end":37935,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37936,"byte_end":37966,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37967,"byte_end":37970,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37971,"byte_end":38051,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38052,"byte_end":38129,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38130,"byte_end":38207,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38208,"byte_end":38288,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38289,"byte_end":38367,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38368,"byte_end":38433,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38434,"byte_end":38437,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38438,"byte_end":38510,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38511,"byte_end":38578,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38579,"byte_end":38658,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38659,"byte_end":38733,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38734,"byte_end":38808,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38809,"byte_end":38826,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38827,"byte_end":38830,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38831,"byte_end":38895,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38896,"byte_end":38971,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38972,"byte_end":39047,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39048,"byte_end":39125,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39126,"byte_end":39129,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39130,"byte_end":39206,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39207,"byte_end":39282,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39283,"byte_end":39363,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39364,"byte_end":39435,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39436,"byte_end":39505,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39506,"byte_end":39509,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39510,"byte_end":39582,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39583,"byte_end":39663,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39664,"byte_end":39717,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39718,"byte_end":39721,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39722,"byte_end":39735,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39736,"byte_end":39776,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39777,"byte_end":39801,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39802,"byte_end":39805,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39806,"byte_end":39824,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39825,"byte_end":39864,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39865,"byte_end":39914,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39915,"byte_end":39948,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39949,"byte_end":39952,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39953,"byte_end":39983,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39984,"byte_end":40027,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40028,"byte_end":40031,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40032,"byte_end":40082,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40083,"byte_end":40097,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40098,"byte_end":40103,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40104,"byte_end":40111,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40112,"byte_end":40115,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40116,"byte_end":40145,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40146,"byte_end":40186,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40187,"byte_end":40223,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40224,"byte_end":40265,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40266,"byte_end":40269,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40270,"byte_end":40305,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40306,"byte_end":40309,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40310,"byte_end":40391,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40392,"byte_end":40466,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40467,"byte_end":40545,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40546,"byte_end":40590,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40591,"byte_end":40594,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40595,"byte_end":40665,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40666,"byte_end":40744,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40745,"byte_end":40823,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40824,"byte_end":40901,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40902,"byte_end":40905,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40906,"byte_end":40981,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40982,"byte_end":41020,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41021,"byte_end":41024,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41025,"byte_end":41038,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41039,"byte_end":41093,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41094,"byte_end":41118,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41119,"byte_end":41122,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41123,"byte_end":41141,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41142,"byte_end":41181,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41182,"byte_end":41227,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41228,"byte_end":41271,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41272,"byte_end":41311,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41312,"byte_end":41315,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41316,"byte_end":41350,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41351,"byte_end":41396,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41397,"byte_end":41400,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41401,"byte_end":41432,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41433,"byte_end":41447,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41448,"byte_end":41453,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41454,"byte_end":41461,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41462,"byte_end":41465,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41466,"byte_end":41547,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41548,"byte_end":41626,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41627,"byte_end":41689,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41690,"byte_end":41693,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41694,"byte_end":41707,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41708,"byte_end":41760,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41761,"byte_end":41785,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41786,"byte_end":41789,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41790,"byte_end":41808,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41809,"byte_end":41848,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41849,"byte_end":41896,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41897,"byte_end":41906,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41907,"byte_end":41954,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41955,"byte_end":41958,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41959,"byte_end":42001,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42002,"byte_end":42043,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42044,"byte_end":42047,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42048,"byte_end":42108,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42109,"byte_end":42143,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42144,"byte_end":42147,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42148,"byte_end":42238,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42239,"byte_end":42242,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42243,"byte_end":42257,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42258,"byte_end":42263,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42264,"byte_end":42271,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42272,"byte_end":42275,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42276,"byte_end":42321,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42322,"byte_end":42364,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42365,"byte_end":42410,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42411,"byte_end":42450,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42451,"byte_end":42490,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42491,"byte_end":42494,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42495,"byte_end":42539,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42540,"byte_end":42543,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42544,"byte_end":42626,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42627,"byte_end":42706,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42707,"byte_end":42781,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42782,"byte_end":42855,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42856,"byte_end":42916,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42917,"byte_end":42920,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42921,"byte_end":42962,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42963,"byte_end":42966,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42967,"byte_end":43035,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43036,"byte_end":43105,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43106,"byte_end":43172,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43173,"byte_end":43236,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43237,"byte_end":43304,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43305,"byte_end":43374,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43375,"byte_end":43445,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43446,"byte_end":43524,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43525,"byte_end":43550,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43551,"byte_end":43554,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43555,"byte_end":43631,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43632,"byte_end":43635,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43636,"byte_end":43667,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43668,"byte_end":43671,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43672,"byte_end":43752,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43753,"byte_end":43829,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43830,"byte_end":43877,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43878,"byte_end":43881,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43882,"byte_end":43955,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43956,"byte_end":44032,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44033,"byte_end":44109,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44110,"byte_end":44113,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44114,"byte_end":44135,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44136,"byte_end":44159,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44160,"byte_end":44182,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44183,"byte_end":44186,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44187,"byte_end":44209,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44210,"byte_end":44213,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], and [`Result`] are re-exported","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44214,"byte_end":44288,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ from `std::io` for ease of use.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44289,"byte_end":44324,"line_start":166,"line_end":166,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44325,"byte_end":44328,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44329,"byte_end":44363,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44364,"byte_end":44400,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44401,"byte_end":44441,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44442,"byte_end":44484,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44485,"byte_end":44558,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44559,"byte_end":44642,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44643,"byte_end":44726,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44727,"byte_end":44754,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44755,"byte_end":44788,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44789,"byte_end":44816,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44817,"byte_end":44844,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44845,"byte_end":44915,"line_start":179,"line_end":179,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44916,"byte_end":44953,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44954,"byte_end":44983,"line_start":181,"line_end":181,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47360,"byte_end":47372,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":46683,"byte_end":46714,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":46715,"byte_end":46718,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":46719,"byte_end":46791,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":46792,"byte_end":46870,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":46871,"byte_end":46957,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":46958,"byte_end":47035,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47036,"byte_end":47047,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47048,"byte_end":47051,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47052,"byte_end":47120,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47121,"byte_end":47145,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47146,"byte_end":47149,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47150,"byte_end":47192,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47193,"byte_end":47243,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47244,"byte_end":47297,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47298,"byte_end":47349,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48470,"byte_end":48483,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47390,"byte_end":47475,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47480,"byte_end":47521,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47526,"byte_end":47529,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47534,"byte_end":47581,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47586,"byte_end":47589,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47594,"byte_end":47653,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47658,"byte_end":47716,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47721,"byte_end":47802,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47807,"byte_end":47833,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47838,"byte_end":47841,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47846,"byte_end":47917,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47922,"byte_end":47984,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47989,"byte_end":48060,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48065,"byte_end":48146,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48151,"byte_end":48227,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48232,"byte_end":48283,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48288,"byte_end":48291,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48296,"byte_end":48367,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48372,"byte_end":48375,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48380,"byte_end":48419,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48424,"byte_end":48462,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49386,"byte_end":49393,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48561,"byte_end":48635,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48640,"byte_end":48707,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48712,"byte_end":48715,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48720,"byte_end":48791,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48796,"byte_end":48865,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48870,"byte_end":48944,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48949,"byte_end":49026,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49031,"byte_end":49101,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49106,"byte_end":49159,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49164,"byte_end":49167,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49172,"byte_end":49244,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49249,"byte_end":49271,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49276,"byte_end":49279,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49284,"byte_end":49323,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49328,"byte_end":49378,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52627,"byte_end":52636,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51046,"byte_end":51076,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51077,"byte_end":51080,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51081,"byte_end":51160,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51161,"byte_end":51235,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51236,"byte_end":51315,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51316,"byte_end":51393,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51394,"byte_end":51405,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51406,"byte_end":51409,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51410,"byte_end":51487,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51488,"byte_end":51506,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51507,"byte_end":51510,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51511,"byte_end":51587,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51588,"byte_end":51664,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51665,"byte_end":51684,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51685,"byte_end":51688,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51689,"byte_end":51754,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51755,"byte_end":51835,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51836,"byte_end":51915,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51916,"byte_end":51989,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51990,"byte_end":52063,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52064,"byte_end":52085,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52086,"byte_end":52089,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52090,"byte_end":52174,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52175,"byte_end":52199,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52200,"byte_end":52203,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52204,"byte_end":52277,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52278,"byte_end":52357,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52358,"byte_end":52361,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52362,"byte_end":52427,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52428,"byte_end":52449,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52450,"byte_end":52453,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52454,"byte_end":52493,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52494,"byte_end":52530,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52531,"byte_end":52570,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52571,"byte_end":52616,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54280,"byte_end":54308,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [MaybeUninit<u8>])\n-> bool","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52643,"byte_end":52717,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52722,"byte_end":52771,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52776,"byte_end":52779,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52784,"byte_end":52857,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52862,"byte_end":52933,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52938,"byte_end":53012,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53017,"byte_end":53093,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53098,"byte_end":53136,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53141,"byte_end":53144,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53149,"byte_end":53225,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53230,"byte_end":53304,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53309,"byte_end":53386,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53391,"byte_end":53423,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53428,"byte_end":53431,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53436,"byte_end":53509,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53514,"byte_end":53582,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53587,"byte_end":53643,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53648,"byte_end":53683,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53688,"byte_end":53691,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53696,"byte_end":53772,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53777,"byte_end":53852,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53857,"byte_end":53934,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53939,"byte_end":53957,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53962,"byte_end":53965,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53970,"byte_end":54021,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54026,"byte_end":54029,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54034,"byte_end":54046,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54051,"byte_end":54054,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54059,"byte_end":54131,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54136,"byte_end":54167,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54172,"byte_end":54175,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54180,"byte_end":54211,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54216,"byte_end":54265,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54821,"byte_end":54830,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54451,"byte_end":54504,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54509,"byte_end":54512,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54517,"byte_end":54575,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54580,"byte_end":54583,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54588,"byte_end":54647,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54652,"byte_end":54710,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54715,"byte_end":54782,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54787,"byte_end":54813,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":55291,"byte_end":55304,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"pub fn poll_read_buf<B: BufMut>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where Self: Sized","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54955,"byte_end":55031,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":55036,"byte_end":55065,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":55070,"byte_end":55073,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":55078,"byte_end":55153,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":55158,"byte_end":55234,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":55239,"byte_end":55283,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58459,"byte_end":58468,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":57977,"byte_end":58007,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58008,"byte_end":58011,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58012,"byte_end":58086,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58087,"byte_end":58157,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58158,"byte_end":58227,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58228,"byte_end":58231,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58232,"byte_end":58297,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58298,"byte_end":58319,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58320,"byte_end":58323,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58324,"byte_end":58360,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58361,"byte_end":58402,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58403,"byte_end":58448,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58806,"byte_end":58816,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, &mut Context, SeekFrom)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58475,"byte_end":58532,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58537,"byte_end":58540,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58545,"byte_end":58618,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58623,"byte_end":58649,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58654,"byte_end":58657,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58662,"byte_end":58737,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58742,"byte_end":58798,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59399,"byte_end":59412,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58942,"byte_end":58985,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58990,"byte_end":58993,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58998,"byte_end":59047,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59052,"byte_end":59122,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59127,"byte_end":59188,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59193,"byte_end":59196,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59201,"byte_end":59213,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59218,"byte_end":59221,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59226,"byte_end":59282,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59287,"byte_end":59290,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59295,"byte_end":59307,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59312,"byte_end":59315,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59320,"byte_end":59391,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62915,"byte_end":62925,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61052,"byte_end":61084,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61085,"byte_end":61088,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61089,"byte_end":61171,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61172,"byte_end":61247,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61248,"byte_end":61315,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61316,"byte_end":61319,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61320,"byte_end":61400,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61401,"byte_end":61419,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61420,"byte_end":61423,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61424,"byte_end":61495,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61496,"byte_end":61510,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61511,"byte_end":61514,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61515,"byte_end":61583,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61584,"byte_end":61664,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61665,"byte_end":61744,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61745,"byte_end":61818,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61819,"byte_end":61892,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61893,"byte_end":61914,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61915,"byte_end":61918,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61919,"byte_end":62003,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62004,"byte_end":62028,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62029,"byte_end":62032,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62033,"byte_end":62115,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62116,"byte_end":62199,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62200,"byte_end":62203,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62204,"byte_end":62288,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62289,"byte_end":62373,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62374,"byte_end":62452,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62453,"byte_end":62532,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62533,"byte_end":62594,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62595,"byte_end":62598,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62599,"byte_end":62665,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62666,"byte_end":62688,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62689,"byte_end":62692,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62693,"byte_end":62731,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62732,"byte_end":62776,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62777,"byte_end":62816,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62817,"byte_end":62856,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62857,"byte_end":62904,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63309,"byte_end":63319,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62932,"byte_end":62986,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62991,"byte_end":62994,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62999,"byte_end":63060,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63065,"byte_end":63068,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63073,"byte_end":63135,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63140,"byte_end":63198,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63203,"byte_end":63270,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63275,"byte_end":63301,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63860,"byte_end":63870,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63447,"byte_end":63518,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63523,"byte_end":63545,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63550,"byte_end":63553,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63558,"byte_end":63604,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63609,"byte_end":63612,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63617,"byte_end":63681,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63686,"byte_end":63744,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63749,"byte_end":63817,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63822,"byte_end":63852,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67156,"byte_end":67169,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63952,"byte_end":64026,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64031,"byte_end":64079,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64084,"byte_end":64087,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64092,"byte_end":64163,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64168,"byte_end":64244,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64249,"byte_end":64325,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64330,"byte_end":64405,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64410,"byte_end":64481,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64486,"byte_end":64562,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64567,"byte_end":64595,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64600,"byte_end":64603,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64608,"byte_end":64669,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64674,"byte_end":64745,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64750,"byte_end":64822,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64827,"byte_end":64902,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64907,"byte_end":64980,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64985,"byte_end":65060,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65065,"byte_end":65137,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65142,"byte_end":65153,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65158,"byte_end":65161,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65166,"byte_end":65240,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65245,"byte_end":65317,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65322,"byte_end":65391,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65396,"byte_end":65464,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65469,"byte_end":65530,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65535,"byte_end":65538,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65543,"byte_end":65561,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65566,"byte_end":65569,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65574,"byte_end":65644,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65649,"byte_end":65652,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65657,"byte_end":65720,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65725,"byte_end":65794,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65799,"byte_end":65874,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65879,"byte_end":65952,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65957,"byte_end":66008,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66013,"byte_end":66016,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66021,"byte_end":66091,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66096,"byte_end":66171,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66176,"byte_end":66248,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66253,"byte_end":66323,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66328,"byte_end":66403,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66408,"byte_end":66411,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66416,"byte_end":66497,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66502,"byte_end":66577,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66582,"byte_end":66649,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66654,"byte_end":66657,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66662,"byte_end":66674,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66679,"byte_end":66682,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66687,"byte_end":66758,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66763,"byte_end":66829,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66834,"byte_end":66908,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66913,"byte_end":66977,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66982,"byte_end":67021,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67026,"byte_end":67029,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67034,"byte_end":67046,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67051,"byte_end":67054,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67059,"byte_end":67134,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67139,"byte_end":67148,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67457,"byte_end":67471,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"pub fn poll_write_buf<B: Buf>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<Result<usize, io::Error>> where Self: Sized","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67251,"byte_end":67325,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67330,"byte_end":67333,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67338,"byte_end":67412,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67417,"byte_end":67449,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1719},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10322683,"byte_end":10322694,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10324940,"byte_end":10324943,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10324518,"byte_end":10324586,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10324591,"byte_end":10324594,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10324599,"byte_end":10324611,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10324616,"byte_end":10324619,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10324624,"byte_end":10324684,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10324689,"byte_end":10324692,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10324697,"byte_end":10324767,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10324772,"byte_end":10324845,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10324850,"byte_end":10324928,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10326147,"byte_end":10326161,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"pub fn new_with_ready(E, mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325043,"byte_end":10325137,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325142,"byte_end":10325236,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325241,"byte_end":10325336,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325341,"byte_end":10325435,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325440,"byte_end":10325468,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325473,"byte_end":10325476,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325481,"byte_end":10325518,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325523,"byte_end":10325526,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325531,"byte_end":10325542,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325547,"byte_end":10325564,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325569,"byte_end":10325600,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325605,"byte_end":10325650,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325655,"byte_end":10325709,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325714,"byte_end":10325766,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325771,"byte_end":10325781,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325786,"byte_end":10325793,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325798,"byte_end":10325801,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325806,"byte_end":10325818,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325823,"byte_end":10325826,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325831,"byte_end":10325891,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325896,"byte_end":10325899,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325904,"byte_end":10325974,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10325979,"byte_end":10326052,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10326057,"byte_end":10326135,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10326639,"byte_end":10326646,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10326525,"byte_end":10326599,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10326604,"byte_end":10326627,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10326822,"byte_end":10326829,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10326707,"byte_end":10326782,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10326787,"byte_end":10326810,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327365,"byte_end":10327375,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10326898,"byte_end":10326947,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10326952,"byte_end":10326955,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10326960,"byte_end":10327034,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327039,"byte_end":10327114,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327119,"byte_end":10327122,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327127,"byte_end":10327202,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327207,"byte_end":10327283,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327288,"byte_end":10327353,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328532,"byte_end":10328547,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context, mio::Ready)\n-> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327523,"byte_end":10327574,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327579,"byte_end":10327582,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327587,"byte_end":10327660,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327665,"byte_end":10327736,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327741,"byte_end":10327816,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327821,"byte_end":10327828,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327833,"byte_end":10327836,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327841,"byte_end":10327917,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327922,"byte_end":10327988,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10327993,"byte_end":10327996,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328001,"byte_end":10328074,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328079,"byte_end":10328123,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328128,"byte_end":10328131,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328136,"byte_end":10328191,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328196,"byte_end":10328199,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328204,"byte_end":10328216,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328221,"byte_end":10328224,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328229,"byte_end":10328257,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328262,"byte_end":10328265,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328270,"byte_end":10328302,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328307,"byte_end":10328351,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328356,"byte_end":10328359,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328364,"byte_end":10328377,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328382,"byte_end":10328385,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328390,"byte_end":10328463,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328468,"byte_end":10328520,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329523,"byte_end":10329539,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"pub fn clear_read_ready(&Self, &mut Context, mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10328924,"byte_end":10329000,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329005,"byte_end":10329069,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329074,"byte_end":10329077,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329082,"byte_end":10329144,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329149,"byte_end":10329220,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329225,"byte_end":10329228,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329233,"byte_end":10329308,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329313,"byte_end":10329345,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329350,"byte_end":10329353,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329358,"byte_end":10329370,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329375,"byte_end":10329378,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329383,"byte_end":10329411,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329416,"byte_end":10329419,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329424,"byte_end":10329462,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10329467,"byte_end":10329511,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330979,"byte_end":10330995,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330064,"byte_end":10330116,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330121,"byte_end":10330124,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330129,"byte_end":10330198,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330203,"byte_end":10330246,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330251,"byte_end":10330254,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330259,"byte_end":10330327,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330332,"byte_end":10330407,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330412,"byte_end":10330415,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330420,"byte_end":10330494,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330499,"byte_end":10330544,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330549,"byte_end":10330552,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330557,"byte_end":10330614,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330619,"byte_end":10330622,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330627,"byte_end":10330639,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330644,"byte_end":10330647,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330652,"byte_end":10330680,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330685,"byte_end":10330688,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330693,"byte_end":10330750,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330755,"byte_end":10330799,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330804,"byte_end":10330807,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330812,"byte_end":10330825,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330830,"byte_end":10330833,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330838,"byte_end":10330911,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10330916,"byte_end":10330967,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10331844,"byte_end":10331861,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"pub fn clear_write_ready(&Self, &mut Context) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10331271,"byte_end":10331348,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10331353,"byte_end":10331418,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10331423,"byte_end":10331426,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10331431,"byte_end":10331507,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10331512,"byte_end":10331557,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10331562,"byte_end":10331565,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10331570,"byte_end":10331645,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10331650,"byte_end":10331724,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10331729,"byte_end":10331732,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10331737,"byte_end":10331749,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10331754,"byte_end":10331757,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10331762,"byte_end":10331832,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336103,"byte_end":10336115,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336807,"byte_end":10336810,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"pub fn new<T>(&T) -> io::Result<Registration> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336235,"byte_end":10336291,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336296,"byte_end":10336299,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336304,"byte_end":10336316,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336321,"byte_end":10336324,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336329,"byte_end":10336381,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336386,"byte_end":10336445,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336450,"byte_end":10336453,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336458,"byte_end":10336461,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336466,"byte_end":10336478,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336483,"byte_end":10336486,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336491,"byte_end":10336551,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336556,"byte_end":10336559,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336564,"byte_end":10336634,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336639,"byte_end":10336712,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336717,"byte_end":10336795,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10338213,"byte_end":10338227,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"pub fn new_with_ready<T>(&T, mio::Ready) -> io::Result<Registration> where\nT: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336957,"byte_end":10337048,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337053,"byte_end":10337147,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337152,"byte_end":10337246,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337251,"byte_end":10337346,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337351,"byte_end":10337372,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337377,"byte_end":10337380,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337385,"byte_end":10337422,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337427,"byte_end":10337430,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337435,"byte_end":10337446,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337451,"byte_end":10337468,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337473,"byte_end":10337504,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337509,"byte_end":10337554,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337559,"byte_end":10337613,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337618,"byte_end":10337670,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337675,"byte_end":10337685,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337690,"byte_end":10337697,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337702,"byte_end":10337705,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337710,"byte_end":10337722,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337727,"byte_end":10337730,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337735,"byte_end":10337787,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337792,"byte_end":10337851,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337856,"byte_end":10337859,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337864,"byte_end":10337867,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337872,"byte_end":10337884,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337889,"byte_end":10337892,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337897,"byte_end":10337957,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337962,"byte_end":10337965,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10337970,"byte_end":10338040,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10338045,"byte_end":10338118,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10338123,"byte_end":10338201,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339462,"byte_end":10339472,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"pub fn deregister<T>(&mut Self, &T) -> io::Result<()> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10338686,"byte_end":10338758,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10338763,"byte_end":10338766,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10338771,"byte_end":10338847,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10338852,"byte_end":10338880,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10338885,"byte_end":10338888,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10338893,"byte_end":10338968,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10338973,"byte_end":10339049,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339054,"byte_end":10339119,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339124,"byte_end":10339127,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339132,"byte_end":10339144,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339149,"byte_end":10339152,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339157,"byte_end":10339229,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339234,"byte_end":10339310,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339315,"byte_end":10339388,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339393,"byte_end":10339396,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339401,"byte_end":10339450,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10341023,"byte_end":10341038,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339775,"byte_end":10339840,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339845,"byte_end":10339848,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339853,"byte_end":10339927,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10339932,"byte_end":10340005,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340010,"byte_end":10340060,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340065,"byte_end":10340068,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340073,"byte_end":10340146,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340151,"byte_end":10340226,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340231,"byte_end":10340267,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340272,"byte_end":10340275,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340280,"byte_end":10340298,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340303,"byte_end":10340306,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340311,"byte_end":10340356,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340361,"byte_end":10340364,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340369,"byte_end":10340444,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340449,"byte_end":10340510,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340515,"byte_end":10340518,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340523,"byte_end":10340598,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340603,"byte_end":10340650,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340655,"byte_end":10340658,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340663,"byte_end":10340739,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340744,"byte_end":10340817,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340822,"byte_end":10340825,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340830,"byte_end":10340903,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340908,"byte_end":10340911,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340916,"byte_end":10340928,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340933,"byte_end":10340936,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10340941,"byte_end":10341011,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10341879,"byte_end":10341894,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"pub fn take_read_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10341518,"byte_end":10341563,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10341568,"byte_end":10341571,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10341576,"byte_end":10341648,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10341653,"byte_end":10341728,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10341733,"byte_end":10341801,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10341806,"byte_end":10341809,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10341814,"byte_end":10341867,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10343248,"byte_end":10343264,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10341996,"byte_end":10342062,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342067,"byte_end":10342070,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342075,"byte_end":10342150,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342155,"byte_end":10342229,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342234,"byte_end":10342284,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342289,"byte_end":10342292,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342297,"byte_end":10342370,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342375,"byte_end":10342450,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342455,"byte_end":10342491,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342496,"byte_end":10342499,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342504,"byte_end":10342522,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342527,"byte_end":10342530,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342535,"byte_end":10342580,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342585,"byte_end":10342588,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342593,"byte_end":10342668,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342673,"byte_end":10342734,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342739,"byte_end":10342742,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342747,"byte_end":10342822,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342827,"byte_end":10342875,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342880,"byte_end":10342883,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342888,"byte_end":10342964,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10342969,"byte_end":10343042,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10343047,"byte_end":10343050,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10343055,"byte_end":10343128,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10343133,"byte_end":10343136,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10343141,"byte_end":10343153,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10343158,"byte_end":10343161,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10343166,"byte_end":10343236,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10344111,"byte_end":10344127,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"pub fn take_write_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10343745,"byte_end":10343792,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10343797,"byte_end":10343800,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10343805,"byte_end":10343878,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10343883,"byte_end":10343958,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10343963,"byte_end":10344031,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10344036,"byte_end":10344039,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10344044,"byte_end":10344099,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stderr.rs","byte_start":10348507,"byte_end":10348513,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"Stderr {  }","parent":null,"children":[{"krate":0,"index":1777}],"decl_id":null,"docs":" A handle to the standard error stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1775},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stderr.rs","byte_start":10349562,"byte_end":10349568,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1781},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stdin.rs","byte_start":10351632,"byte_end":10351637,"line_start":29,"line_end":29,"column_start":16,"column_end":21},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"Stdin {  }","parent":null,"children":[{"krate":0,"index":1782}],"decl_id":null,"docs":" A handle to the standard input stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stdin.rs","byte_start":10352294,"byte_end":10352299,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stdout.rs","byte_start":10354343,"byte_end":10354349,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"Stdout {  }","parent":null,"children":[{"krate":0,"index":1787}],"decl_id":null,"docs":" A handle to the standard output stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stdout.rs","byte_start":10355387,"byte_end":10355393,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10357032,"byte_end":10357040,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1906}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10357169,"byte_end":10357178,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1909}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1910},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10357492,"byte_end":10357497,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358123,"byte_end":10358133,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358020,"byte_end":10358095,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358100,"byte_end":10358111,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358540,"byte_end":10358547,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358216,"byte_end":10358265,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358270,"byte_end":10358273,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358278,"byte_end":10358290,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358295,"byte_end":10358298,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358303,"byte_end":10358377,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358382,"byte_end":10358432,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358437,"byte_end":10358501,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358506,"byte_end":10358528,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10359048,"byte_end":10359058,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358946,"byte_end":10359020,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10359025,"byte_end":10359036,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1912},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\seek.rs","byte_start":10362295,"byte_end":10362299,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1915},{"krate":0,"index":1916}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\seek.rs","byte_start":10362132,"byte_end":10362198,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\seek.rs","byte_start":10362216,"byte_end":10362283,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2602},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10365458,"byte_end":10365473,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2603},{"krate":0,"index":2605},{"krate":0,"index":2607},{"krate":0,"index":2608}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10368173,"byte_end":10368183,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2602},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10371074,"byte_end":10371083,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2602},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2607},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10372483,"byte_end":10372488,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2602},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10374338,"byte_end":10374343,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2602},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2610},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10376522,"byte_end":10376534,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2613},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":2625},{"krate":0,"index":2627},{"krate":0,"index":2629},{"krate":0,"index":2631},{"krate":0,"index":2633},{"krate":0,"index":2635},{"krate":0,"index":2637},{"krate":0,"index":2639},{"krate":0,"index":2641},{"krate":0,"index":2643},{"krate":0,"index":2645},{"krate":0,"index":2647},{"krate":0,"index":2649},{"krate":0,"index":2651},{"krate":0,"index":2653},{"krate":0,"index":2655},{"krate":0,"index":2657},{"krate":0,"index":2659},{"krate":0,"index":2620},{"krate":0,"index":2622},{"krate":0,"index":2624}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10377654,"byte_end":10377659,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10380488,"byte_end":10380492,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10382794,"byte_end":10382802,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10384699,"byte_end":10384709,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10386146,"byte_end":10386153,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10387442,"byte_end":10387449,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2629},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10388780,"byte_end":10388788,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10390128,"byte_end":10390136,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2633},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10391417,"byte_end":10391425,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10392720,"byte_end":10392728,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10394091,"byte_end":10394099,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10395392,"byte_end":10395400,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10396860,"byte_end":10396869,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10398263,"byte_end":10398272,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10399619,"byte_end":10399630,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10400991,"byte_end":10401002,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10402303,"byte_end":10402314,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10403626,"byte_end":10403637,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10405018,"byte_end":10405029,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10406323,"byte_end":10406334,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10407812,"byte_end":10407824,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10409218,"byte_end":10409230,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10410843,"byte_end":10410854,"line_start":1022,"line_end":1022,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10412422,"byte_end":10412436,"line_start":1069,"line_end":1069,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2624},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10413614,"byte_end":10413618,"line_start":1103,"line_end":1103,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1991},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414660,"byte_end":10414672,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":1992}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10413885,"byte_end":10413958,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10413959,"byte_end":10413962,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10413963,"byte_end":10414034,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414035,"byte_end":10414038,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414039,"byte_end":10414053,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414054,"byte_end":10414057,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414058,"byte_end":10414065,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414066,"byte_end":10414102,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414103,"byte_end":10414129,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414130,"byte_end":10414133,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414134,"byte_end":10414152,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414153,"byte_end":10414192,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414193,"byte_end":10414242,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414243,"byte_end":10414246,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414247,"byte_end":10414300,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414301,"byte_end":10414348,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414349,"byte_end":10414352,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414353,"byte_end":10414382,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414383,"byte_end":10414428,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414429,"byte_end":10414454,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414455,"byte_end":10414487,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414488,"byte_end":10414491,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414492,"byte_end":10414506,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414507,"byte_end":10414512,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414513,"byte_end":10414520,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414521,"byte_end":10414524,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414525,"byte_end":10414584,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414585,"byte_end":10414588,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414589,"byte_end":10414617,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414618,"byte_end":10414649,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415389,"byte_end":10415393,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":1991},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414690,"byte_end":10414759,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414764,"byte_end":10414817,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414822,"byte_end":10414825,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414830,"byte_end":10414907,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414912,"byte_end":10414934,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414939,"byte_end":10414942,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414947,"byte_end":10414961,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414966,"byte_end":10414969,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414974,"byte_end":10414987,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414992,"byte_end":10415016,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415021,"byte_end":10415047,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415052,"byte_end":10415055,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415060,"byte_end":10415086,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415091,"byte_end":10415094,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415099,"byte_end":10415144,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415149,"byte_end":10415197,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415202,"byte_end":10415243,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415248,"byte_end":10415251,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415256,"byte_end":10415293,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415298,"byte_end":10415340,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415345,"byte_end":10415357,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415362,"byte_end":10415369,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415374,"byte_end":10415381,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2662},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10417596,"byte_end":10417609,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2663},{"krate":0,"index":2665},{"krate":0,"index":2668},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2676},{"krate":0,"index":2678},{"krate":0,"index":2680},{"krate":0,"index":2682},{"krate":0,"index":2684},{"krate":0,"index":2686},{"krate":0,"index":2688},{"krate":0,"index":2690},{"krate":0,"index":2692},{"krate":0,"index":2694},{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2670},{"krate":0,"index":2671}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10419451,"byte_end":10419456,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2665},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10422258,"byte_end":10422267,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10423609,"byte_end":10423618,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10425018,"byte_end":10425026,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10426287,"byte_end":10426295,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10427610,"byte_end":10427619,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10428932,"byte_end":10428941,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10430281,"byte_end":10430290,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10431625,"byte_end":10431634,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10433011,"byte_end":10433020,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10434407,"byte_end":10434416,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10435871,"byte_end":10435881,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10437271,"byte_end":10437281,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10438613,"byte_end":10438625,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10439952,"byte_end":10439964,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10441318,"byte_end":10441330,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10442679,"byte_end":10442691,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10444082,"byte_end":10444094,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10445495,"byte_end":10445507,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10446974,"byte_end":10446987,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10448389,"byte_end":10448402,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10449422,"byte_end":10449427,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10450647,"byte_end":10450655,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11760},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10452064,"byte_end":10452073,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":11762},{"krate":0,"index":11763},{"krate":0,"index":11764},{"krate":0,"index":11765}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10452409,"byte_end":10452412,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10452267,"byte_end":10452359,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10452364,"byte_end":10452397,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10452574,"byte_end":10452587,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10452497,"byte_end":10452562,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453263,"byte_end":10453270,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453126,"byte_end":10453172,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453177,"byte_end":10453180,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453185,"byte_end":10453251,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453462,"byte_end":10453469,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453317,"byte_end":10453371,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453376,"byte_end":10453379,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453384,"byte_end":10453450,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453680,"byte_end":10453691,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453528,"byte_end":10453589,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453594,"byte_end":10453597,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453602,"byte_end":10453668,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453922,"byte_end":10453932,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453771,"byte_end":10453834,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453839,"byte_end":10453842,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453847,"byte_end":10453910,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10454136,"byte_end":10454142,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10453976,"byte_end":10454032,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10454037,"byte_end":10454040,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10454045,"byte_end":10454124,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":11746},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10458388,"byte_end":10458397,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":11748}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10458676,"byte_end":10458679,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10458522,"byte_end":10458579,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10458584,"byte_end":10458587,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10458592,"byte_end":10458664,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10459011,"byte_end":10459024,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10458811,"byte_end":10458896,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10458901,"byte_end":10458914,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10458919,"byte_end":10458922,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10458927,"byte_end":10458999,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10459481,"byte_end":10459488,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10459336,"byte_end":10459386,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10459391,"byte_end":10459394,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10459399,"byte_end":10459469,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10459708,"byte_end":10459715,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10459555,"byte_end":10459613,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10459618,"byte_end":10459621,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10459626,"byte_end":10459696,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10459950,"byte_end":10459961,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10459790,"byte_end":10459855,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10459860,"byte_end":10459863,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10459868,"byte_end":10459938,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10460225,"byte_end":10460235,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10460070,"byte_end":10460137,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10460142,"byte_end":10460145,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10460150,"byte_end":10460213,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11683},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10464054,"byte_end":10464063,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":11685},{"krate":0,"index":11686},{"krate":0,"index":11687}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10464371,"byte_end":10464374,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10464229,"byte_end":10464321,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10464326,"byte_end":10464359,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10464536,"byte_end":10464549,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10464459,"byte_end":10464524,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10465631,"byte_end":10465638,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10465573,"byte_end":10465619,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10465829,"byte_end":10465836,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10465685,"byte_end":10465739,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10465744,"byte_end":10465747,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10465752,"byte_end":10465817,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10466046,"byte_end":10466057,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10465895,"byte_end":10465956,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10465961,"byte_end":10465964,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10465969,"byte_end":10466034,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10466288,"byte_end":10466298,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10466137,"byte_end":10466200,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10466205,"byte_end":10466208,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10466213,"byte_end":10466276,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10466410,"byte_end":10466416,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10466342,"byte_end":10466398,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":11634},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10469049,"byte_end":10469054,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11637},{"krate":0,"index":11638},{"krate":0,"index":11639}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10469495,"byte_end":10469502,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10469421,"byte_end":10469483,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10469834,"byte_end":10469841,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10469571,"byte_end":10469641,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10469646,"byte_end":10469649,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10469654,"byte_end":10469727,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10469732,"byte_end":10469805,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10469810,"byte_end":10469822,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10470200,"byte_end":10470211,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10469930,"byte_end":10470007,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10470012,"byte_end":10470015,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10470020,"byte_end":10470093,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10470098,"byte_end":10470171,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10470176,"byte_end":10470188,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10470408,"byte_end":10470418,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10470340,"byte_end":10470396,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\copy.rs","byte_start":10472994,"byte_end":10472998,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\copy.rs","byte_start":10472911,"byte_end":10472978,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2708},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\copy.rs","byte_start":10474263,"byte_end":10474267,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"pub fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W) -> Copy where\nR: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2728},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":10477024,"byte_end":10477029,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2729}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":10477708,"byte_end":10477713,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\flush.rs","byte_start":10478930,"byte_end":10478935,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2734}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11611},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480051,"byte_end":10480056,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":11613},{"krate":0,"index":11614},{"krate":0,"index":11615},{"krate":0,"index":11616}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480903,"byte_end":10480912,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480413,"byte_end":10480453,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480458,"byte_end":10480461,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480466,"byte_end":10480480,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480485,"byte_end":10480488,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480493,"byte_end":10480500,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480505,"byte_end":10480539,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480544,"byte_end":10480579,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480584,"byte_end":10480587,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480592,"byte_end":10480675,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480680,"byte_end":10480720,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480725,"byte_end":10480728,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480733,"byte_end":10480786,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480791,"byte_end":10480834,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480839,"byte_end":10480844,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480849,"byte_end":10480861,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480866,"byte_end":10480873,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480878,"byte_end":10480885,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10481139,"byte_end":10481146,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10481072,"byte_end":10481127,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10481265,"byte_end":10481272,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10481206,"byte_end":10481253,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2280},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10481559,"byte_end":10481569,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10481324,"byte_end":10481385,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10481390,"byte_end":10481393,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10481398,"byte_end":10481461,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10481466,"byte_end":10481547,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10481688,"byte_end":10481702,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2739},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read.rs","byte_start":10483671,"byte_end":10483675,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2742},{"krate":0,"index":2743}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read.rs","byte_start":10483588,"byte_end":10483655,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2748},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_buf.rs","byte_start":10484738,"byte_end":10484745,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2752},{"krate":0,"index":2753}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_buf.rs","byte_start":10484655,"byte_end":10484722,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_exact.rs","byte_start":10485994,"byte_end":10486003,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_exact.rs","byte_start":10485911,"byte_end":10485978,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":11553},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490327,"byte_end":10490333,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":11555}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11520},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490349,"byte_end":10490355,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":11522}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11475},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490371,"byte_end":10490378,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":11477},{"krate":0,"index":11478},{"krate":0,"index":11480}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11430},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490403,"byte_end":10490410,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":11432},{"krate":0,"index":11433},{"krate":0,"index":11435}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11385},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490435,"byte_end":10490442,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":11387},{"krate":0,"index":11388},{"krate":0,"index":11390}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11340},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490467,"byte_end":10490475,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":11342},{"krate":0,"index":11343},{"krate":0,"index":11345}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11295},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490503,"byte_end":10490510,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":11297},{"krate":0,"index":11298},{"krate":0,"index":11300}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11250},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490535,"byte_end":10490542,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":11252},{"krate":0,"index":11253},{"krate":0,"index":11255}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11205},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490567,"byte_end":10490574,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":11207},{"krate":0,"index":11208},{"krate":0,"index":11210}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11160},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490599,"byte_end":10490607,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":11162},{"krate":0,"index":11163},{"krate":0,"index":11165}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11115},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490635,"byte_end":10490644,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":11117},{"krate":0,"index":11118},{"krate":0,"index":11120}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11070},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490672,"byte_end":10490681,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":11072},{"krate":0,"index":11073},{"krate":0,"index":11075}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11025},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490709,"byte_end":10490718,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":11027},{"krate":0,"index":11028},{"krate":0,"index":11030}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10980},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490746,"byte_end":10490756,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":10982},{"krate":0,"index":10983},{"krate":0,"index":10985}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10935},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490787,"byte_end":10490796,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":10937},{"krate":0,"index":10938},{"krate":0,"index":10940}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10890},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490824,"byte_end":10490833,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":10892},{"krate":0,"index":10893},{"krate":0,"index":10895}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10845},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490861,"byte_end":10490870,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":10847},{"krate":0,"index":10848},{"krate":0,"index":10850}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10800},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":10490898,"byte_end":10490908,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":10802},{"krate":0,"index":10803},{"krate":0,"index":10805}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_line.rs","byte_start":10491326,"byte_end":10491334,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2919}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_line.rs","byte_start":10491243,"byte_end":10491310,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2924},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_end.rs","byte_start":10494570,"byte_end":10494579,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_end.rs","byte_start":10494440,"byte_end":10494507,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2935},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_string.rs","byte_start":10497558,"byte_end":10497570,"line_start":13,"line_end":13,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_string.rs","byte_start":10497475,"byte_end":10497542,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2946},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_until.rs","byte_start":10500023,"byte_end":10500032,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2949},{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_until.rs","byte_start":10499940,"byte_end":10500007,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2958},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\repeat.rs","byte_start":10502478,"byte_end":10502484,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2959}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2957},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\repeat.rs","byte_start":10503170,"byte_end":10503176,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2962},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\shutdown.rs","byte_start":10504125,"byte_end":10504133,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2965}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2970},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\sink.rs","byte_start":10505305,"byte_end":10505309,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2971}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2972},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\sink.rs","byte_start":10506150,"byte_end":10506154,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10777},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10507399,"byte_end":10507404,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":10779},{"krate":0,"index":10780},{"krate":0,"index":10781},{"krate":0,"index":10782}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10508265,"byte_end":10508277,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10507753,"byte_end":10507796,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10507801,"byte_end":10507804,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10507809,"byte_end":10507823,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10507828,"byte_end":10507831,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10507836,"byte_end":10507843,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10507848,"byte_end":10507882,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10507887,"byte_end":10507922,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10507927,"byte_end":10507930,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10507935,"byte_end":10508018,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10508023,"byte_end":10508070,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10508075,"byte_end":10508078,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10508083,"byte_end":10508145,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10508150,"byte_end":10508196,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10508201,"byte_end":10508206,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10508211,"byte_end":10508223,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10508228,"byte_end":10508235,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10508240,"byte_end":10508247,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10508515,"byte_end":10508532,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10731},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521326,"byte_end":10521338,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":10734},{"krate":0,"index":10735}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2988},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522614,"byte_end":10522627,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"pub fn stream_reader<S, B>(S) -> StreamReader<S, B> where S: Stream<Item =\nResult<B, io::Error>>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521415,"byte_end":10521495,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521496,"byte_end":10521499,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521500,"byte_end":10521513,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521514,"byte_end":10521517,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521518,"byte_end":10521525,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521526,"byte_end":10521547,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521548,"byte_end":10521597,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521598,"byte_end":10521618,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521619,"byte_end":10521665,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521666,"byte_end":10521669,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521670,"byte_end":10521710,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521711,"byte_end":10521753,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521754,"byte_end":10521800,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521801,"byte_end":10521847,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521848,"byte_end":10521896,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521897,"byte_end":10521904,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521905,"byte_end":10521908,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521909,"byte_end":10521943,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521944,"byte_end":10521985,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521986,"byte_end":10521989,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10521990,"byte_end":10522029,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522030,"byte_end":10522055,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522056,"byte_end":10522093,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522094,"byte_end":10522131,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522132,"byte_end":10522135,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522136,"byte_end":10522178,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522179,"byte_end":10522225,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522226,"byte_end":10522263,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522264,"byte_end":10522267,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522268,"byte_end":10522295,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522296,"byte_end":10522342,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522343,"byte_end":10522385,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522386,"byte_end":10522389,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522390,"byte_end":10522425,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522426,"byte_end":10522472,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522473,"byte_end":10522476,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522477,"byte_end":10522489,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522490,"byte_end":10522497,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522498,"byte_end":10522505,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10686},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510127,"byte_end":10510131,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10688},{"krate":0,"index":10689}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510721,"byte_end":10510726,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510418,"byte_end":10510471,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510476,"byte_end":10510522,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510527,"byte_end":10510530,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510535,"byte_end":10510545,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510550,"byte_end":10510553,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510558,"byte_end":10510635,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510640,"byte_end":10510709,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511045,"byte_end":10511054,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510774,"byte_end":10510845,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510850,"byte_end":10510924,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510929,"byte_end":10511004,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511009,"byte_end":10511033,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511177,"byte_end":10511184,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511119,"byte_end":10511165,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511476,"byte_end":10511483,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511231,"byte_end":10511285,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511290,"byte_end":10511293,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511298,"byte_end":10511371,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511376,"byte_end":10511448,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511453,"byte_end":10511464,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511794,"byte_end":10511805,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511542,"byte_end":10511603,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511608,"byte_end":10511611,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511616,"byte_end":10511689,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511694,"byte_end":10511766,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511771,"byte_end":10511782,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511951,"byte_end":10511961,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10511885,"byte_end":10511939,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3011},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write.rs","byte_start":10513891,"byte_end":10513896,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":3014},{"krate":0,"index":3015}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write.rs","byte_start":10513808,"byte_end":10513875,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3020},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_all.rs","byte_start":10514792,"byte_end":10514800,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":3023},{"krate":0,"index":3024}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_all.rs","byte_start":10514709,"byte_end":10514776,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3029},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_buf.rs","byte_start":10516183,"byte_end":10516191,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":3033},{"krate":0,"index":3034}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_buf.rs","byte_start":10516100,"byte_end":10516167,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":10626},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520072,"byte_end":10520079,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":10628},{"krate":0,"index":10629}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10589},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520095,"byte_end":10520102,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":10591},{"krate":0,"index":10592}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10544},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520118,"byte_end":10520126,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":10546},{"krate":0,"index":10547},{"krate":0,"index":10549}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10499},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520151,"byte_end":10520159,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":10501},{"krate":0,"index":10502},{"krate":0,"index":10504}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10454},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520184,"byte_end":10520192,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":10456},{"krate":0,"index":10457},{"krate":0,"index":10459}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10409},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520217,"byte_end":10520226,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":10411},{"krate":0,"index":10412},{"krate":0,"index":10414}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10364},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520254,"byte_end":10520262,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":10366},{"krate":0,"index":10367},{"krate":0,"index":10369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10319},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520287,"byte_end":10520295,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":10321},{"krate":0,"index":10322},{"krate":0,"index":10324}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10274},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520320,"byte_end":10520328,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":10276},{"krate":0,"index":10277},{"krate":0,"index":10279}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10229},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520353,"byte_end":10520362,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":10231},{"krate":0,"index":10232},{"krate":0,"index":10234}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10184},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520390,"byte_end":10520400,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":10186},{"krate":0,"index":10187},{"krate":0,"index":10189}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10139},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520428,"byte_end":10520438,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":10141},{"krate":0,"index":10142},{"krate":0,"index":10144}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10094},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520466,"byte_end":10520476,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":10096},{"krate":0,"index":10097},{"krate":0,"index":10099}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10049},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520504,"byte_end":10520515,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":10051},{"krate":0,"index":10052},{"krate":0,"index":10054}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10004},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520546,"byte_end":10520556,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":10006},{"krate":0,"index":10007},{"krate":0,"index":10009}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9959},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520584,"byte_end":10520594,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":9961},{"krate":0,"index":9962},{"krate":0,"index":9964}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9914},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520622,"byte_end":10520632,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":9916},{"krate":0,"index":9917},{"krate":0,"index":9919}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9869},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":10520660,"byte_end":10520671,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":9871},{"krate":0,"index":9872},{"krate":0,"index":9874}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":372},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3251},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3546},{"krate":0,"index":3668}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71776,"byte_end":71794,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71796,"byte_end":71834,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71835,"byte_end":71838,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71839,"byte_end":71922,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71923,"byte_end":71988,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71989,"byte_end":71992,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71993,"byte_end":72011,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72012,"byte_end":72015,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72016,"byte_end":72104,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72105,"byte_end":72174,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72175,"byte_end":72263,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72264,"byte_end":72322,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72323,"byte_end":72386,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72387,"byte_end":72452,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72454,"byte_end":72457,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72458,"byte_end":72490,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72491,"byte_end":72519,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72520,"byte_end":72548,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72549,"byte_end":72583,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72584,"byte_end":72614,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72615,"byte_end":72649,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73898,"byte_end":73911,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73210,"byte_end":73287,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73288,"byte_end":73291,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73292,"byte_end":73301,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73302,"byte_end":73305,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73306,"byte_end":73383,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73384,"byte_end":73455,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73456,"byte_end":73483,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73484,"byte_end":73487,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73488,"byte_end":73501,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73502,"byte_end":73505,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73506,"byte_end":73583,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73584,"byte_end":73656,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73657,"byte_end":73726,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73727,"byte_end":73730,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73731,"byte_end":73810,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73811,"byte_end":73887,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":79572,"byte_end":79589,"line_start":237,"line_end":237,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":79605,"byte_end":79609,"line_start":238,"line_end":238,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":79670,"byte_end":79676,"line_start":239,"line_end":239,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":79748,"byte_end":79763,"line_start":241,"line_end":241,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> Self::Future","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":79900,"byte_end":79905,"line_start":248,"line_end":248,"column_start":13,"column_end":18},"name":"Ready","qualname":"::net::addr::sealed::MaybeReady::Ready","value":"MaybeReady::Ready(Option<SocketAddr>)","parent":{"krate":0,"index":3223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3227},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":79939,"byte_end":79947,"line_start":249,"line_end":249,"column_start":13,"column_end":21},"name":"Blocking","qualname":"::net::addr::sealed::MaybeReady::Blocking","value":"MaybeReady::Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>)","parent":{"krate":0,"index":3223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3223},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":79875,"byte_end":79885,"line_start":247,"line_end":247,"column_start":18,"column_end":28},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"pub enum MaybeReady {\n    Ready(Option<SocketAddr>),\n    Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>),\n}","parent":null,"children":[{"krate":0,"index":3224},{"krate":0,"index":3227}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":18746,"byte_end":18769,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3233},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":80100,"byte_end":80103,"line_start":255,"line_end":255,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3236},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":80147,"byte_end":80151,"line_start":256,"line_end":256,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3232},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":80076,"byte_end":80085,"line_start":254,"line_end":254,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":3233},{"krate":0,"index":3236}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":18746,"byte_end":18769,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":3246},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\lookup_host.rs","byte_start":10526921,"byte_end":10526932,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":18746,"byte_end":18769,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":3251},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","parent":null,"children":[{"krate":0,"index":3252},{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":13221},{"krate":0,"index":3405},{"krate":0,"index":3504}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":10527080,"byte_end":10527101,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10529701,"byte_end":10529712,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3508}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531681,"byte_end":10531685,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10529795,"byte_end":10529871,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10529876,"byte_end":10529879,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10529884,"byte_end":10529945,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10529950,"byte_end":10529953,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10529958,"byte_end":10530033,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530038,"byte_end":10530114,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530119,"byte_end":10530130,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530135,"byte_end":10530138,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530143,"byte_end":10530218,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530223,"byte_end":10530297,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530302,"byte_end":10530379,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530384,"byte_end":10530387,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530392,"byte_end":10530468,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530473,"byte_end":10530546,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530551,"byte_end":10530624,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530629,"byte_end":10530681,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530686,"byte_end":10530689,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530694,"byte_end":10530757,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530762,"byte_end":10530765,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530770,"byte_end":10530824,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530829,"byte_end":10530832,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530837,"byte_end":10530851,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530856,"byte_end":10530859,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530864,"byte_end":10530877,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530882,"byte_end":10530914,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530919,"byte_end":10530922,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530927,"byte_end":10530943,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530948,"byte_end":10530951,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530956,"byte_end":10530974,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10530979,"byte_end":10531018,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531023,"byte_end":10531089,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531094,"byte_end":10531097,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531102,"byte_end":10531129,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531134,"byte_end":10531137,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531142,"byte_end":10531169,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531174,"byte_end":10531188,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531193,"byte_end":10531198,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531203,"byte_end":10531210,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531215,"byte_end":10531218,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531223,"byte_end":10531253,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531258,"byte_end":10531261,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531266,"byte_end":10531279,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531284,"byte_end":10531316,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531321,"byte_end":10531348,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531353,"byte_end":10531356,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531361,"byte_end":10531377,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531382,"byte_end":10531385,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531390,"byte_end":10531408,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531413,"byte_end":10531452,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531457,"byte_end":10531542,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531547,"byte_end":10531550,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531555,"byte_end":10531582,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531587,"byte_end":10531590,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531595,"byte_end":10531622,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531627,"byte_end":10531641,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531646,"byte_end":10531651,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10531656,"byte_end":10531663,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10533257,"byte_end":10533263,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532398,"byte_end":10532455,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532460,"byte_end":10532463,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532468,"byte_end":10532543,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532548,"byte_end":10532618,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532623,"byte_end":10532652,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532657,"byte_end":10532660,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532665,"byte_end":10532712,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532717,"byte_end":10532720,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532725,"byte_end":10532739,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532744,"byte_end":10532747,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532752,"byte_end":10532765,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532770,"byte_end":10532802,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532807,"byte_end":10532810,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532815,"byte_end":10532831,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532836,"byte_end":10532839,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532844,"byte_end":10532862,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532867,"byte_end":10532906,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532911,"byte_end":10532981,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532986,"byte_end":10532989,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10532994,"byte_end":10533033,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10533038,"byte_end":10533108,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10533113,"byte_end":10533176,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10533181,"byte_end":10533190,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10533195,"byte_end":10533198,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10533203,"byte_end":10533217,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10533222,"byte_end":10533227,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10533232,"byte_end":10533239,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10533599,"byte_end":10533610,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","sig":null,"attributes":[{"value":"/ Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10533376,"byte_end":10533448,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10533453,"byte_end":10533456,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ In case if I/O resource isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10533461,"byte_end":10533537,"line_start":190,"line_end":190,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10533542,"byte_end":10533587,"line_start":191,"line_end":191,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536472,"byte_end":10536480,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10534457,"byte_end":10534529,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10534534,"byte_end":10534537,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10534542,"byte_end":10534612,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10534617,"byte_end":10534693,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10534698,"byte_end":10534742,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10534747,"byte_end":10534750,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10534755,"byte_end":10534830,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10534835,"byte_end":10534911,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10534916,"byte_end":10534981,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10534986,"byte_end":10535041,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535046,"byte_end":10535049,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535054,"byte_end":10535125,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535130,"byte_end":10535205,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535210,"byte_end":10535249,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535254,"byte_end":10535257,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535262,"byte_end":10535325,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535330,"byte_end":10535333,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535338,"byte_end":10535411,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535416,"byte_end":10535447,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535452,"byte_end":10535455,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535460,"byte_end":10535533,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535538,"byte_end":10535613,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535618,"byte_end":10535691,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535696,"byte_end":10535723,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535728,"byte_end":10535731,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535736,"byte_end":10535750,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535755,"byte_end":10535758,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535763,"byte_end":10535781,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535786,"byte_end":10535812,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535817,"byte_end":10535849,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535854,"byte_end":10535857,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535862,"byte_end":10535880,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535885,"byte_end":10535936,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10535941,"byte_end":10536012,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536017,"byte_end":10536077,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536082,"byte_end":10536096,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536101,"byte_end":10536106,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536111,"byte_end":10536118,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536123,"byte_end":10536126,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536131,"byte_end":10536143,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536148,"byte_end":10536151,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536156,"byte_end":10536216,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536221,"byte_end":10536224,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536229,"byte_end":10536299,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536304,"byte_end":10536377,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536382,"byte_end":10536460,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537564,"byte_end":10537574,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536838,"byte_end":10536899,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536904,"byte_end":10536907,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536912,"byte_end":10536985,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10536990,"byte_end":10537024,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537029,"byte_end":10537032,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537037,"byte_end":10537051,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537056,"byte_end":10537059,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537064,"byte_end":10537082,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537087,"byte_end":10537119,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537124,"byte_end":10537127,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537132,"byte_end":10537148,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537153,"byte_end":10537208,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537213,"byte_end":10537216,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537221,"byte_end":10537239,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537244,"byte_end":10537283,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537288,"byte_end":10537354,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537359,"byte_end":10537362,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537367,"byte_end":10537409,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537414,"byte_end":10537503,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537508,"byte_end":10537511,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537516,"byte_end":10537530,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537535,"byte_end":10537540,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537545,"byte_end":10537552,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539005,"byte_end":10539013,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537660,"byte_end":10537734,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537739,"byte_end":10537742,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537747,"byte_end":10537809,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537814,"byte_end":10537817,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537822,"byte_end":10537898,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537903,"byte_end":10537972,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10537977,"byte_end":10538006,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538011,"byte_end":10538014,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538019,"byte_end":10538031,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538036,"byte_end":10538039,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538044,"byte_end":10538119,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538124,"byte_end":10538199,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538204,"byte_end":10538278,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538283,"byte_end":10538358,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538363,"byte_end":10538371,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538376,"byte_end":10538379,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538384,"byte_end":10538398,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538403,"byte_end":10538406,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538411,"byte_end":10538424,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538429,"byte_end":10538482,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538487,"byte_end":10538490,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538495,"byte_end":10538513,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538518,"byte_end":10538539,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538544,"byte_end":10538622,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538627,"byte_end":10538674,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538679,"byte_end":10538682,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538687,"byte_end":10538743,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538748,"byte_end":10538774,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538779,"byte_end":10538810,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538815,"byte_end":10538859,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538864,"byte_end":10538881,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538886,"byte_end":10538939,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538944,"byte_end":10538957,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538962,"byte_end":10538971,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538976,"byte_end":10538981,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10538986,"byte_end":10538993,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539699,"byte_end":10539702,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539082,"byte_end":10539140,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539145,"byte_end":10539148,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539153,"byte_end":10539213,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539218,"byte_end":10539221,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539226,"byte_end":10539263,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539268,"byte_end":10539271,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539276,"byte_end":10539290,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539295,"byte_end":10539298,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539303,"byte_end":10539316,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539321,"byte_end":10539353,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539358,"byte_end":10539361,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539366,"byte_end":10539382,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539387,"byte_end":10539390,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539395,"byte_end":10539413,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539418,"byte_end":10539457,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539462,"byte_end":10539524,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539529,"byte_end":10539532,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539537,"byte_end":10539594,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539599,"byte_end":10539639,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539644,"byte_end":10539647,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539652,"byte_end":10539665,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539670,"byte_end":10539675,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539680,"byte_end":10539687,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540341,"byte_end":10540348,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539774,"byte_end":10539832,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539837,"byte_end":10539840,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539845,"byte_end":10539921,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539926,"byte_end":10539947,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539952,"byte_end":10539955,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539960,"byte_end":10539974,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539979,"byte_end":10539982,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10539987,"byte_end":10540000,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540005,"byte_end":10540037,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540042,"byte_end":10540045,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540050,"byte_end":10540066,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540071,"byte_end":10540074,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540079,"byte_end":10540097,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540102,"byte_end":10540141,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540146,"byte_end":10540209,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540214,"byte_end":10540217,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540222,"byte_end":10540280,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540285,"byte_end":10540288,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540293,"byte_end":10540307,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540312,"byte_end":10540317,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540322,"byte_end":10540329,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3509},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10542621,"byte_end":10542629,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3511}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10542419,"byte_end":10542495,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10542496,"byte_end":10542543,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10542544,"byte_end":10542592,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10543044,"byte_end":10543055,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10542807,"byte_end":10542880,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10542885,"byte_end":10542900,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10542905,"byte_end":10542908,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10542913,"byte_end":10542982,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10542987,"byte_end":10543032,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3515},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544614,"byte_end":10544622,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544206,"byte_end":10544261,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544262,"byte_end":10544265,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544266,"byte_end":10544354,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544355,"byte_end":10544432,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544433,"byte_end":10544436,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544437,"byte_end":10544465,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544466,"byte_end":10544499,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544500,"byte_end":10544551,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544552,"byte_end":10544585,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3522},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545316,"byte_end":10545325,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544644,"byte_end":10544700,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544701,"byte_end":10544704,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544705,"byte_end":10544791,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544792,"byte_end":10544844,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544845,"byte_end":10544848,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544849,"byte_end":10544935,"line_start":39,"line_end":39,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10544936,"byte_end":10545021,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545022,"byte_end":10545025,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545026,"byte_end":10545054,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545055,"byte_end":10545088,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545089,"byte_end":10545136,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545137,"byte_end":10545199,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545200,"byte_end":10545253,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545254,"byte_end":10545287,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546382,"byte_end":10546391,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545499,"byte_end":10545573,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545578,"byte_end":10545651,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545656,"byte_end":10545670,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545675,"byte_end":10545678,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545683,"byte_end":10545756,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545761,"byte_end":10545764,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545769,"byte_end":10545783,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545788,"byte_end":10545791,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545796,"byte_end":10545809,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545814,"byte_end":10545832,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545837,"byte_end":10545867,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545872,"byte_end":10545875,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545880,"byte_end":10545913,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545918,"byte_end":10545921,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545926,"byte_end":10545944,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545949,"byte_end":10545988,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545993,"byte_end":10546062,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546067,"byte_end":10546115,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546120,"byte_end":10546150,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546155,"byte_end":10546158,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546163,"byte_end":10546185,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546190,"byte_end":10546235,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546240,"byte_end":10546258,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546263,"byte_end":10546266,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546271,"byte_end":10546285,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546290,"byte_end":10546295,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546300,"byte_end":10546307,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546312,"byte_end":10546315,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546320,"byte_end":10546370,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547808,"byte_end":10547812,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546516,"byte_end":10546586,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546591,"byte_end":10546660,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546665,"byte_end":10546704,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546709,"byte_end":10546712,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546717,"byte_end":10546785,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546790,"byte_end":10546793,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546798,"byte_end":10546838,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546843,"byte_end":10546846,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546851,"byte_end":10546865,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546870,"byte_end":10546873,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546878,"byte_end":10546891,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546896,"byte_end":10546926,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546931,"byte_end":10546957,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546962,"byte_end":10546988,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10546993,"byte_end":10546996,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547001,"byte_end":10547019,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547024,"byte_end":10547075,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547080,"byte_end":10547108,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547113,"byte_end":10547182,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547187,"byte_end":10547235,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547240,"byte_end":10547243,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547248,"byte_end":10547277,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547282,"byte_end":10547311,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547316,"byte_end":10547319,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547324,"byte_end":10547351,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547356,"byte_end":10547403,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547408,"byte_end":10547411,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547416,"byte_end":10547440,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547445,"byte_end":10547504,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547509,"byte_end":10547548,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547553,"byte_end":10547556,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547561,"byte_end":10547575,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547580,"byte_end":10547585,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547590,"byte_end":10547597,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547602,"byte_end":10547605,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547610,"byte_end":10547675,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547680,"byte_end":10547683,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547688,"byte_end":10547734,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547739,"byte_end":10547790,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3529},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550414,"byte_end":10550427,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3530}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10549979,"byte_end":10550045,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550046,"byte_end":10550049,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550050,"byte_end":10550137,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550138,"byte_end":10550222,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550223,"byte_end":10550226,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550227,"byte_end":10550255,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550256,"byte_end":10550299,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550300,"byte_end":10550351,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550352,"byte_end":10550385,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10551233,"byte_end":10551247,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3534},{"krate":0,"index":3535}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550460,"byte_end":10550527,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550528,"byte_end":10550531,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550532,"byte_end":10550618,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550619,"byte_end":10550671,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550672,"byte_end":10550675,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Dropping the write half will shutdown the write half of the TCP stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550676,"byte_end":10550751,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550752,"byte_end":10550755,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550756,"byte_end":10550842,"line_start":45,"line_end":45,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550843,"byte_end":10550928,"line_start":46,"line_end":46,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550929,"byte_end":10550932,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550933,"byte_end":10550961,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10550962,"byte_end":10551005,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10551006,"byte_end":10551053,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10551054,"byte_end":10551116,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10551117,"byte_end":10551170,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10551171,"byte_end":10551204,"line_start":53,"line_end":53,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3538},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552191,"byte_end":10552203,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552064,"byte_end":10552141,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ not be reunited.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552142,"byte_end":10552162,"line_start":87,"line_end":87,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3540},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552204,"byte_end":10552221,"line_start":89,"line_end":89,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3541},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552223,"byte_end":10552241,"line_start":89,"line_end":89,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552787,"byte_end":10552794,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552524,"byte_end":10552593,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552598,"byte_end":10552662,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552667,"byte_end":10552719,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552724,"byte_end":10552727,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552732,"byte_end":10552775,"line_start":107,"line_end":107,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553785,"byte_end":10553794,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552901,"byte_end":10552975,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552980,"byte_end":10553053,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553058,"byte_end":10553072,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553077,"byte_end":10553080,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553085,"byte_end":10553158,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553163,"byte_end":10553166,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553171,"byte_end":10553185,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553190,"byte_end":10553193,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553198,"byte_end":10553211,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553216,"byte_end":10553234,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553239,"byte_end":10553269,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553274,"byte_end":10553277,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553282,"byte_end":10553315,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553320,"byte_end":10553323,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553328,"byte_end":10553346,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553351,"byte_end":10553390,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553395,"byte_end":10553460,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553465,"byte_end":10553518,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553523,"byte_end":10553553,"line_start":130,"line_end":130,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553558,"byte_end":10553561,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553566,"byte_end":10553588,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553593,"byte_end":10553638,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553643,"byte_end":10553661,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553666,"byte_end":10553669,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553674,"byte_end":10553688,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553693,"byte_end":10553698,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553703,"byte_end":10553710,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553715,"byte_end":10553718,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553723,"byte_end":10553773,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3379},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555216,"byte_end":10555220,"line_start":184,"line_end":184,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553923,"byte_end":10553993,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10553998,"byte_end":10554067,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554072,"byte_end":10554111,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554116,"byte_end":10554119,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554124,"byte_end":10554192,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554197,"byte_end":10554200,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554205,"byte_end":10554245,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554250,"byte_end":10554253,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554258,"byte_end":10554272,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554277,"byte_end":10554280,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554285,"byte_end":10554298,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554303,"byte_end":10554333,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554338,"byte_end":10554364,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554369,"byte_end":10554395,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554400,"byte_end":10554403,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554408,"byte_end":10554426,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554431,"byte_end":10554482,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554487,"byte_end":10554515,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554520,"byte_end":10554585,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554590,"byte_end":10554643,"line_start":164,"line_end":164,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554648,"byte_end":10554651,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554656,"byte_end":10554685,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554690,"byte_end":10554719,"line_start":167,"line_end":167,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554724,"byte_end":10554727,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554732,"byte_end":10554759,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554764,"byte_end":10554811,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554816,"byte_end":10554819,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554824,"byte_end":10554848,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554853,"byte_end":10554912,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554917,"byte_end":10554956,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554961,"byte_end":10554964,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554969,"byte_end":10554983,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554988,"byte_end":10554993,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10554998,"byte_end":10555005,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555010,"byte_end":10555013,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555018,"byte_end":10555083,"line_start":180,"line_end":180,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555088,"byte_end":10555091,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555096,"byte_end":10555142,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555147,"byte_end":10555198,"line_start":183,"line_end":183,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3387},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555953,"byte_end":10555960,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555690,"byte_end":10555759,"line_start":204,"line_end":204,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555764,"byte_end":10555828,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555833,"byte_end":10555885,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555890,"byte_end":10555893,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555898,"byte_end":10555941,"line_start":208,"line_end":208,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10556134,"byte_end":10556140,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drop the write half, but don't issue a TCP shutdown.\n","sig":null,"attributes":[{"value":"/ Drop the write half, but don't issue a TCP shutdown.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10556066,"byte_end":10556122,"line_start":213,"line_end":213,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10559430,"byte_end":10559439,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3545}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561520,"byte_end":10561527,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10559518,"byte_end":10559562,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10559567,"byte_end":10559570,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10559575,"byte_end":10559649,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10559654,"byte_end":10559723,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10559728,"byte_end":10559804,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10559809,"byte_end":10559874,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10559879,"byte_end":10559882,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10559887,"byte_end":10559963,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10559968,"byte_end":10560037,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560042,"byte_end":10560118,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560123,"byte_end":10560182,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560187,"byte_end":10560190,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560195,"byte_end":10560249,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560254,"byte_end":10560257,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560262,"byte_end":10560276,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560281,"byte_end":10560284,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560289,"byte_end":10560302,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560307,"byte_end":10560337,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560342,"byte_end":10560368,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560373,"byte_end":10560399,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560404,"byte_end":10560407,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560412,"byte_end":10560430,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560435,"byte_end":10560486,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560491,"byte_end":10560519,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560524,"byte_end":10560593,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560598,"byte_end":10560601,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560606,"byte_end":10560633,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560638,"byte_end":10560687,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560692,"byte_end":10560695,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560700,"byte_end":10560714,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560719,"byte_end":10560724,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560729,"byte_end":10560736,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560741,"byte_end":10560744,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560749,"byte_end":10560779,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560784,"byte_end":10560787,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560792,"byte_end":10560805,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560810,"byte_end":10560840,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560845,"byte_end":10560871,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560876,"byte_end":10560902,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560907,"byte_end":10560934,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560939,"byte_end":10560942,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560947,"byte_end":10560965,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10560970,"byte_end":10561021,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561026,"byte_end":10561054,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561059,"byte_end":10561147,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561152,"byte_end":10561155,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561160,"byte_end":10561187,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561192,"byte_end":10561241,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561246,"byte_end":10561249,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561254,"byte_end":10561268,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561273,"byte_end":10561278,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561283,"byte_end":10561290,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561295,"byte_end":10561298,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561303,"byte_end":10561374,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561379,"byte_end":10561382,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561387,"byte_end":10561444,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10561449,"byte_end":10561502,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563960,"byte_end":10563968,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10562993,"byte_end":10563050,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563055,"byte_end":10563058,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563063,"byte_end":10563138,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563143,"byte_end":10563216,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563221,"byte_end":10563224,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563229,"byte_end":10563243,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563248,"byte_end":10563251,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563256,"byte_end":10563274,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563279,"byte_end":10563305,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563310,"byte_end":10563340,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563345,"byte_end":10563348,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563353,"byte_end":10563371,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563376,"byte_end":10563427,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563432,"byte_end":10563506,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563511,"byte_end":10563565,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563570,"byte_end":10563584,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563589,"byte_end":10563594,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563599,"byte_end":10563606,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563611,"byte_end":10563614,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563619,"byte_end":10563631,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563636,"byte_end":10563639,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563644,"byte_end":10563704,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563709,"byte_end":10563712,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563717,"byte_end":10563787,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563792,"byte_end":10563865,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10563870,"byte_end":10563948,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10564365,"byte_end":10564376,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"pub async fn connect_std<'_>(net::TcpStream, &'_ SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565524,"byte_end":10565534,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565125,"byte_end":10565184,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565189,"byte_end":10565192,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565197,"byte_end":10565211,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565216,"byte_end":10565219,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565224,"byte_end":10565237,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565242,"byte_end":10565272,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565277,"byte_end":10565280,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565285,"byte_end":10565349,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565354,"byte_end":10565415,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565420,"byte_end":10565423,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565428,"byte_end":10565471,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565476,"byte_end":10565488,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565493,"byte_end":10565500,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565505,"byte_end":10565512,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566023,"byte_end":10566032,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565620,"byte_end":10565684,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565689,"byte_end":10565692,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565697,"byte_end":10565711,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565716,"byte_end":10565719,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565724,"byte_end":10565737,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565742,"byte_end":10565772,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565777,"byte_end":10565780,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565785,"byte_end":10565849,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565854,"byte_end":10565915,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565920,"byte_end":10565923,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565928,"byte_end":10565970,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565975,"byte_end":10565987,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10565992,"byte_end":10565999,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566004,"byte_end":10566011,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3456},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10567190,"byte_end":10567199,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566117,"byte_end":10566192,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566197,"byte_end":10566270,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566275,"byte_end":10566289,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566294,"byte_end":10566297,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566302,"byte_end":10566320,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566325,"byte_end":10566328,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566333,"byte_end":10566358,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566363,"byte_end":10566366,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566371,"byte_end":10566422,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566427,"byte_end":10566510,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566515,"byte_end":10566570,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566575,"byte_end":10566578,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566583,"byte_end":10566595,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566600,"byte_end":10566603,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566608,"byte_end":10566683,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566688,"byte_end":10566691,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566696,"byte_end":10566710,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566715,"byte_end":10566718,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566723,"byte_end":10566736,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566741,"byte_end":10566759,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566764,"byte_end":10566794,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566799,"byte_end":10566802,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566807,"byte_end":10566840,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566845,"byte_end":10566848,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566853,"byte_end":10566871,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566876,"byte_end":10566915,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566920,"byte_end":10566989,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10566994,"byte_end":10567024,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10567029,"byte_end":10567032,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10567037,"byte_end":10567059,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10567064,"byte_end":10567106,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10567111,"byte_end":10567129,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10567134,"byte_end":10567137,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10567142,"byte_end":10567156,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10567161,"byte_end":10567166,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10567171,"byte_end":10567178,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3458},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569111,"byte_end":10569115,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10567860,"byte_end":10567930,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10567935,"byte_end":10568004,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568009,"byte_end":10568048,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568053,"byte_end":10568056,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568061,"byte_end":10568135,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568140,"byte_end":10568200,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568205,"byte_end":10568208,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568213,"byte_end":10568227,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568232,"byte_end":10568235,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568240,"byte_end":10568253,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568258,"byte_end":10568288,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568293,"byte_end":10568319,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568324,"byte_end":10568350,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568355,"byte_end":10568358,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568363,"byte_end":10568381,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568386,"byte_end":10568437,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568442,"byte_end":10568470,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568475,"byte_end":10568544,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568549,"byte_end":10568552,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568557,"byte_end":10568586,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568591,"byte_end":10568620,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568625,"byte_end":10568628,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568633,"byte_end":10568660,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568665,"byte_end":10568709,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568714,"byte_end":10568717,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568722,"byte_end":10568746,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568751,"byte_end":10568807,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568812,"byte_end":10568851,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568856,"byte_end":10568859,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568864,"byte_end":10568878,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568883,"byte_end":10568888,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568893,"byte_end":10568900,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568905,"byte_end":10568908,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568913,"byte_end":10568978,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568983,"byte_end":10568986,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10568991,"byte_end":10569037,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569042,"byte_end":10569093,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569984,"byte_end":10569992,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569229,"byte_end":10569295,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569300,"byte_end":10569303,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569308,"byte_end":10569380,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569385,"byte_end":10569454,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569459,"byte_end":10569492,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569497,"byte_end":10569500,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569505,"byte_end":10569519,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569524,"byte_end":10569527,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569532,"byte_end":10569545,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569550,"byte_end":10569580,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569585,"byte_end":10569611,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569616,"byte_end":10569643,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569648,"byte_end":10569651,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569656,"byte_end":10569674,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569679,"byte_end":10569730,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569735,"byte_end":10569763,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569768,"byte_end":10569833,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569838,"byte_end":10569841,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569846,"byte_end":10569876,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569881,"byte_end":10569923,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569928,"byte_end":10569931,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569936,"byte_end":10569950,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569955,"byte_end":10569960,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10569965,"byte_end":10569972,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570618,"byte_end":10570625,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570086,"byte_end":10570148,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570153,"byte_end":10570156,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570161,"byte_end":10570225,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570230,"byte_end":10570233,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570238,"byte_end":10570281,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570286,"byte_end":10570289,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570294,"byte_end":10570308,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570313,"byte_end":10570316,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570321,"byte_end":10570334,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570339,"byte_end":10570369,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570374,"byte_end":10570377,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570382,"byte_end":10570446,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570451,"byte_end":10570512,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570517,"byte_end":10570520,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570525,"byte_end":10570565,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570570,"byte_end":10570582,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570587,"byte_end":10570594,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570599,"byte_end":10570606,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571432,"byte_end":10571443,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570702,"byte_end":10570764,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570769,"byte_end":10570772,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570777,"byte_end":10570846,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570851,"byte_end":10570924,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10570929,"byte_end":10571002,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571007,"byte_end":10571082,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571087,"byte_end":10571105,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571110,"byte_end":10571113,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571118,"byte_end":10571132,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571137,"byte_end":10571140,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571145,"byte_end":10571158,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571163,"byte_end":10571193,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571198,"byte_end":10571201,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571206,"byte_end":10571270,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571275,"byte_end":10571336,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571341,"byte_end":10571344,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571349,"byte_end":10571379,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571384,"byte_end":10571396,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571401,"byte_end":10571408,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571413,"byte_end":10571420,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572110,"byte_end":10572126,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571544,"byte_end":10571604,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571609,"byte_end":10571612,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571617,"byte_end":10571690,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571695,"byte_end":10571698,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571703,"byte_end":10571764,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571769,"byte_end":10571772,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571777,"byte_end":10571791,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571796,"byte_end":10571799,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571804,"byte_end":10571817,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571822,"byte_end":10571852,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571857,"byte_end":10571860,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571865,"byte_end":10571929,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10571934,"byte_end":10571995,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572000,"byte_end":10572003,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572008,"byte_end":10572057,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572062,"byte_end":10572074,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572079,"byte_end":10572086,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572091,"byte_end":10572098,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572718,"byte_end":10572738,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572213,"byte_end":10572273,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572278,"byte_end":10572281,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572286,"byte_end":10572358,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572363,"byte_end":10572383,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572388,"byte_end":10572391,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572396,"byte_end":10572410,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572415,"byte_end":10572418,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572423,"byte_end":10572436,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572441,"byte_end":10572471,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572476,"byte_end":10572479,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572484,"byte_end":10572548,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572553,"byte_end":10572614,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572619,"byte_end":10572622,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572627,"byte_end":10572665,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572670,"byte_end":10572682,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572687,"byte_end":10572694,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572699,"byte_end":10572706,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573409,"byte_end":10573425,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572843,"byte_end":10572903,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572908,"byte_end":10572911,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572916,"byte_end":10572989,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10572994,"byte_end":10572997,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573002,"byte_end":10573063,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573068,"byte_end":10573071,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573076,"byte_end":10573090,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573095,"byte_end":10573098,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573103,"byte_end":10573116,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573121,"byte_end":10573151,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573156,"byte_end":10573159,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573164,"byte_end":10573228,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573233,"byte_end":10573294,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573299,"byte_end":10573302,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573307,"byte_end":10573356,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573361,"byte_end":10573373,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573378,"byte_end":10573385,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573390,"byte_end":10573397,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574014,"byte_end":10574034,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573512,"byte_end":10573572,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573577,"byte_end":10573580,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573585,"byte_end":10573659,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573664,"byte_end":10573679,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573684,"byte_end":10573687,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573692,"byte_end":10573706,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573711,"byte_end":10573714,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573719,"byte_end":10573732,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573737,"byte_end":10573767,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573772,"byte_end":10573775,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573780,"byte_end":10573844,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573849,"byte_end":10573910,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573915,"byte_end":10573918,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573923,"byte_end":10573961,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573966,"byte_end":10573978,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573983,"byte_end":10573990,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10573995,"byte_end":10574002,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574736,"byte_end":10574745,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574139,"byte_end":10574215,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574220,"byte_end":10574258,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574263,"byte_end":10574266,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574271,"byte_end":10574337,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574342,"byte_end":10574345,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574350,"byte_end":10574397,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574402,"byte_end":10574405,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574410,"byte_end":10574424,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574429,"byte_end":10574432,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574437,"byte_end":10574450,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574455,"byte_end":10574485,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574490,"byte_end":10574493,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574498,"byte_end":10574562,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574567,"byte_end":10574628,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574633,"byte_end":10574636,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574641,"byte_end":10574683,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574688,"byte_end":10574700,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574705,"byte_end":10574712,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574717,"byte_end":10574724,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575776,"byte_end":10575789,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"pub fn set_keepalive(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574836,"byte_end":10574910,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574915,"byte_end":10574918,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574923,"byte_end":10574990,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10574995,"byte_end":10575069,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575074,"byte_end":10575136,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575141,"byte_end":10575144,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575149,"byte_end":10575223,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575228,"byte_end":10575303,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575308,"byte_end":10575332,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575337,"byte_end":10575340,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575345,"byte_end":10575408,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575413,"byte_end":10575447,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575452,"byte_end":10575455,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575460,"byte_end":10575474,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575479,"byte_end":10575482,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575487,"byte_end":10575500,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575505,"byte_end":10575535,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575540,"byte_end":10575543,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575548,"byte_end":10575612,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575617,"byte_end":10575678,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575683,"byte_end":10575686,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575691,"byte_end":10575723,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575728,"byte_end":10575740,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575745,"byte_end":10575752,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575757,"byte_end":10575764,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576420,"byte_end":10576423,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575908,"byte_end":10575966,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575971,"byte_end":10575974,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10575979,"byte_end":10576039,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576044,"byte_end":10576047,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576052,"byte_end":10576087,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576092,"byte_end":10576095,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576100,"byte_end":10576114,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576119,"byte_end":10576122,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576127,"byte_end":10576140,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576145,"byte_end":10576175,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576180,"byte_end":10576183,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576188,"byte_end":10576252,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576257,"byte_end":10576318,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576323,"byte_end":10576326,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576331,"byte_end":10576367,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576372,"byte_end":10576384,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576389,"byte_end":10576396,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576401,"byte_end":10576408,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576990,"byte_end":10576997,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576495,"byte_end":10576553,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576558,"byte_end":10576561,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576566,"byte_end":10576642,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576647,"byte_end":10576668,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576673,"byte_end":10576676,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576681,"byte_end":10576695,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576700,"byte_end":10576703,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576708,"byte_end":10576721,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576726,"byte_end":10576756,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576761,"byte_end":10576764,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576769,"byte_end":10576833,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576838,"byte_end":10576899,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576904,"byte_end":10576907,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576912,"byte_end":10576937,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576942,"byte_end":10576954,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576959,"byte_end":10576966,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10576971,"byte_end":10576978,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577639,"byte_end":10577645,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577085,"byte_end":10577157,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577162,"byte_end":10577173,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577178,"byte_end":10577181,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577186,"byte_end":10577249,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577254,"byte_end":10577257,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577262,"byte_end":10577303,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577308,"byte_end":10577311,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577316,"byte_end":10577330,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577335,"byte_end":10577338,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577343,"byte_end":10577356,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577361,"byte_end":10577391,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577396,"byte_end":10577399,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577404,"byte_end":10577468,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577473,"byte_end":10577534,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577539,"byte_end":10577542,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577547,"byte_end":10577586,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577591,"byte_end":10577603,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577608,"byte_end":10577615,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577620,"byte_end":10577627,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578587,"byte_end":10578597,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577733,"byte_end":10577803,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577808,"byte_end":10577819,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577824,"byte_end":10577827,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577832,"byte_end":10577907,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577912,"byte_end":10577975,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10577980,"byte_end":10578051,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578056,"byte_end":10578073,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578078,"byte_end":10578081,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578086,"byte_end":10578159,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578164,"byte_end":10578240,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578245,"byte_end":10578261,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578266,"byte_end":10578269,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578274,"byte_end":10578288,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578293,"byte_end":10578296,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578301,"byte_end":10578314,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578319,"byte_end":10578349,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578354,"byte_end":10578357,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578362,"byte_end":10578426,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578431,"byte_end":10578492,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578497,"byte_end":10578500,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578505,"byte_end":10578534,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578539,"byte_end":10578551,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578556,"byte_end":10578563,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578568,"byte_end":10578575,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10579037,"byte_end":10579042,"line_start":669,"line_end":669,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split(&mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578701,"byte_end":10578778,"line_start":662,"line_end":662,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578783,"byte_end":10578829,"line_start":663,"line_end":663,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578834,"byte_end":10578837,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578842,"byte_end":10578921,"line_start":665,"line_end":665,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578926,"byte_end":10578969,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578974,"byte_end":10578977,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10578982,"byte_end":10579025,"line_start":668,"line_end":668,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10579625,"byte_end":10579635,"line_start":683,"line_end":683,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10579120,"byte_end":10579197,"line_start":673,"line_end":673,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10579202,"byte_end":10579248,"line_start":674,"line_end":674,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10579253,"byte_end":10579256,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10579261,"byte_end":10579339,"line_start":676,"line_end":676,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10579344,"byte_end":10579392,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10579397,"byte_end":10579400,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ **Note::** Dropping the write half will shutdown the write half of the TCP","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10579405,"byte_end":10579483,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling `shutdown(Write)` on the `TcpStream`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10579488,"byte_end":10579567,"line_start":680,"line_end":680,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10579572,"byte_end":10579575,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10579580,"byte_end":10579613,"line_start":682,"line_end":682,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","parent":null,"children":[{"krate":0,"index":3547},{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3664},{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":13331},{"krate":0,"index":3667}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"/ UDP utility types.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","byte_start":10586888,"byte_end":10586910,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3669},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10587366,"byte_end":10587375,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3670}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3567},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10587573,"byte_end":10587577,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10587454,"byte_end":10587526,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10587531,"byte_end":10587555,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3574},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10589280,"byte_end":10589288,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10588412,"byte_end":10588484,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10588489,"byte_end":10588492,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10588497,"byte_end":10588570,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10588575,"byte_end":10588650,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10588655,"byte_end":10588702,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10588707,"byte_end":10588710,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10588715,"byte_end":10588788,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10588793,"byte_end":10588868,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10588873,"byte_end":10588926,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10588931,"byte_end":10588934,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10588939,"byte_end":10588951,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10588956,"byte_end":10588959,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10588964,"byte_end":10589024,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10589029,"byte_end":10589032,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10589037,"byte_end":10589107,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10589112,"byte_end":10589185,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10589190,"byte_end":10589268,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3575},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10589672,"byte_end":10589677,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"pub fn split(Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10589480,"byte_end":10589557,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10589562,"byte_end":10589635,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10589640,"byte_end":10589660,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3576},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10589812,"byte_end":10589822,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10589741,"byte_end":10589800,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3577},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10590094,"byte_end":10590101,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10589908,"byte_end":10589982,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10589987,"byte_end":10590060,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10590065,"byte_end":10590076,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10591038,"byte_end":10591042,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10590635,"byte_end":10590733,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10590738,"byte_end":10590809,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10590814,"byte_end":10590817,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10590822,"byte_end":10590905,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10590910,"byte_end":10590970,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10590975,"byte_end":10590978,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10590983,"byte_end":10591020,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10591769,"byte_end":10591778,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3587},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592796,"byte_end":10592800,"line_start":154,"line_end":154,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592156,"byte_end":10592235,"line_start":142,"line_end":142,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592240,"byte_end":10592324,"line_start":143,"line_end":143,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592329,"byte_end":10592361,"line_start":144,"line_end":144,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592366,"byte_end":10592369,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592374,"byte_end":10592455,"line_start":146,"line_end":146,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592460,"byte_end":10592543,"line_start":147,"line_end":147,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592548,"byte_end":10592582,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592587,"byte_end":10592590,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592595,"byte_end":10592678,"line_start":150,"line_end":150,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592683,"byte_end":10592728,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592733,"byte_end":10592736,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592741,"byte_end":10592778,"line_start":153,"line_end":153,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3591},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10592940,"byte_end":10592949,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3592},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10593668,"byte_end":10593675,"line_start":176,"line_end":176,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ mut Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10593377,"byte_end":10593449,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10593454,"byte_end":10593525,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10593530,"byte_end":10593533,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10593538,"byte_end":10593614,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10593619,"byte_end":10593650,"line_start":175,"line_end":175,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10594147,"byte_end":10594159,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], &SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3598},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10594998,"byte_end":10595007,"line_start":213,"line_end":213,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10594608,"byte_end":10594687,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10594692,"byte_end":10594759,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10594764,"byte_end":10594767,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10594772,"byte_end":10594850,"line_start":210,"line_end":210,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10594855,"byte_end":10594933,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10594938,"byte_end":10594980,"line_start":212,"line_end":212,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3602},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10595166,"byte_end":10595180,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut [u8])\n-> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10595882,"byte_end":10595891,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10595665,"byte_end":10595729,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10595734,"byte_end":10595737,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10595742,"byte_end":10595808,"line_start":236,"line_end":236,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10595813,"byte_end":10595816,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10595821,"byte_end":10595870,"line_start":238,"line_end":238,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3604},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596147,"byte_end":10596160,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10595970,"byte_end":10596034,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596039,"byte_end":10596042,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596047,"byte_end":10596118,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596123,"byte_end":10596135,"line_start":246,"line_end":246,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3605},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596499,"byte_end":10596516,"line_start":256,"line_end":256,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596253,"byte_end":10596322,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596327,"byte_end":10596330,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596335,"byte_end":10596409,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596414,"byte_end":10596417,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596422,"byte_end":10596487,"line_start":255,"line_end":255,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596856,"byte_end":10596877,"line_start":267,"line_end":267,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596603,"byte_end":10596672,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596677,"byte_end":10596680,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596685,"byte_end":10596759,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596764,"byte_end":10596767,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596772,"byte_end":10596782,"line_start":264,"line_end":264,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596787,"byte_end":10596790,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596795,"byte_end":10596844,"line_start":266,"line_end":266,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597220,"byte_end":10597236,"line_start":276,"line_end":276,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10596978,"byte_end":10597046,"line_start":271,"line_end":271,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597051,"byte_end":10597054,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597059,"byte_end":10597132,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597137,"byte_end":10597140,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597145,"byte_end":10597208,"line_start":275,"line_end":275,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3608},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597715,"byte_end":10597735,"line_start":289,"line_end":289,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597321,"byte_end":10597389,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597394,"byte_end":10597397,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597402,"byte_end":10597472,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597477,"byte_end":10597551,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597556,"byte_end":10597618,"line_start":284,"line_end":284,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597623,"byte_end":10597626,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597631,"byte_end":10597641,"line_start":286,"line_end":286,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597646,"byte_end":10597649,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597654,"byte_end":10597703,"line_start":288,"line_end":288,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598084,"byte_end":10598101,"line_start":298,"line_end":298,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597836,"byte_end":10597907,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597912,"byte_end":10597915,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597920,"byte_end":10597994,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10597999,"byte_end":10598002,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598007,"byte_end":10598072,"line_start":297,"line_end":297,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598445,"byte_end":10598466,"line_start":309,"line_end":309,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598188,"byte_end":10598259,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598264,"byte_end":10598267,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598272,"byte_end":10598348,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598353,"byte_end":10598356,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598361,"byte_end":10598371,"line_start":306,"line_end":306,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598376,"byte_end":10598379,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598384,"byte_end":10598433,"line_start":308,"line_end":308,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598760,"byte_end":10598763,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598567,"byte_end":10598625,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598630,"byte_end":10598633,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598638,"byte_end":10598698,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598703,"byte_end":10598706,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598711,"byte_end":10598748,"line_start":317,"line_end":317,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599020,"byte_end":10599027,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598835,"byte_end":10598893,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598898,"byte_end":10598901,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598906,"byte_end":10598982,"line_start":324,"line_end":324,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10598987,"byte_end":10599008,"line_start":325,"line_end":325,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3613},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599545,"byte_end":10599562,"line_start":337,"line_end":337,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599115,"byte_end":10599173,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599178,"byte_end":10599181,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599186,"byte_end":10599260,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599265,"byte_end":10599338,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599343,"byte_end":10599415,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599420,"byte_end":10599490,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599495,"byte_end":10599533,"line_start":336,"line_end":336,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10600027,"byte_end":10600044,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599711,"byte_end":10599771,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599776,"byte_end":10599779,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599784,"byte_end":10599858,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599863,"byte_end":10599936,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10599941,"byte_end":10600015,"line_start":345,"line_end":345,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10600411,"byte_end":10600429,"line_start":355,"line_end":355,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10600187,"byte_end":10600246,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10600251,"byte_end":10600254,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10600259,"byte_end":10600329,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10600334,"byte_end":10600337,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10600342,"byte_end":10600399,"line_start":354,"line_end":354,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10600805,"byte_end":10600823,"line_start":364,"line_end":364,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10600579,"byte_end":10600640,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10600645,"byte_end":10600648,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10600653,"byte_end":10600723,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10600728,"byte_end":10600731,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10600736,"byte_end":10600793,"line_start":363,"line_end":363,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3671},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10603458,"byte_end":10603466,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10603270,"byte_end":10603329,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10603330,"byte_end":10603333,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](method@Self::send_to) or [`send`](method@Self::send) to send","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10603334,"byte_end":10603414,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ datagrams.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10603415,"byte_end":10603429,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3676},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10603680,"byte_end":10603688,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10603485,"byte_end":10603544,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10603545,"byte_end":10603548,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](method@Self::recv_from) or [`recv`](method@Self::recv) to receive","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10603549,"byte_end":10603636,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ datagrams.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10603637,"byte_end":10603651,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3681},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10604030,"byte_end":10604042,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10603901,"byte_end":10603978,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ not be `reunite`d.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10603979,"byte_end":10604001,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3683},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10604043,"byte_end":10604055,"line_start":48,"line_end":48,"column_start":25,"column_end":37},"name":"0","qualname":"::net::udp::split::ReuniteError::0","value":"net::udp::split::SendHalf","parent":{"krate":0,"index":3681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3684},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10604057,"byte_end":10604069,"line_start":48,"line_end":48,"column_start":39,"column_end":51},"name":"1","qualname":"::net::udp::split::ReuniteError::1","value":"net::udp::split::RecvHalf","parent":{"krate":0,"index":3681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605079,"byte_end":10605086,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"pub fn reunite(Self, SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10604864,"byte_end":10604935,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10604940,"byte_end":10605006,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605011,"byte_end":10605067,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605577,"byte_end":10605586,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605187,"byte_end":10605266,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605271,"byte_end":10605338,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605343,"byte_end":10605346,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605351,"byte_end":10605429,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605434,"byte_end":10605512,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605517,"byte_end":10605559,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606366,"byte_end":10606370,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605721,"byte_end":10605800,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605805,"byte_end":10605889,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605894,"byte_end":10605926,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605931,"byte_end":10605934,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10605939,"byte_end":10606020,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606025,"byte_end":10606108,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606113,"byte_end":10606147,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606152,"byte_end":10606155,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606160,"byte_end":10606243,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606248,"byte_end":10606293,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606298,"byte_end":10606301,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606306,"byte_end":10606348,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606719,"byte_end":10606726,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"pub fn reunite(Self, RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606504,"byte_end":10606575,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606580,"byte_end":10606646,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606651,"byte_end":10606707,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607118,"byte_end":10607125,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<'_, '_, '_>(&'_ mut Self, &'_ [u8], &'_ SocketAddr)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606827,"byte_end":10606899,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606904,"byte_end":10606975,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606980,"byte_end":10606983,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606988,"byte_end":10607064,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607069,"byte_end":10607100,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607677,"byte_end":10607681,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607269,"byte_end":10607367,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607372,"byte_end":10607443,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607448,"byte_end":10607451,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607456,"byte_end":10607539,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607544,"byte_end":10607604,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607609,"byte_end":10607612,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607617,"byte_end":10607659,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":93380,"byte_end":93386,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":93317,"byte_end":93370,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":93439,"byte_end":93444,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":93401,"byte_end":93429,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3791}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105035,"byte_end":105053,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105055,"byte_end":105102,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105103,"byte_end":105106,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105107,"byte_end":105183,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105184,"byte_end":105261,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105262,"byte_end":105314,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105315,"byte_end":105318,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105319,"byte_end":105326,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #![allow(warnings)]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105327,"byte_end":105352,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105353,"byte_end":105379,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105380,"byte_end":105387,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105388,"byte_end":105391,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105392,"byte_end":105466,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":3792},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","parent":null,"children":[{"krate":0,"index":3793},{"krate":0,"index":3856},{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3870},{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3979},{"krate":0,"index":3982},{"krate":0,"index":3880},{"krate":0,"index":3885},{"krate":0,"index":3924},{"krate":0,"index":3984},{"krate":0,"index":3988},{"krate":0,"index":3926},{"krate":0,"index":3929},{"krate":0,"index":3932},{"krate":0,"index":3991},{"krate":0,"index":3996},{"krate":0,"index":3938},{"krate":0,"index":3952},{"krate":0,"index":3998},{"krate":0,"index":4000},{"krate":0,"index":4002},{"krate":0,"index":4004},{"krate":0,"index":4006},{"krate":0,"index":4008},{"krate":0,"index":3955},{"krate":0,"index":3959},{"krate":0,"index":3962},{"krate":0,"index":3965}],"decl_id":null,"docs":" An implementation of asynchronous process management for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"process\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":20581,"byte_end":20608,"line_start":199,"line_end":199,"column_start":13,"column_end":40}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":20684,"byte_end":20701,"line_start":201,"line_end":201,"column_start":13,"column_end":30}},{"value":"/ An implementation of asynchronous process management for Tokio.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10609413,"byte_end":10609480,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10609481,"byte_end":10609484,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a [`Command`] struct that imitates the interface of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10609485,"byte_end":10609565,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ [`std::process::Command`] type in the standard library, but provides asynchronous versions of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10609566,"byte_end":10609663,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ functions that create processes. These functions (`spawn`, `status`, `output` and their","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10609664,"byte_end":10609755,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/ variants) return \"future aware\" types that interoperate with Tokio. The asynchronous process","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10609756,"byte_end":10609852,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ support is provided through signal handling on Unix and system APIs on Windows.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10609853,"byte_end":10609936,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10609937,"byte_end":10609940,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10609941,"byte_end":10609993,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10609994,"byte_end":10609997,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10609998,"byte_end":10610012,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610013,"byte_end":10610016,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Here's an example program which will spawn `echo hello world` and then wait","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610017,"byte_end":10610096,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ for it complete.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610097,"byte_end":10610117,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610118,"byte_end":10610121,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610122,"byte_end":10610135,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610136,"byte_end":10610168,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610169,"byte_end":10610172,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610173,"byte_end":10610191,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610192,"byte_end":10610255,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/     // The usage is the same as with the standard library's `Command` type, however the value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610256,"byte_end":10610353,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/     // returned from `spawn` is a `Result` containing a `Future`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610354,"byte_end":10610423,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/     let child = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610424,"byte_end":10610490,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/                         .spawn();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610491,"byte_end":10610528,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610529,"byte_end":10610532,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     // Make sure our child succeeded in spawning and process the result","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610533,"byte_end":10610608,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/     let future = child.expect(\"failed to spawn\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610609,"byte_end":10610662,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610663,"byte_end":10610666,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     // Await until the future (and the command) completes","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610667,"byte_end":10610728,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/     let status = future.await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610729,"byte_end":10610764,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/     println!(\"the command exited with: {}\", status);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610765,"byte_end":10610821,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610822,"byte_end":10610836,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610837,"byte_end":10610842,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610843,"byte_end":10610850,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610851,"byte_end":10610854,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Next, let's take a look at an example where we not only spawn `echo hello","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610855,"byte_end":10610932,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ world` but we also capture its output.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610933,"byte_end":10610975,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610976,"byte_end":10610979,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610980,"byte_end":10610993,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10610994,"byte_end":10611026,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611027,"byte_end":10611030,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611031,"byte_end":10611049,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611050,"byte_end":10611113,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"/     // Like above, but use `output` which returns a future instead of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611114,"byte_end":10611187,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/     // immediately returning the `Child`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611188,"byte_end":10611233,"line_start":45,"line_end":45,"column_start":1,"column_end":46}},{"value":"/     let output = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611234,"byte_end":10611301,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/                         .output();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611302,"byte_end":10611340,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611341,"byte_end":10611344,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     let output = output.await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611345,"byte_end":10611380,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611381,"byte_end":10611384,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert!(output.status.success());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611385,"byte_end":10611426,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     assert_eq!(output.stdout, b\"hello world\\n\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611427,"byte_end":10611479,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611480,"byte_end":10611494,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611495,"byte_end":10611500,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611501,"byte_end":10611508,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611509,"byte_end":10611512,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ We can also read input line by line.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611513,"byte_end":10611553,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611554,"byte_end":10611557,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611558,"byte_end":10611571,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611572,"byte_end":10611620,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611621,"byte_end":10611653,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611654,"byte_end":10611657,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ use std::process::Stdio;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611658,"byte_end":10611686,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611687,"byte_end":10611690,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611691,"byte_end":10611709,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611710,"byte_end":10611773,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"/     let mut cmd = Command::new(\"cat\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611774,"byte_end":10611816,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611817,"byte_end":10611820,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     // Specify that we want the command's standard output piped back to us.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611821,"byte_end":10611900,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/     // By default, standard input/output/error will be inherited from the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611901,"byte_end":10611978,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/     // current process (for example, this means that standard input will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10611979,"byte_end":10612055,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/     // come from the keyboard and standard output/error will go directly to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612056,"byte_end":10612135,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/     // the terminal if this process is invoked from the command line).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612136,"byte_end":10612210,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/     cmd.stdout(Stdio::piped());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612211,"byte_end":10612246,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612247,"byte_end":10612250,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut child = cmd.spawn()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612251,"byte_end":10612286,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/         .expect(\"failed to spawn command\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612287,"byte_end":10612334,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612335,"byte_end":10612338,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     let stdout = child.stdout.take()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612339,"byte_end":10612379,"line_start":79,"line_end":79,"column_start":1,"column_end":41}},{"value":"/         .expect(\"child did not have a handle to stdout\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612380,"byte_end":10612441,"line_start":80,"line_end":80,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612442,"byte_end":10612445,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     let mut reader = BufReader::new(stdout).lines();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612446,"byte_end":10612502,"line_start":82,"line_end":82,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612503,"byte_end":10612506,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     // Ensure the child process is spawned in the runtime so it can","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612507,"byte_end":10612578,"line_start":84,"line_end":84,"column_start":1,"column_end":72}},{"value":"/     // make progress on its own while we await for any output.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612579,"byte_end":10612645,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"/     tokio::spawn(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612646,"byte_end":10612674,"line_start":86,"line_end":86,"column_start":1,"column_end":29}},{"value":"/         let status = child.await","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612675,"byte_end":10612711,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/             .expect(\"child process encountered an error\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612712,"byte_end":10612774,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612775,"byte_end":10612778,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/         println!(\"child status was: {}\", status);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612779,"byte_end":10612832,"line_start":90,"line_end":90,"column_start":1,"column_end":54}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612833,"byte_end":10612844,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612845,"byte_end":10612848,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     while let Some(line) = reader.next_line().await? {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612849,"byte_end":10612907,"line_start":93,"line_end":93,"column_start":1,"column_end":59}},{"value":"/         println!(\"Line: {}\", line);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612908,"byte_end":10612947,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612948,"byte_end":10612957,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612958,"byte_end":10612961,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612962,"byte_end":10612976,"line_start":97,"line_end":97,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612977,"byte_end":10612982,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612983,"byte_end":10612990,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612991,"byte_end":10612994,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10612995,"byte_end":10613008,"line_start":101,"line_end":101,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10613009,"byte_end":10613012,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10613013,"byte_end":10613088,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10613089,"byte_end":10613162,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10613163,"byte_end":10613243,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10613244,"byte_end":10613247,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10613248,"byte_end":10613322,"line_start":107,"line_end":107,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10613323,"byte_end":10613397,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10613398,"byte_end":10613413,"line_start":109,"line_end":109,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10613414,"byte_end":10613417,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: crate::process::Command","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10613418,"byte_end":10613458,"line_start":111,"line_end":111,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3979},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614479,"byte_end":10614486,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"Command","qualname":"::process::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":3980},{"krate":0,"index":3981}],"decl_id":null,"docs":" This structure mimics the API of [`std::process::Command`] found in the standard library, but\n replaces functions that create a process with an asynchronous variant. The main provided\n asynchronous functions are [spawn](Command::spawn), [status](Command::status), and\n [output](Command::output).","sig":null,"attributes":[{"value":"/ This structure mimics the API of [`std::process::Command`] found in the standard library, but","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10613967,"byte_end":10614064,"line_start":139,"line_end":139,"column_start":1,"column_end":98}},{"value":"/ replaces functions that create a process with an asynchronous variant. The main provided","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614065,"byte_end":10614157,"line_start":140,"line_end":140,"column_start":1,"column_end":93}},{"value":"/ asynchronous functions are [spawn](Command::spawn), [status](Command::status), and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614158,"byte_end":10614244,"line_start":141,"line_end":141,"column_start":1,"column_end":87}},{"value":"/ [output](Command::output).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614245,"byte_end":10614275,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614276,"byte_end":10614279,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ `Command` uses asynchronous versions of some `std` types (for example [`Child`]).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614280,"byte_end":10614365,"line_start":144,"line_end":144,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614366,"byte_end":10614369,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614370,"byte_end":10614422,"line_start":146,"line_end":146,"column_start":1,"column_end":53}},{"value":"/ [`Child`]: struct@Child","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614423,"byte_end":10614450,"line_start":147,"line_end":147,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3886},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615836,"byte_end":10615839,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"pub fn new<S: AsRef<OsStr>>(S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Command` for launching the program at\n path `program`, with the following default configuration:","sig":null,"attributes":[{"value":"/ Constructs a new `Command` for launching the program at","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614727,"byte_end":10614786,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/ path `program`, with the following default configuration:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614791,"byte_end":10614852,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614857,"byte_end":10614860,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * No arguments to the program","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614865,"byte_end":10614898,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/ * Inherit the current process's environment","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614903,"byte_end":10614950,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/ * Inherit the current process's working directory","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614955,"byte_end":10615008,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/ * Inherit stdin/stdout/stderr for `spawn` or `status`, but create pipes for `output`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615013,"byte_end":10615101,"line_start":168,"line_end":168,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615106,"byte_end":10615109,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Builder methods are provided to change these defaults and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615114,"byte_end":10615175,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/ otherwise configure the process.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615180,"byte_end":10615216,"line_start":171,"line_end":171,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615221,"byte_end":10615224,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If `program` is not an absolute path, the `PATH` will be searched in","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615229,"byte_end":10615301,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ an OS-defined way.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615306,"byte_end":10615328,"line_start":174,"line_end":174,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615333,"byte_end":10615336,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The search path to be used may be controlled by setting the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615341,"byte_end":10615404,"line_start":176,"line_end":176,"column_start":5,"column_end":68}},{"value":"/ `PATH` environment variable on the Command,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615409,"byte_end":10615456,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/ but this has some implementation limitations on Windows","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615461,"byte_end":10615520,"line_start":178,"line_end":178,"column_start":5,"column_end":64}},{"value":"/ (see issue [rust-lang/rust#37519]).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615525,"byte_end":10615564,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615569,"byte_end":10615572,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615577,"byte_end":10615591,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615596,"byte_end":10615599,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615604,"byte_end":10615620,"line_start":183,"line_end":183,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615625,"byte_end":10615628,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615633,"byte_end":10615646,"line_start":185,"line_end":185,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615651,"byte_end":10615683,"line_start":186,"line_end":186,"column_start":5,"column_end":37}},{"value":"/ let command = Command::new(\"sh\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615688,"byte_end":10615725,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615730,"byte_end":10615737,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615742,"byte_end":10615745,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [rust-lang/rust#37519]: https://github.com/rust-lang/rust/issues/37519","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615750,"byte_end":10615824,"line_start":190,"line_end":190,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616686,"byte_end":10616689,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"pub fn arg<S: AsRef<OsStr>>(&mut Self, S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds an argument to pass to the program.","sig":null,"attributes":[{"value":"/ Adds an argument to pass to the program.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615938,"byte_end":10615982,"line_start":195,"line_end":195,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615987,"byte_end":10615990,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Only one argument can be passed per use. So instead of:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10615995,"byte_end":10616054,"line_start":197,"line_end":197,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616059,"byte_end":10616062,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616067,"byte_end":10616080,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616085,"byte_end":10616123,"line_start":200,"line_end":200,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C /path/to/repo\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616128,"byte_end":10616159,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616164,"byte_end":10616171,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616176,"byte_end":10616179,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ usage would be:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616184,"byte_end":10616203,"line_start":204,"line_end":204,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616208,"byte_end":10616211,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616216,"byte_end":10616229,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616234,"byte_end":10616272,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616277,"byte_end":10616293,"line_start":208,"line_end":208,"column_start":5,"column_end":21}},{"value":"/   .arg(\"/path/to/repo\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616298,"byte_end":10616326,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616331,"byte_end":10616338,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616343,"byte_end":10616346,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ To pass multiple arguments see [`args`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616351,"byte_end":10616395,"line_start":212,"line_end":212,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616400,"byte_end":10616403,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [`args`]: method@Self::args","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616408,"byte_end":10616439,"line_start":214,"line_end":214,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616444,"byte_end":10616447,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616452,"byte_end":10616466,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616471,"byte_end":10616474,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616479,"byte_end":10616495,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616500,"byte_end":10616503,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616508,"byte_end":10616521,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616526,"byte_end":10616558,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616563,"byte_end":10616566,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616571,"byte_end":10616607,"line_start":223,"line_end":223,"column_start":5,"column_end":41}},{"value":"/         .arg(\"-l\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616612,"byte_end":10616634,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/         .arg(\"-a\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616639,"byte_end":10616662,"line_start":225,"line_end":225,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616667,"byte_end":10616674,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617173,"byte_end":10617177,"line_start":248,"line_end":248,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"pub fn args<I, S>(&mut Self, I) -> &mut Command where I: IntoIterator<Item =\nS>, S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple arguments to pass to the program.","sig":null,"attributes":[{"value":"/ Adds multiple arguments to pass to the program.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616795,"byte_end":10616846,"line_start":232,"line_end":232,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616851,"byte_end":10616854,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ To pass a single argument see [`arg`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616859,"byte_end":10616901,"line_start":234,"line_end":234,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616906,"byte_end":10616909,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`arg`]: method@Self::arg","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616914,"byte_end":10616943,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616948,"byte_end":10616951,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616956,"byte_end":10616970,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616975,"byte_end":10616978,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10616983,"byte_end":10616999,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617004,"byte_end":10617007,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617012,"byte_end":10617025,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617030,"byte_end":10617062,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617067,"byte_end":10617070,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617075,"byte_end":10617111,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/         .args(&[\"-l\", \"-a\"]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617116,"byte_end":10617149,"line_start":246,"line_end":246,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617154,"byte_end":10617161,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3893},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617793,"byte_end":10617796,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"env","qualname":"<Command>::env","value":"pub fn env<K, V>(&mut Self, K, V) -> &mut Command where K: AsRef<OsStr>,\nV: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Inserts or updates an environment variable mapping.","sig":null,"attributes":[{"value":"/ Inserts or updates an environment variable mapping.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617349,"byte_end":10617404,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617409,"byte_end":10617412,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617417,"byte_end":10617512,"line_start":259,"line_end":259,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617517,"byte_end":10617563,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617568,"byte_end":10617571,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617576,"byte_end":10617590,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617595,"byte_end":10617598,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617603,"byte_end":10617619,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617624,"byte_end":10617627,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617632,"byte_end":10617645,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617650,"byte_end":10617682,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617687,"byte_end":10617690,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617695,"byte_end":10617731,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/         .env(\"PATH\", \"/bin\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617736,"byte_end":10617769,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617774,"byte_end":10617781,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618670,"byte_end":10618674,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"envs","qualname":"<Command>::envs","value":"pub fn envs<I, K, V>(&mut Self, I) -> &mut Command where I: IntoIterator<Item\n= (K, V)>, K: AsRef<OsStr>, V: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds or updates multiple environment variable mappings.","sig":null,"attributes":[{"value":"/ Adds or updates multiple environment variable mappings.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10617968,"byte_end":10618027,"line_start":281,"line_end":281,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618032,"byte_end":10618035,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618040,"byte_end":10618054,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618059,"byte_end":10618062,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618067,"byte_end":10618083,"line_start":285,"line_end":285,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618088,"byte_end":10618091,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618096,"byte_end":10618109,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618114,"byte_end":10618146,"line_start":288,"line_end":288,"column_start":5,"column_end":37}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618151,"byte_end":10618181,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ use std::env;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618186,"byte_end":10618203,"line_start":290,"line_end":290,"column_start":5,"column_end":22}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618208,"byte_end":10618242,"line_start":291,"line_end":291,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618247,"byte_end":10618250,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let filtered_env : HashMap<String, String> =","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618255,"byte_end":10618303,"line_start":293,"line_end":293,"column_start":5,"column_end":53}},{"value":"/     env::vars().filter(|&(ref k, _)|","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618308,"byte_end":10618348,"line_start":294,"line_end":294,"column_start":5,"column_end":45}},{"value":"/         k == \"TERM\" || k == \"TZ\" || k == \"LANG\" || k == \"PATH\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618353,"byte_end":10618419,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/     ).collect();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618424,"byte_end":10618444,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618449,"byte_end":10618452,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"printenv\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618457,"byte_end":10618499,"line_start":298,"line_end":298,"column_start":5,"column_end":47}},{"value":"/         .stdin(Stdio::null())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618504,"byte_end":10618537,"line_start":299,"line_end":299,"column_start":5,"column_end":38}},{"value":"/         .stdout(Stdio::inherit())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618542,"byte_end":10618579,"line_start":300,"line_end":300,"column_start":5,"column_end":42}},{"value":"/         .env_clear()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618584,"byte_end":10618608,"line_start":301,"line_end":301,"column_start":5,"column_end":29}},{"value":"/         .envs(&filtered_env);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618613,"byte_end":10618646,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618651,"byte_end":10618658,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619152,"byte_end":10619162,"line_start":326,"line_end":326,"column_start":12,"column_end":22},"name":"env_remove","qualname":"<Command>::env_remove","value":"pub fn env_remove<K: AsRef<OsStr>>(&mut Self, K) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable mapping.","sig":null,"attributes":[{"value":"/ Removes an environment variable mapping.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618879,"byte_end":10618923,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618928,"byte_end":10618931,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618936,"byte_end":10618950,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618955,"byte_end":10618958,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618963,"byte_end":10618979,"line_start":318,"line_end":318,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618984,"byte_end":10618987,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10618992,"byte_end":10619005,"line_start":320,"line_end":320,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619010,"byte_end":10619042,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619047,"byte_end":10619050,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619055,"byte_end":10619091,"line_start":323,"line_end":323,"column_start":5,"column_end":41}},{"value":"/         .env_remove(\"PATH\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619096,"byte_end":10619128,"line_start":324,"line_end":324,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619133,"byte_end":10619140,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619557,"byte_end":10619566,"line_start":343,"line_end":343,"column_start":12,"column_end":21},"name":"env_clear","qualname":"<Command>::env_clear","value":"pub fn env_clear(&mut Self) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Clears the entire environment map for the child process.","sig":null,"attributes":[{"value":"/ Clears the entire environment map for the child process.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619275,"byte_end":10619335,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619340,"byte_end":10619343,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619348,"byte_end":10619362,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619367,"byte_end":10619370,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619375,"byte_end":10619391,"line_start":335,"line_end":335,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619396,"byte_end":10619399,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619404,"byte_end":10619417,"line_start":337,"line_end":337,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619422,"byte_end":10619454,"line_start":338,"line_end":338,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619459,"byte_end":10619462,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619467,"byte_end":10619503,"line_start":340,"line_end":340,"column_start":5,"column_end":41}},{"value":"/         .env_clear();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619508,"byte_end":10619533,"line_start":341,"line_end":341,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619538,"byte_end":10619545,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3903},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620411,"byte_end":10620422,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"current_dir","qualname":"<Command>::current_dir","value":"pub fn current_dir<P: AsRef<Path>>(&mut Self, P) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the working directory for the child process.","sig":null,"attributes":[{"value":"/ Sets the working directory for the child process.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619650,"byte_end":10619703,"line_start":348,"line_end":348,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619708,"byte_end":10619711,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619716,"byte_end":10619748,"line_start":350,"line_end":350,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619753,"byte_end":10619756,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ If the program path is relative (e.g., `\"./script.sh\"`), it's ambiguous","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619761,"byte_end":10619836,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/ whether it should be interpreted relative to the parent's working","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619841,"byte_end":10619910,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ directory or relative to `current_dir`. The behavior in this case is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619915,"byte_end":10619987,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ platform specific and unstable, and it's recommended to use","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10619992,"byte_end":10620055,"line_start":355,"line_end":355,"column_start":5,"column_end":68}},{"value":"/ [`canonicalize`] to get an absolute program path instead.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620060,"byte_end":10620121,"line_start":356,"line_end":356,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620126,"byte_end":10620129,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [`canonicalize`]: crate::fs::canonicalize()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620134,"byte_end":10620181,"line_start":358,"line_end":358,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620186,"byte_end":10620189,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620194,"byte_end":10620208,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620213,"byte_end":10620216,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620221,"byte_end":10620237,"line_start":362,"line_end":362,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620242,"byte_end":10620245,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620250,"byte_end":10620263,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620268,"byte_end":10620300,"line_start":365,"line_end":365,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620305,"byte_end":10620308,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620313,"byte_end":10620349,"line_start":367,"line_end":367,"column_start":5,"column_end":41}},{"value":"/         .current_dir(\"/bin\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620354,"byte_end":10620387,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620392,"byte_end":10620399,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621117,"byte_end":10621122,"line_start":394,"line_end":394,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Command>::stdin","value":"pub fn stdin<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard input (stdin) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard input (stdin) handle.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620535,"byte_end":10620612,"line_start":375,"line_end":375,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620617,"byte_end":10620620,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620625,"byte_end":10620692,"line_start":377,"line_end":377,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620697,"byte_end":10620747,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620752,"byte_end":10620755,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620760,"byte_end":10620805,"line_start":380,"line_end":380,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620810,"byte_end":10620851,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620856,"byte_end":10620859,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620864,"byte_end":10620878,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620883,"byte_end":10620886,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620891,"byte_end":10620907,"line_start":385,"line_end":385,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620912,"byte_end":10620915,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620920,"byte_end":10620933,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620938,"byte_end":10620968,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10620973,"byte_end":10621005,"line_start":389,"line_end":389,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621010,"byte_end":10621013,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621018,"byte_end":10621054,"line_start":391,"line_end":391,"column_start":5,"column_end":41}},{"value":"/         .stdin(Stdio::null());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621059,"byte_end":10621093,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621098,"byte_end":10621105,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621813,"byte_end":10621819,"line_start":418,"line_end":418,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Command>::stdout","value":"pub fn stdout<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard output (stdout) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard output (stdout) handle.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621229,"byte_end":10621308,"line_start":399,"line_end":399,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621313,"byte_end":10621316,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621321,"byte_end":10621388,"line_start":401,"line_end":401,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621393,"byte_end":10621443,"line_start":402,"line_end":402,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621448,"byte_end":10621451,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621456,"byte_end":10621501,"line_start":404,"line_end":404,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621506,"byte_end":10621547,"line_start":405,"line_end":405,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621552,"byte_end":10621555,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621560,"byte_end":10621574,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621579,"byte_end":10621582,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621587,"byte_end":10621603,"line_start":409,"line_end":409,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621608,"byte_end":10621611,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621616,"byte_end":10621629,"line_start":411,"line_end":411,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621634,"byte_end":10621667,"line_start":412,"line_end":412,"column_start":5,"column_end":38}},{"value":"/ use std::process::Stdio;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621672,"byte_end":10621700,"line_start":413,"line_end":413,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621705,"byte_end":10621708,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621713,"byte_end":10621749,"line_start":415,"line_end":415,"column_start":5,"column_end":41}},{"value":"/         .stdout(Stdio::null());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621754,"byte_end":10621789,"line_start":416,"line_end":416,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621794,"byte_end":10621801,"line_start":417,"line_end":417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3909},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622512,"byte_end":10622518,"line_start":442,"line_end":442,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Command>::stderr","value":"pub fn stderr<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard error (stderr) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard error (stderr) handle.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10621927,"byte_end":10622005,"line_start":423,"line_end":423,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622010,"byte_end":10622013,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622018,"byte_end":10622085,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622090,"byte_end":10622140,"line_start":426,"line_end":426,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622145,"byte_end":10622148,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622153,"byte_end":10622198,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622203,"byte_end":10622244,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622249,"byte_end":10622252,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622257,"byte_end":10622271,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622276,"byte_end":10622279,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622284,"byte_end":10622300,"line_start":433,"line_end":433,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622305,"byte_end":10622308,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622313,"byte_end":10622326,"line_start":435,"line_end":435,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622331,"byte_end":10622364,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622369,"byte_end":10622399,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622404,"byte_end":10622407,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622412,"byte_end":10622448,"line_start":439,"line_end":439,"column_start":5,"column_end":41}},{"value":"/         .stderr(Stdio::null());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622453,"byte_end":10622488,"line_start":440,"line_end":440,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622493,"byte_end":10622500,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3911},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622971,"byte_end":10622983,"line_start":453,"line_end":453,"column_start":12,"column_end":24},"name":"kill_on_drop","qualname":"<Command>::kill_on_drop","value":"pub fn kill_on_drop(&mut Self, bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Controls whether a `kill` operation should be invoked on a spawned child\n process when its corresponding `Child` handle is dropped.","sig":null,"attributes":[{"value":"/ Controls whether a `kill` operation should be invoked on a spawned child","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622626,"byte_end":10622702,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ process when its corresponding `Child` handle is dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622707,"byte_end":10622768,"line_start":448,"line_end":448,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622773,"byte_end":10622776,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ By default, this value is assumed to be `false`, meaning the next spawned","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622781,"byte_end":10622858,"line_start":450,"line_end":450,"column_start":5,"column_end":82}},{"value":"/ process will not be killed on drop, similar to the behavior of the standard","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622863,"byte_end":10622942,"line_start":451,"line_end":451,"column_start":5,"column_end":84}},{"value":"/ library.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10622947,"byte_end":10622959,"line_start":452,"line_end":452,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3912},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10623382,"byte_end":10623396,"line_start":464,"line_end":464,"column_start":12,"column_end":26},"name":"creation_flags","qualname":"<Command>::creation_flags","value":"pub fn creation_flags(&mut Self, u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the [process creation flags][1] to be passed to `CreateProcess`.","sig":null,"attributes":[{"value":"/ Sets the [process creation flags][1] to be passed to `CreateProcess`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10623099,"byte_end":10623172,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10623177,"byte_end":10623180,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ These will always be ORed with `CREATE_UNICODE_ENVIRONMENT`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10623185,"byte_end":10623249,"line_start":460,"line_end":460,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10623254,"byte_end":10623257,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ [1]: https://msdn.microsoft.com/en-us/library/windows/desktop/ms684863(v=vs.85).aspx","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10623262,"byte_end":10623350,"line_start":462,"line_end":462,"column_start":5,"column_end":93}},{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10623355,"byte_end":10623370,"line_start":463,"line_end":463,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3913},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10627245,"byte_end":10627250,"line_start":562,"line_end":562,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Command>::spawn","value":"pub fn spawn(&mut Self) -> io::Result<Child>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, returning a handle to it.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, returning a handle to it.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10625775,"byte_end":10625845,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10625850,"byte_end":10625853,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10625858,"byte_end":10625929,"line_start":526,"line_end":526,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10625934,"byte_end":10625937,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This method will spawn the child process synchronously and return a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10625942,"byte_end":10626013,"line_start":528,"line_end":528,"column_start":5,"column_end":76}},{"value":"/ handle to a future-aware child process. The `Child` returned implements","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626018,"byte_end":10626093,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ `Future` itself to acquire the `ExitStatus` of the child, and otherwise","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626098,"byte_end":10626173,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ the `Child` has methods to acquire handles to the stdin, stdout, and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626178,"byte_end":10626250,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ stderr streams.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626255,"byte_end":10626274,"line_start":532,"line_end":532,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626279,"byte_end":10626282,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626287,"byte_end":10626358,"line_start":534,"line_end":534,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626363,"byte_end":10626378,"line_start":535,"line_end":535,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626383,"byte_end":10626386,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626391,"byte_end":10626404,"line_start":537,"line_end":537,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626409,"byte_end":10626412,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626417,"byte_end":10626492,"line_start":539,"line_end":539,"column_start":5,"column_end":80}},{"value":"/ paradigm of dropping-implies-cancellation, the spawned process will, by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626497,"byte_end":10626572,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626577,"byte_end":10626657,"line_start":541,"line_end":541,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626662,"byte_end":10626665,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626670,"byte_end":10626744,"line_start":543,"line_end":543,"column_start":5,"column_end":79}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626749,"byte_end":10626823,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ has exited.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626828,"byte_end":10626843,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626848,"byte_end":10626851,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626856,"byte_end":10626870,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626875,"byte_end":10626878,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626883,"byte_end":10626899,"line_start":549,"line_end":549,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626904,"byte_end":10626907,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626912,"byte_end":10626925,"line_start":551,"line_end":551,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626930,"byte_end":10626962,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626967,"byte_end":10626970,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10626975,"byte_end":10627026,"line_start":554,"line_end":554,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10627031,"byte_end":10627057,"line_start":555,"line_end":555,"column_start":5,"column_end":31}},{"value":"/         .spawn()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10627062,"byte_end":10627082,"line_start":556,"line_end":556,"column_start":5,"column_end":25}},{"value":"/         .expect(\"ls command failed to start\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10627087,"byte_end":10627136,"line_start":557,"line_end":557,"column_start":5,"column_end":54}},{"value":"/         .await","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10627141,"byte_end":10627159,"line_start":558,"line_end":558,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10627164,"byte_end":10627211,"line_start":559,"line_end":559,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10627216,"byte_end":10627221,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10627226,"byte_end":10627233,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3918},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628808,"byte_end":10628814,"line_start":605,"line_end":605,"column_start":12,"column_end":18},"name":"status","qualname":"<Command>::status","value":"pub fn status(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting its exit status.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10627747,"byte_end":10627820,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ collecting its exit status.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10627825,"byte_end":10627856,"line_start":575,"line_end":575,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10627861,"byte_end":10627864,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10627869,"byte_end":10627940,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/ If any input/output handles are set to a pipe then they will be immediately","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10627945,"byte_end":10628024,"line_start":578,"line_end":578,"column_start":5,"column_end":84}},{"value":"/ closed after the child is spawned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628029,"byte_end":10628067,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628072,"byte_end":10628075,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628080,"byte_end":10628151,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628156,"byte_end":10628171,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628176,"byte_end":10628179,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628184,"byte_end":10628246,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628251,"byte_end":10628299,"line_start":585,"line_end":585,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628304,"byte_end":10628307,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628312,"byte_end":10628324,"line_start":587,"line_end":587,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628329,"byte_end":10628332,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628337,"byte_end":10628412,"line_start":589,"line_end":589,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628417,"byte_end":10628471,"line_start":590,"line_end":590,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628476,"byte_end":10628479,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628484,"byte_end":10628498,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628503,"byte_end":10628506,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628511,"byte_end":10628527,"line_start":594,"line_end":594,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628532,"byte_end":10628535,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628540,"byte_end":10628553,"line_start":596,"line_end":596,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628558,"byte_end":10628590,"line_start":597,"line_end":597,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628595,"byte_end":10628598,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628603,"byte_end":10628654,"line_start":599,"line_end":599,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628659,"byte_end":10628685,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/         .status()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628690,"byte_end":10628711,"line_start":601,"line_end":601,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628716,"byte_end":10628734,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628739,"byte_end":10628786,"line_start":603,"line_end":603,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10628791,"byte_end":10628796,"line_start":604,"line_end":604,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":3921},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630703,"byte_end":10630709,"line_start":657,"line_end":657,"column_start":12,"column_end":18},"name":"output","qualname":"<Command>::output","value":"pub fn output(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting all of its output.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10629289,"byte_end":10629362,"line_start":622,"line_end":622,"column_start":5,"column_end":78}},{"value":"/ collecting all of its output.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10629367,"byte_end":10629400,"line_start":623,"line_end":623,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10629405,"byte_end":10629408,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ > **Note**: this method, unlike the standard library, will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10629413,"byte_end":10629475,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/ > unconditionally configure the stdout/stderr handles to be pipes, even","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10629480,"byte_end":10629555,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ > if they have been previously configured. If this is not desired then","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10629560,"byte_end":10629634,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ > the `spawn` method should be used in combination with the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10629639,"byte_end":10629702,"line_start":628,"line_end":628,"column_start":5,"column_end":68}},{"value":"/ > `wait_with_output` method on child.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10629707,"byte_end":10629748,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10629753,"byte_end":10629756,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This method will return a future representing the collection of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10629761,"byte_end":10629832,"line_start":631,"line_end":631,"column_start":5,"column_end":76}},{"value":"/ child process's stdout/stderr. It will resolve to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10629837,"byte_end":10629890,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ the `Output` type in the standard library, containing `stdout` and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10629895,"byte_end":10629965,"line_start":633,"line_end":633,"column_start":5,"column_end":75}},{"value":"/ `stderr` as `Vec<u8>` along with an `ExitStatus` representing how the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10629970,"byte_end":10630043,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ process exited.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630048,"byte_end":10630067,"line_start":635,"line_end":635,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630072,"byte_end":10630075,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630080,"byte_end":10630151,"line_start":637,"line_end":637,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630156,"byte_end":10630171,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630176,"byte_end":10630179,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630184,"byte_end":10630246,"line_start":640,"line_end":640,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630251,"byte_end":10630299,"line_start":641,"line_end":641,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630304,"byte_end":10630307,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630312,"byte_end":10630326,"line_start":643,"line_end":643,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630331,"byte_end":10630334,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630339,"byte_end":10630355,"line_start":645,"line_end":645,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630360,"byte_end":10630363,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630368,"byte_end":10630381,"line_start":647,"line_end":647,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630386,"byte_end":10630418,"line_start":648,"line_end":648,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630423,"byte_end":10630426,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630431,"byte_end":10630454,"line_start":650,"line_end":650,"column_start":5,"column_end":28}},{"value":"/     let output: std::process::Output = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630459,"byte_end":10630520,"line_start":651,"line_end":651,"column_start":5,"column_end":66}},{"value":"/         .output()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630525,"byte_end":10630546,"line_start":652,"line_end":652,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630551,"byte_end":10630569,"line_start":653,"line_end":653,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630574,"byte_end":10630622,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/     println!(\"stderr of ls: {:?}\", output.stderr);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630627,"byte_end":10630681,"line_start":655,"line_end":655,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630686,"byte_end":10630691,"line_start":656,"line_end":656,"column_start":5,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":3991},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633058,"byte_end":10633063,"line_start":744,"line_end":744,"column_start":12,"column_end":17},"name":"Child","qualname":"::process::Child","value":"Child { stdin, stdout, stderr }","parent":null,"children":[{"krate":0,"index":3992},{"krate":0,"index":3993},{"krate":0,"index":3994},{"krate":0,"index":3995}],"decl_id":null,"docs":" Representation of a child process spawned onto an event loop.","sig":null,"attributes":[{"value":"/ Representation of a child process spawned onto an event loop.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632280,"byte_end":10632345,"line_start":728,"line_end":728,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632346,"byte_end":10632349,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ This type is also a future which will yield the `ExitStatus` of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632350,"byte_end":10632421,"line_start":730,"line_end":730,"column_start":1,"column_end":72}},{"value":"/ underlying child process. A `Child` here also provides access to information","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632422,"byte_end":10632502,"line_start":731,"line_end":731,"column_start":1,"column_end":81}},{"value":"/ like the OS-assigned identifier and the stdio streams.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632503,"byte_end":10632561,"line_start":732,"line_end":732,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632562,"byte_end":10632565,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632566,"byte_end":10632579,"line_start":734,"line_end":734,"column_start":1,"column_end":14}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632580,"byte_end":10632655,"line_start":735,"line_end":735,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632656,"byte_end":10632729,"line_start":736,"line_end":736,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632730,"byte_end":10632810,"line_start":737,"line_end":737,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632811,"byte_end":10632814,"line_start":738,"line_end":738,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632815,"byte_end":10632889,"line_start":739,"line_end":739,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632890,"byte_end":10632964,"line_start":740,"line_end":740,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632965,"byte_end":10632980,"line_start":741,"line_end":741,"column_start":1,"column_end":16}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10632981,"byte_end":10633029,"line_start":742,"line_end":742,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3993},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633217,"byte_end":10633222,"line_start":749,"line_end":749,"column_start":9,"column_end":14},"name":"stdin","qualname":"::process::Child::stdin","value":"std::option::Option<process::ChildStdin>","parent":{"krate":0,"index":3991},"children":[],"decl_id":null,"docs":" The handle for writing to the child's standard input (stdin), if it has\n been captured.\n","sig":null,"attributes":[{"value":"/ The handle for writing to the child's standard input (stdin), if it has","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633110,"byte_end":10633185,"line_start":747,"line_end":747,"column_start":5,"column_end":80}},{"value":"/ been captured.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633190,"byte_end":10633208,"line_start":748,"line_end":748,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3994},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633360,"byte_end":10633366,"line_start":753,"line_end":753,"column_start":9,"column_end":15},"name":"stdout","qualname":"::process::Child::stdout","value":"std::option::Option<process::ChildStdout>","parent":{"krate":0,"index":3991},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard output (stdout), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard output (stdout), if it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633249,"byte_end":10633324,"line_start":751,"line_end":751,"column_start":5,"column_end":80}},{"value":"/ has been captured.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633329,"byte_end":10633351,"line_start":752,"line_end":752,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3995},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633504,"byte_end":10633510,"line_start":757,"line_end":757,"column_start":9,"column_end":15},"name":"stderr","qualname":"::process::Child::stderr","value":"std::option::Option<process::ChildStderr>","parent":{"krate":0,"index":3991},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard error (stderr), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard error (stderr), if it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633394,"byte_end":10633468,"line_start":755,"line_end":755,"column_start":5,"column_end":79}},{"value":"/ has been captured.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633473,"byte_end":10633495,"line_start":756,"line_end":756,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3939},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633639,"byte_end":10633641,"line_start":762,"line_end":762,"column_start":12,"column_end":14},"name":"id","qualname":"<Child>::id","value":"pub fn id(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS-assigned process identifier associated with this child.\n","sig":null,"attributes":[{"value":"/ Returns the OS-assigned process identifier associated with this child.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633553,"byte_end":10633627,"line_start":761,"line_end":761,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3940},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633815,"byte_end":10633819,"line_start":769,"line_end":769,"column_start":12,"column_end":16},"name":"kill","qualname":"<Child>::kill","value":"pub fn kill(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Forces the child to exit.","sig":null,"attributes":[{"value":"/ Forces the child to exit.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633699,"byte_end":10633728,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633733,"byte_end":10633736,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to sending a SIGKILL on unix platforms.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633741,"byte_end":10633803,"line_start":768,"line_end":768,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3941},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633975,"byte_end":10633980,"line_start":775,"line_end":775,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Child>::stdin","value":"pub fn stdin(&mut Self) -> &mut Option<ChildStdin>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdin` instead\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633907,"byte_end":10633963,"line_start":774,"line_end":774,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3942},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634144,"byte_end":10634150,"line_start":781,"line_end":781,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Child>::stdout","value":"pub fn stdout(&mut Self) -> &mut Option<ChildStdout>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdout` instead\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634075,"byte_end":10634132,"line_start":780,"line_end":780,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3943},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634316,"byte_end":10634322,"line_start":787,"line_end":787,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Child>::stderr","value":"pub fn stderr(&mut Self) -> &mut Option<ChildStderr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stderr` instead\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634247,"byte_end":10634304,"line_start":786,"line_end":786,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3944},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10635330,"byte_end":10635346,"line_start":807,"line_end":807,"column_start":18,"column_end":34},"name":"wait_with_output","qualname":"<Child>::wait_with_output","value":"pub async fn wait_with_output(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will resolve to an `Output`, containing the exit\n status, stdout, and stderr of the child process.","sig":null,"attributes":[{"value":"/ Returns a future that will resolve to an `Output`, containing the exit","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634400,"byte_end":10634474,"line_start":791,"line_end":791,"column_start":5,"column_end":79}},{"value":"/ status, stdout, and stderr of the child process.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634479,"byte_end":10634531,"line_start":792,"line_end":792,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634536,"byte_end":10634539,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ The returned future will simultaneously waits for the child to exit and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634544,"byte_end":10634619,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ collect all remaining output on the stdout/stderr handles, returning an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634624,"byte_end":10634699,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ `Output` instance.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634704,"byte_end":10634726,"line_start":796,"line_end":796,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634731,"byte_end":10634734,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed before","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634739,"byte_end":10634811,"line_start":798,"line_end":798,"column_start":5,"column_end":77}},{"value":"/ waiting. This helps avoid deadlock: it ensures that the child does not","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634816,"byte_end":10634890,"line_start":799,"line_end":799,"column_start":5,"column_end":79}},{"value":"/ block waiting for input from the parent, while the parent waits for the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634895,"byte_end":10634970,"line_start":800,"line_end":800,"column_start":5,"column_end":80}},{"value":"/ child to exit.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634975,"byte_end":10634993,"line_start":801,"line_end":801,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10634998,"byte_end":10635001,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent. In","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10635006,"byte_end":10635080,"line_start":803,"line_end":803,"column_start":5,"column_end":79}},{"value":"/ order to capture the output into this `Output` it is necessary to create","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10635085,"byte_end":10635161,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ new pipes between parent and child. Use `stdout(Stdio::piped())` or","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10635166,"byte_end":10635237,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ `stderr(Stdio::piped())`, respectively, when creating a `Command`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10635242,"byte_end":10635312,"line_start":806,"line_end":806,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":3998},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636460,"byte_end":10636470,"line_start":845,"line_end":845,"column_start":12,"column_end":22},"name":"ChildStdin","qualname":"::process::ChildStdin","value":"ChildStdin {  }","parent":null,"children":[{"krate":0,"index":3999}],"decl_id":null,"docs":" The standard input stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard input stream for spawned children.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636246,"byte_end":10636297,"line_start":840,"line_end":840,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636298,"byte_end":10636301,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncWrite` trait to pass data to the stdin handle of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636302,"byte_end":10636385,"line_start":842,"line_end":842,"column_start":1,"column_end":84}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636386,"byte_end":10636431,"line_start":843,"line_end":843,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4002},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636711,"byte_end":10636722,"line_start":854,"line_end":854,"column_start":12,"column_end":23},"name":"ChildStdout","qualname":"::process::ChildStdout","value":"ChildStdout {  }","parent":null,"children":[{"krate":0,"index":4003}],"decl_id":null,"docs":" The standard output stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard output stream for spawned children.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636504,"byte_end":10636556,"line_start":849,"line_end":849,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636557,"byte_end":10636560,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stdout","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636561,"byte_end":10636636,"line_start":851,"line_end":851,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636637,"byte_end":10636682,"line_start":852,"line_end":852,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4006},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636963,"byte_end":10636974,"line_start":863,"line_end":863,"column_start":12,"column_end":23},"name":"ChildStderr","qualname":"::process::ChildStderr","value":"ChildStderr {  }","parent":null,"children":[{"krate":0,"index":4007}],"decl_id":null,"docs":" The standard error stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard error stream for spawned children.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636757,"byte_end":10636808,"line_start":858,"line_end":858,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636809,"byte_end":10636812,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stderr","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636813,"byte_end":10636888,"line_start":860,"line_end":860,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636889,"byte_end":10636934,"line_start":861,"line_end":861,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":4020},{"krate":0,"index":4111},{"krate":0,"index":4112},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":4745},{"krate":0,"index":4746},{"krate":0,"index":4747},{"krate":0,"index":580},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":4850},{"krate":0,"index":4900},{"krate":0,"index":693},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":4931},{"krate":0,"index":5032},{"krate":0,"index":5230},{"krate":0,"index":5259},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":5260},{"krate":0,"index":5264},{"krate":0,"index":5266},{"krate":0,"index":5276},{"krate":0,"index":732},{"krate":0,"index":733}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105678,"byte_end":105700,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105701,"byte_end":105704,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105705,"byte_end":105770,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ runtime support. In particular, the following runtime services are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105771,"byte_end":105841,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ necessary:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105842,"byte_end":105856,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105857,"byte_end":105860,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105861,"byte_end":105939,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105940,"byte_end":105997,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105998,"byte_end":106068,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106069,"byte_end":106141,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106142,"byte_end":106145,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106146,"byte_end":106226,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, most","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106227,"byte_end":106300,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106301,"byte_end":106375,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106376,"byte_end":106454,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the hood.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106455,"byte_end":106468,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106469,"byte_end":106472,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106473,"byte_end":106484,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106485,"byte_end":106488,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106489,"byte_end":106556,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106557,"byte_end":106560,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106561,"byte_end":106574,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106575,"byte_end":106607,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106608,"byte_end":106634,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106635,"byte_end":106638,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106639,"byte_end":106657,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106658,"byte_end":106721,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106722,"byte_end":106792,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106793,"byte_end":106796,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106797,"byte_end":106811,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106812,"byte_end":106871,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106872,"byte_end":106875,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106876,"byte_end":106913,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106914,"byte_end":106954,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106955,"byte_end":106958,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106959,"byte_end":107039,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107040,"byte_end":107062,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107063,"byte_end":107126,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107127,"byte_end":107167,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107168,"byte_end":107218,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107219,"byte_end":107254,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107255,"byte_end":107290,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107291,"byte_end":107373,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107374,"byte_end":107409,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107410,"byte_end":107435,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107436,"byte_end":107458,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107459,"byte_end":107462,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107463,"byte_end":107505,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107506,"byte_end":107578,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107579,"byte_end":107656,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107657,"byte_end":107688,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107689,"byte_end":107710,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107711,"byte_end":107728,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107729,"byte_end":107744,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107745,"byte_end":107754,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107755,"byte_end":107760,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107761,"byte_end":107768,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107769,"byte_end":107772,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107773,"byte_end":107851,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107852,"byte_end":107930,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107931,"byte_end":107992,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107993,"byte_end":107996,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107997,"byte_end":108050,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108051,"byte_end":108054,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108055,"byte_end":108068,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108069,"byte_end":108101,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108102,"byte_end":108128,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108129,"byte_end":108161,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108162,"byte_end":108165,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108166,"byte_end":108223,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108224,"byte_end":108253,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/     let mut rt = Runtime::new()?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108254,"byte_end":108291,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108292,"byte_end":108295,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108296,"byte_end":108326,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108327,"byte_end":108354,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108355,"byte_end":108429,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108430,"byte_end":108433,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108434,"byte_end":108452,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108453,"byte_end":108516,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108517,"byte_end":108520,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108521,"byte_end":108562,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108563,"byte_end":108607,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108608,"byte_end":108611,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108612,"byte_end":108696,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108697,"byte_end":108723,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108724,"byte_end":108791,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108792,"byte_end":108836,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108837,"byte_end":108891,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108892,"byte_end":108931,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108932,"byte_end":108971,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108972,"byte_end":109058,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109059,"byte_end":109098,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109099,"byte_end":109128,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109129,"byte_end":109155,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109156,"byte_end":109159,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109160,"byte_end":109206,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109207,"byte_end":109283,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109284,"byte_end":109365,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109366,"byte_end":109401,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109402,"byte_end":109427,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109428,"byte_end":109449,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109450,"byte_end":109469,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109470,"byte_end":109483,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109484,"byte_end":109494,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109495,"byte_end":109500,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109501,"byte_end":109508,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109509,"byte_end":109512,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109513,"byte_end":109542,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109543,"byte_end":109546,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109547,"byte_end":109625,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109626,"byte_end":109702,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109703,"byte_end":109745,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109746,"byte_end":109749,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ #### Basic Scheduler","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109750,"byte_end":109774,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109775,"byte_end":109778,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109779,"byte_end":109858,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ will be created and executed on the current thread. The basic scheduler","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109859,"byte_end":109934,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109935,"byte_end":110005,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"/ [`Builder::basic_scheduler`] method:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110006,"byte_end":110046,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110047,"byte_end":110054,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110055,"byte_end":110078,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110079,"byte_end":110082,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110083,"byte_end":110142,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110143,"byte_end":110185,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/     .basic_scheduler()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110186,"byte_end":110212,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110213,"byte_end":110231,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110232,"byte_end":110246,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110247,"byte_end":110254,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110255,"byte_end":110258,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110259,"byte_end":110324,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110325,"byte_end":110395,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110396,"byte_end":110399,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ #### Threaded Scheduler","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110400,"byte_end":110427,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110428,"byte_end":110431,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110432,"byte_end":110503,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110504,"byte_end":110582,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110583,"byte_end":110662,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110663,"byte_end":110747,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110748,"byte_end":110828,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110829,"byte_end":110836,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110837,"byte_end":110860,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110861,"byte_end":110864,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110865,"byte_end":110924,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110925,"byte_end":110970,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110971,"byte_end":111000,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111001,"byte_end":111019,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111020,"byte_end":111034,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111035,"byte_end":111042,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111043,"byte_end":111046,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111047,"byte_end":111127,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/ threaded scheduler runtime by default.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111128,"byte_end":111170,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111171,"byte_end":111174,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111175,"byte_end":111252,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ use-cases, such as when running only a single thread is required.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111253,"byte_end":111322,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111323,"byte_end":111326,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111327,"byte_end":111352,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111353,"byte_end":111356,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111357,"byte_end":111431,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111432,"byte_end":111512,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111513,"byte_end":111592,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111593,"byte_end":111672,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111673,"byte_end":111742,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111743,"byte_end":111746,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111747,"byte_end":111781,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111782,"byte_end":111785,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111786,"byte_end":111865,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111866,"byte_end":111934,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111935,"byte_end":111997,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111998,"byte_end":112001,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112002,"byte_end":112080,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112081,"byte_end":112160,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112161,"byte_end":112219,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112220,"byte_end":112223,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112224,"byte_end":112248,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112249,"byte_end":112273,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112274,"byte_end":112308,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112309,"byte_end":112347,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112348,"byte_end":112394,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112395,"byte_end":112445,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112446,"byte_end":112520,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112521,"byte_end":112601,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112602,"byte_end":112664,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112665,"byte_end":112731,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112732,"byte_end":112796,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4561},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10673446,"byte_end":10673455,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":4562}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4204},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10673631,"byte_end":10673640,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"pub fn cancelled() -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10673606,"byte_end":10673619,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4206},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10673858,"byte_end":10673863,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"pub fn panic(Box<Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10673833,"byte_end":10673846,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4208},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674193,"byte_end":10674205,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674113,"byte_end":10674181,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4209},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674711,"byte_end":10674719,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674332,"byte_end":10674394,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674399,"byte_end":10674402,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674407,"byte_end":10674421,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674426,"byte_end":10674429,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674434,"byte_end":10674441,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674446,"byte_end":10674465,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674470,"byte_end":10674473,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674478,"byte_end":10674496,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674501,"byte_end":10674522,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674527,"byte_end":10674565,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674570,"byte_end":10674597,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674602,"byte_end":10674632,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674637,"byte_end":10674640,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674645,"byte_end":10674677,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674682,"byte_end":10674687,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674692,"byte_end":10674699,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4210},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675626,"byte_end":10675636,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674845,"byte_end":10674924,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674929,"byte_end":10674932,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674937,"byte_end":10674949,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674954,"byte_end":10674957,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10674962,"byte_end":10675036,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675041,"byte_end":10675116,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675121,"byte_end":10675179,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675184,"byte_end":10675187,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675192,"byte_end":10675206,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675211,"byte_end":10675214,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675219,"byte_end":10675238,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675243,"byte_end":10675262,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675267,"byte_end":10675270,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675275,"byte_end":10675293,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675298,"byte_end":10675319,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675324,"byte_end":10675362,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675367,"byte_end":10675394,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675399,"byte_end":10675429,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675434,"byte_end":10675437,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675442,"byte_end":10675469,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675474,"byte_end":10675522,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675527,"byte_end":10675578,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675583,"byte_end":10675592,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675597,"byte_end":10675602,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675607,"byte_end":10675614,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4211},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676401,"byte_end":10676415,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675777,"byte_end":10675846,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675851,"byte_end":10675923,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675928,"byte_end":10675941,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675946,"byte_end":10675949,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675954,"byte_end":10675968,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675973,"byte_end":10675976,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10675981,"byte_end":10676000,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676005,"byte_end":10676024,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676029,"byte_end":10676032,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676037,"byte_end":10676055,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676060,"byte_end":10676081,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676086,"byte_end":10676124,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676129,"byte_end":10676156,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676161,"byte_end":10676191,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676196,"byte_end":10676199,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676204,"byte_end":10676254,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676259,"byte_end":10676307,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676312,"byte_end":10676353,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676358,"byte_end":10676367,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676372,"byte_end":10676377,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676382,"byte_end":10676389,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4563},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10692781,"byte_end":10692791,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":4565},{"krate":0,"index":4566}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128991,"byte_end":128998,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128163,"byte_end":128221,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128222,"byte_end":128225,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128226,"byte_end":128298,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128299,"byte_end":128347,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128348,"byte_end":128351,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128352,"byte_end":128417,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128418,"byte_end":128421,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128422,"byte_end":128499,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128500,"byte_end":128513,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128514,"byte_end":128517,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128518,"byte_end":128551,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128552,"byte_end":128590,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128591,"byte_end":128594,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128595,"byte_end":128609,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128610,"byte_end":128613,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128614,"byte_end":128621,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128622,"byte_end":128654,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128655,"byte_end":128658,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128659,"byte_end":128674,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128675,"byte_end":128699,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128700,"byte_end":128736,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128737,"byte_end":128770,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128771,"byte_end":128799,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128800,"byte_end":128842,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128843,"byte_end":128890,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128891,"byte_end":128911,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128912,"byte_end":128934,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128935,"byte_end":128938,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128939,"byte_end":128965,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128966,"byte_end":128971,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128972,"byte_end":128979,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130153,"byte_end":130156,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":129979,"byte_end":130051,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130056,"byte_end":130067,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130072,"byte_end":130075,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130080,"byte_end":130141,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131360,"byte_end":131370,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130846,"byte_end":130884,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130889,"byte_end":130892,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130897,"byte_end":130968,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130973,"byte_end":131049,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131054,"byte_end":131108,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131113,"byte_end":131116,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131121,"byte_end":131135,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131140,"byte_end":131143,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131148,"byte_end":131155,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131160,"byte_end":131183,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131188,"byte_end":131191,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131196,"byte_end":131232,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131237,"byte_end":131266,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131271,"byte_end":131292,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131297,"byte_end":131313,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131318,"byte_end":131336,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131341,"byte_end":131348,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131925,"byte_end":131936,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"pub fn num_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131547,"byte_end":131620,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131625,"byte_end":131703,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131708,"byte_end":131711,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131716,"byte_end":131791,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131796,"byte_end":131831,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131836,"byte_end":131839,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131844,"byte_end":131913,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132645,"byte_end":132657,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132038,"byte_end":132113,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132118,"byte_end":132121,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132126,"byte_end":132203,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132208,"byte_end":132243,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132248,"byte_end":132251,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132256,"byte_end":132325,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132330,"byte_end":132333,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132338,"byte_end":132390,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132395,"byte_end":132398,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132403,"byte_end":132417,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132422,"byte_end":132425,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132430,"byte_end":132437,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132442,"byte_end":132465,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132470,"byte_end":132473,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132478,"byte_end":132514,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132519,"byte_end":132548,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132553,"byte_end":132577,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132582,"byte_end":132598,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132603,"byte_end":132621,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132626,"byte_end":132633,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133536,"byte_end":133547,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"pub fn max_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132818,"byte_end":132874,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132879,"byte_end":132882,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132887,"byte_end":132964,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132969,"byte_end":133051,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133056,"byte_end":133126,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133131,"byte_end":133134,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133139,"byte_end":133219,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133224,"byte_end":133227,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133232,"byte_end":133261,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133266,"byte_end":133269,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133274,"byte_end":133359,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133364,"byte_end":133367,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133372,"byte_end":133461,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133466,"byte_end":133524,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134071,"byte_end":134082,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133701,"byte_end":133765,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133770,"byte_end":133773,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133778,"byte_end":133825,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133830,"byte_end":133833,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133838,"byte_end":133852,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133857,"byte_end":133860,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133865,"byte_end":133872,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133877,"byte_end":133902,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133907,"byte_end":133910,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133915,"byte_end":133936,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133941,"byte_end":133977,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133982,"byte_end":134013,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134018,"byte_end":134035,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134040,"byte_end":134047,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134052,"byte_end":134059,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134806,"byte_end":134823,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134196,"byte_end":134250,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134255,"byte_end":134258,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134263,"byte_end":134335,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134340,"byte_end":134373,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134378,"byte_end":134381,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134386,"byte_end":134454,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134459,"byte_end":134520,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134525,"byte_end":134528,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134533,"byte_end":134547,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134552,"byte_end":134555,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134560,"byte_end":134567,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134572,"byte_end":134597,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134602,"byte_end":134605,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134610,"byte_end":134631,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134636,"byte_end":134672,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134677,"byte_end":134706,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134711,"byte_end":134748,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134753,"byte_end":134770,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134775,"byte_end":134782,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134787,"byte_end":134794,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135464,"byte_end":135479,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134930,"byte_end":135005,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135010,"byte_end":135025,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135030,"byte_end":135033,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135038,"byte_end":135100,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135105,"byte_end":135108,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135113,"byte_end":135127,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135132,"byte_end":135135,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135140,"byte_end":135147,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135152,"byte_end":135177,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135182,"byte_end":135185,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135190,"byte_end":135211,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135216,"byte_end":135257,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135262,"byte_end":135291,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135296,"byte_end":135325,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135330,"byte_end":135369,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135374,"byte_end":135384,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135389,"byte_end":135406,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135411,"byte_end":135418,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135423,"byte_end":135430,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135435,"byte_end":135452,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136130,"byte_end":136144,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135640,"byte_end":135691,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135696,"byte_end":135699,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135704,"byte_end":135766,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135771,"byte_end":135774,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135779,"byte_end":135793,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135798,"byte_end":135801,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135806,"byte_end":135813,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135818,"byte_end":135843,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135848,"byte_end":135851,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135856,"byte_end":135877,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135882,"byte_end":135923,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135928,"byte_end":135957,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135962,"byte_end":135990,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135995,"byte_end":136035,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136040,"byte_end":136050,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136055,"byte_end":136072,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136077,"byte_end":136084,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136089,"byte_end":136096,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136101,"byte_end":136118,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136690,"byte_end":136695,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136305,"byte_end":136342,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136347,"byte_end":136350,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136355,"byte_end":136418,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136423,"byte_end":136426,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136431,"byte_end":136445,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136450,"byte_end":136453,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136458,"byte_end":136465,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136470,"byte_end":136502,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136507,"byte_end":136510,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136515,"byte_end":136564,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136569,"byte_end":136572,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136577,"byte_end":136600,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136605,"byte_end":136654,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136659,"byte_end":136666,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136671,"byte_end":136678,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4761},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":138320,"byte_end":138329,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4763},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":138840,"byte_end":138851,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4765},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":139464,"byte_end":139479,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"pub fn basic_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4771},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":141215,"byte_end":141233,"line_start":458,"line_end":458,"column_start":16,"column_end":34},"name":"threaded_scheduler","qualname":"<Builder>::threaded_scheduler","value":"pub fn threaded_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a multi-threaded scheduler for executing tasks.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4830},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150461,"byte_end":150467,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150192,"byte_end":150218,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150219,"byte_end":150222,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150223,"byte_end":150311,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150312,"byte_end":150362,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150363,"byte_end":150366,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150367,"byte_end":150425,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152004,"byte_end":152009,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150831,"byte_end":150906,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150911,"byte_end":150989,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150994,"byte_end":151062,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151067,"byte_end":151070,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151075,"byte_end":151133,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151138,"byte_end":151141,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151146,"byte_end":151186,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151191,"byte_end":151238,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151243,"byte_end":151300,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151305,"byte_end":151342,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151347,"byte_end":151350,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151355,"byte_end":151368,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151373,"byte_end":151376,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151381,"byte_end":151388,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151393,"byte_end":151425,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151430,"byte_end":151433,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151438,"byte_end":151480,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151485,"byte_end":151551,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151556,"byte_end":151589,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151594,"byte_end":151626,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151631,"byte_end":151642,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151647,"byte_end":151652,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151657,"byte_end":151660,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151665,"byte_end":151680,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151685,"byte_end":151726,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151731,"byte_end":151772,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151777,"byte_end":151780,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151785,"byte_end":151828,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151833,"byte_end":151836,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151841,"byte_end":151916,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151921,"byte_end":151970,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151975,"byte_end":151980,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151985,"byte_end":151992,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153479,"byte_end":153486,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152127,"byte_end":152191,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152196,"byte_end":152199,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152204,"byte_end":152215,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152220,"byte_end":152223,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152228,"byte_end":152322,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152327,"byte_end":152419,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152424,"byte_end":152500,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152505,"byte_end":152508,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152513,"byte_end":152527,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152532,"byte_end":152535,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152540,"byte_end":152622,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152627,"byte_end":152673,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152678,"byte_end":152681,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152686,"byte_end":152693,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152698,"byte_end":152720,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152725,"byte_end":152759,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152764,"byte_end":152780,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152785,"byte_end":152824,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152829,"byte_end":152851,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152856,"byte_end":152887,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152892,"byte_end":152895,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152900,"byte_end":152941,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152946,"byte_end":152981,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152986,"byte_end":153010,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153015,"byte_end":153071,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153076,"byte_end":153083,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153088,"byte_end":153091,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153096,"byte_end":153114,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153119,"byte_end":153146,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153151,"byte_end":153236,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153241,"byte_end":153285,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153290,"byte_end":153335,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153340,"byte_end":153383,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153388,"byte_end":153395,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153400,"byte_end":153429,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153434,"byte_end":153443,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153448,"byte_end":153455,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153460,"byte_end":153467,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153784,"byte_end":153795,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153591,"byte_end":153651,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153656,"byte_end":153659,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153664,"byte_end":153715,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153720,"byte_end":153723,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153728,"byte_end":153772,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4841},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":155320,"byte_end":155325,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4843},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":159444,"byte_end":159452,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4847},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":162841,"byte_end":162855,"line_start":344,"line_end":344,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163244,"byte_end":163259,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163164,"byte_end":163232,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114701,"byte_end":114708,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":5261},{"krate":0,"index":5262},{"krate":0,"index":5263}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113684,"byte_end":113706,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113707,"byte_end":113710,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113711,"byte_end":113788,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113789,"byte_end":113840,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113841,"byte_end":113844,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113845,"byte_end":113925,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113926,"byte_end":114011,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114012,"byte_end":114015,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114016,"byte_end":114075,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114076,"byte_end":114079,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114080,"byte_end":114094,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114095,"byte_end":114098,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114099,"byte_end":114178,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114179,"byte_end":114238,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114239,"byte_end":114242,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114243,"byte_end":114281,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114282,"byte_end":114333,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114334,"byte_end":114357,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114358,"byte_end":114361,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114362,"byte_end":114434,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114435,"byte_end":114508,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114509,"byte_end":114532,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114533,"byte_end":114536,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114537,"byte_end":114561,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114562,"byte_end":114583,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114584,"byte_end":114613,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114614,"byte_end":114645,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114646,"byte_end":114672,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116929,"byte_end":116932,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115522,"byte_end":115590,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115595,"byte_end":115598,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115603,"byte_end":115669,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115674,"byte_end":115747,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115752,"byte_end":115823,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115828,"byte_end":115903,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115908,"byte_end":115946,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115951,"byte_end":115954,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115959,"byte_end":116019,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116024,"byte_end":116098,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116103,"byte_end":116106,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116111,"byte_end":116187,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116192,"byte_end":116268,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116273,"byte_end":116339,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116344,"byte_end":116347,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116352,"byte_end":116411,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116416,"byte_end":116419,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116424,"byte_end":116438,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116443,"byte_end":116446,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116451,"byte_end":116514,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116519,"byte_end":116522,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116527,"byte_end":116534,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116539,"byte_end":116571,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116576,"byte_end":116579,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116584,"byte_end":116611,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116616,"byte_end":116634,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116639,"byte_end":116642,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116647,"byte_end":116672,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116677,"byte_end":116684,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116689,"byte_end":116692,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116697,"byte_end":116718,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116723,"byte_end":116752,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116757,"byte_end":116812,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116817,"byte_end":116866,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116871,"byte_end":116917,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118522,"byte_end":118527,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117342,"byte_end":117384,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117389,"byte_end":117392,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117397,"byte_end":117468,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117473,"byte_end":117548,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117553,"byte_end":117576,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117581,"byte_end":117584,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117589,"byte_end":117648,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117653,"byte_end":117656,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117661,"byte_end":117682,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117687,"byte_end":117690,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117695,"byte_end":117709,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117714,"byte_end":117717,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117722,"byte_end":117729,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117734,"byte_end":117766,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117771,"byte_end":117774,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117779,"byte_end":117795,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117800,"byte_end":117825,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117830,"byte_end":117867,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117872,"byte_end":117875,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117880,"byte_end":117918,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117923,"byte_end":117943,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117948,"byte_end":117999,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118004,"byte_end":118011,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118016,"byte_end":118023,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118028,"byte_end":118035,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118040,"byte_end":118043,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118048,"byte_end":118060,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118065,"byte_end":118068,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118073,"byte_end":118146,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118151,"byte_end":118216,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118221,"byte_end":118282,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118287,"byte_end":118314,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118319,"byte_end":118322,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118327,"byte_end":118358,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118363,"byte_end":118421,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118426,"byte_end":118478,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118483,"byte_end":118510,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120148,"byte_end":120156,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118929,"byte_end":119003,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119008,"byte_end":119024,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119029,"byte_end":119032,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119037,"byte_end":119104,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119109,"byte_end":119182,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119187,"byte_end":119252,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119257,"byte_end":119260,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119265,"byte_end":119341,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119346,"byte_end":119412,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119417,"byte_end":119489,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119494,"byte_end":119517,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119522,"byte_end":119525,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119530,"byte_end":119593,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119598,"byte_end":119601,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119606,"byte_end":119618,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119623,"byte_end":119626,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119631,"byte_end":119709,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119714,"byte_end":119749,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119754,"byte_end":119757,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119762,"byte_end":119776,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119781,"byte_end":119784,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119789,"byte_end":119802,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119807,"byte_end":119839,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119844,"byte_end":119847,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119852,"byte_end":119877,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119882,"byte_end":119923,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119928,"byte_end":119931,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119936,"byte_end":120007,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120012,"byte_end":120035,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120040,"byte_end":120066,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120071,"byte_end":120078,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120083,"byte_end":120090,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120095,"byte_end":120098,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120103,"byte_end":120136,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121678,"byte_end":121683,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120562,"byte_end":120637,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120642,"byte_end":120720,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120725,"byte_end":120793,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120798,"byte_end":120801,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120806,"byte_end":120863,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120868,"byte_end":120871,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120876,"byte_end":120916,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120921,"byte_end":120968,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120973,"byte_end":121028,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121033,"byte_end":121070,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121075,"byte_end":121078,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121083,"byte_end":121096,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121101,"byte_end":121104,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121109,"byte_end":121116,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121121,"byte_end":121153,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121158,"byte_end":121161,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121166,"byte_end":121208,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121213,"byte_end":121275,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121280,"byte_end":121313,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121318,"byte_end":121350,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121355,"byte_end":121366,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121371,"byte_end":121376,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121381,"byte_end":121384,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121389,"byte_end":121404,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121409,"byte_end":121450,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121455,"byte_end":121458,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121463,"byte_end":121506,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121511,"byte_end":121514,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121519,"byte_end":121594,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121599,"byte_end":121644,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121649,"byte_end":121654,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121659,"byte_end":121666,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122270,"byte_end":122276,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121790,"byte_end":121835,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121840,"byte_end":121843,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121848,"byte_end":121932,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121937,"byte_end":121997,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122002,"byte_end":122005,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122010,"byte_end":122024,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122029,"byte_end":122032,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122037,"byte_end":122044,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122049,"byte_end":122081,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122086,"byte_end":122089,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122094,"byte_end":122121,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122126,"byte_end":122144,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122149,"byte_end":122152,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122157,"byte_end":122186,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122191,"byte_end":122194,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122199,"byte_end":122246,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122251,"byte_end":122258,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123684,"byte_end":123700,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122329,"byte_end":122401,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122406,"byte_end":122427,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122432,"byte_end":122435,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122440,"byte_end":122515,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122520,"byte_end":122593,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122598,"byte_end":122675,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122680,"byte_end":122751,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122756,"byte_end":122759,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122764,"byte_end":122838,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122843,"byte_end":122917,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122922,"byte_end":122997,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123002,"byte_end":123078,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123083,"byte_end":123128,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123133,"byte_end":123136,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123141,"byte_end":123155,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123160,"byte_end":123163,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123168,"byte_end":123175,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123180,"byte_end":123212,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123217,"byte_end":123237,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123242,"byte_end":123245,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123250,"byte_end":123270,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123275,"byte_end":123303,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123308,"byte_end":123311,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123316,"byte_end":123331,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123336,"byte_end":123385,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123390,"byte_end":123393,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123398,"byte_end":123434,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123439,"byte_end":123480,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123485,"byte_end":123543,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123548,"byte_end":123562,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123567,"byte_end":123577,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123582,"byte_end":123585,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123590,"byte_end":123650,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123655,"byte_end":123660,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123665,"byte_end":123672,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124980,"byte_end":124999,"line_start":578,"line_end":578,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123862,"byte_end":123938,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123943,"byte_end":123946,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123951,"byte_end":124032,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124037,"byte_end":124120,"line_start":555,"line_end":555,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124125,"byte_end":124211,"line_start":556,"line_end":556,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124216,"byte_end":124301,"line_start":557,"line_end":557,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124306,"byte_end":124309,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124314,"byte_end":124400,"line_start":559,"line_end":559,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124405,"byte_end":124495,"line_start":560,"line_end":560,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124500,"byte_end":124511,"line_start":561,"line_end":561,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124516,"byte_end":124519,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124524,"byte_end":124609,"line_start":563,"line_end":563,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124614,"byte_end":124617,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124622,"byte_end":124629,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124634,"byte_end":124666,"line_start":566,"line_end":566,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124671,"byte_end":124674,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124679,"byte_end":124694,"line_start":568,"line_end":568,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124699,"byte_end":124748,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124753,"byte_end":124756,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124761,"byte_end":124797,"line_start":571,"line_end":571,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124802,"byte_end":124857,"line_start":572,"line_end":572,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124862,"byte_end":124879,"line_start":573,"line_end":573,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124884,"byte_end":124931,"line_start":574,"line_end":574,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124936,"byte_end":124946,"line_start":575,"line_end":575,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124951,"byte_end":124956,"line_start":576,"line_end":576,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124961,"byte_end":124968,"line_start":577,"line_end":577,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5315},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","parent":null,"children":[{"krate":0,"index":5316},{"krate":0,"index":5323},{"krate":0,"index":5324},{"krate":0,"index":5371},{"krate":0,"index":5375}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":20815,"byte_end":20841,"line_start":210,"line_end":210,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":20916,"byte_end":20933,"line_start":212,"line_end":212,"column_start":13,"column_end":30}},{"value":"/ Asynchronous signal handling for Tokio","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793318,"byte_end":10793360,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793361,"byte_end":10793364,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793365,"byte_end":10793442,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793443,"byte_end":10793521,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793522,"byte_end":10793602,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ to see if it's suitable.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793603,"byte_end":10793631,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793632,"byte_end":10793635,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793636,"byte_end":10793711,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ specific structures, as well.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793712,"byte_end":10793745,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793746,"byte_end":10793749,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793750,"byte_end":10793764,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793765,"byte_end":10793768,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Print on \"ctrl-c\" notification.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793769,"byte_end":10793804,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793805,"byte_end":10793808,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793809,"byte_end":10793827,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793828,"byte_end":10793850,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793851,"byte_end":10793854,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793855,"byte_end":10793873,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793874,"byte_end":10793937,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/     signal::ctrl_c().await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793938,"byte_end":10793970,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     println!(\"ctrl-c received!\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10793971,"byte_end":10794008,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794009,"byte_end":10794023,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794024,"byte_end":10794029,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794030,"byte_end":10794037,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794038,"byte_end":10794041,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP on Unix","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794042,"byte_end":10794069,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794070,"byte_end":10794073,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794074,"byte_end":10794092,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794093,"byte_end":10794113,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794114,"byte_end":10794164,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794165,"byte_end":10794168,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794169,"byte_end":10794187,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794188,"byte_end":10794251,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794252,"byte_end":10794300,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794301,"byte_end":10794356,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794357,"byte_end":10794360,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794361,"byte_end":10794411,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794412,"byte_end":10794426,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794427,"byte_end":10794459,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794460,"byte_end":10794499,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794500,"byte_end":10794509,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794510,"byte_end":10794515,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794516,"byte_end":10794523,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794524,"byte_end":10794531,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5320},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796607,"byte_end":10796613,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"pub async fn ctrl_c() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10794905,"byte_end":10794971,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10794972,"byte_end":10794975,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10794976,"byte_end":10795053,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795054,"byte_end":10795132,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795133,"byte_end":10795182,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795183,"byte_end":10795186,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795187,"byte_end":10795263,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795264,"byte_end":10795342,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795343,"byte_end":10795381,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795382,"byte_end":10795385,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795386,"byte_end":10795399,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795400,"byte_end":10795403,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795404,"byte_end":10795486,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795487,"byte_end":10795567,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795568,"byte_end":10795649,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795650,"byte_end":10795675,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795676,"byte_end":10795679,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795680,"byte_end":10795753,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795754,"byte_end":10795826,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795827,"byte_end":10795905,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795906,"byte_end":10795983,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10795984,"byte_end":10796060,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796061,"byte_end":10796140,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796141,"byte_end":10796165,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796166,"byte_end":10796169,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796170,"byte_end":10796248,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796249,"byte_end":10796309,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796310,"byte_end":10796313,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796314,"byte_end":10796328,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796329,"byte_end":10796332,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796333,"byte_end":10796351,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796352,"byte_end":10796374,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796375,"byte_end":10796378,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796379,"byte_end":10796397,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796398,"byte_end":10796419,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796420,"byte_end":10796459,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796460,"byte_end":10796463,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796464,"byte_end":10796532,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796533,"byte_end":10796536,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796537,"byte_end":10796579,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796580,"byte_end":10796585,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":10796586,"byte_end":10796593,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5375},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::signal::windows","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","parent":null,"children":[{"krate":0,"index":5376},{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":5380},{"krate":0,"index":5381},{"krate":0,"index":5382},{"krate":0,"index":5383},{"krate":0,"index":5384},{"krate":0,"index":5385},{"krate":0,"index":5386},{"krate":0,"index":5387},{"krate":0,"index":5388},{"krate":0,"index":5389},{"krate":0,"index":5390},{"krate":0,"index":5391},{"krate":0,"index":5392},{"krate":0,"index":5393},{"krate":0,"index":5438},{"krate":0,"index":5441},{"krate":0,"index":5394},{"krate":0,"index":5396},{"krate":0,"index":5443},{"krate":0,"index":5444},{"krate":0,"index":5401},{"krate":0,"index":5446},{"krate":0,"index":5448},{"krate":0,"index":5403},{"krate":0,"index":5404},{"krate":0,"index":5411},{"krate":0,"index":5415},{"krate":0,"index":5450},{"krate":0,"index":5452},{"krate":0,"index":5416},{"krate":0,"index":5454},{"krate":0,"index":5423}],"decl_id":null,"docs":" Windows-specific types for signal handling.","sig":null,"attributes":[{"value":"/ Windows-specific types for signal handling.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10822683,"byte_end":10822730,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10822731,"byte_end":10822734,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only defined on Windows and contains the primary `Event` type","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10822735,"byte_end":10822815,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ for receiving notifications of events. These events are listened for via the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10822816,"byte_end":10822896,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ `SetConsoleCtrlHandler` function which receives events of the type","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10822897,"byte_end":10822967,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ `CTRL_C_EVENT` and `CTRL_BREAK_EVENT`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10822968,"byte_end":10823009,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10823011,"byte_end":10823027,"line_start":8,"line_end":8,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":5450},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10826976,"byte_end":10826985,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"CtrlBreak","qualname":"::signal::windows::CtrlBreak","value":"CtrlBreak {  }","parent":null,"children":[{"krate":0,"index":5451}],"decl_id":null,"docs":" Represents a stream which receives \"ctrl-break\" notifications sent to the process\n via `SetConsoleCtrlHandler`.","sig":null,"attributes":[{"value":"/ Represents a stream which receives \"ctrl-break\" notifications sent to the process","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10826458,"byte_end":10826543,"line_start":138,"line_end":138,"column_start":1,"column_end":86}},{"value":"/ via `SetConsoleCtrlHandler`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10826544,"byte_end":10826576,"line_start":139,"line_end":139,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10826577,"byte_end":10826580,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ A notification to this process notifies *all* streams listening for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10826581,"byte_end":10826652,"line_start":141,"line_end":141,"column_start":1,"column_end":72}},{"value":"/ this event. Moreover, the notifications **are coalesced** if they aren't processed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10826653,"byte_end":10826739,"line_start":142,"line_end":142,"column_start":1,"column_end":87}},{"value":"/ quickly enough. This means that if two notifications are received back-to-back,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10826740,"byte_end":10826823,"line_start":143,"line_end":143,"column_start":1,"column_end":84}},{"value":"/ then the stream may only receive one item about the two notifications.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10826824,"byte_end":10826898,"line_start":144,"line_end":144,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10826899,"byte_end":10826947,"line_start":145,"line_end":145,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5417},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827698,"byte_end":10827702,"line_start":173,"line_end":173,"column_start":18,"column_end":22},"name":"recv","qualname":"<CtrlBreak>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827030,"byte_end":10827078,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827083,"byte_end":10827086,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827091,"byte_end":10827163,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827168,"byte_end":10827171,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827176,"byte_end":10827190,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827195,"byte_end":10827198,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827203,"byte_end":10827221,"line_start":158,"line_end":158,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::windows::ctrl_break;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827226,"byte_end":10827269,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827274,"byte_end":10827277,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827282,"byte_end":10827300,"line_start":161,"line_end":161,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827305,"byte_end":10827368,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of CTRL-BREAK events.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827373,"byte_end":10827424,"line_start":163,"line_end":163,"column_start":5,"column_end":56}},{"value":"/     let mut stream = ctrl_break()?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827429,"byte_end":10827468,"line_start":164,"line_end":164,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827473,"byte_end":10827476,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a CTRL-BREAK event is received","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827481,"byte_end":10827537,"line_start":166,"line_end":166,"column_start":5,"column_end":61}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827542,"byte_end":10827556,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827561,"byte_end":10827593,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal CTRL-BREAK\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827598,"byte_end":10827644,"line_start":169,"line_end":169,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827649,"byte_end":10827658,"line_start":170,"line_end":170,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827663,"byte_end":10827668,"line_start":171,"line_end":171,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827673,"byte_end":10827680,"line_start":172,"line_end":172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5422},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828668,"byte_end":10828677,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<CtrlBreak>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827824,"byte_end":10827894,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827899,"byte_end":10827919,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827924,"byte_end":10827927,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827932,"byte_end":10828004,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828009,"byte_end":10828012,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828017,"byte_end":10828031,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828036,"byte_end":10828039,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828044,"byte_end":10828090,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828095,"byte_end":10828098,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828103,"byte_end":10828121,"line_start":187,"line_end":187,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828126,"byte_end":10828148,"line_start":188,"line_end":188,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828153,"byte_end":10828181,"line_start":189,"line_end":189,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828186,"byte_end":10828221,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::windows::CtrlBreak;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828226,"byte_end":10828268,"line_start":191,"line_end":191,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828273,"byte_end":10828276,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828281,"byte_end":10828302,"line_start":193,"line_end":193,"column_start":5,"column_end":26}},{"value":"/     ctrl_break: CtrlBreak,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828307,"byte_end":10828337,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828342,"byte_end":10828347,"line_start":195,"line_end":195,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828352,"byte_end":10828355,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828360,"byte_end":10828390,"line_start":197,"line_end":197,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828395,"byte_end":10828428,"line_start":198,"line_end":198,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828433,"byte_end":10828436,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828441,"byte_end":10828528,"line_start":200,"line_end":200,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828533,"byte_end":10828574,"line_start":201,"line_end":201,"column_start":5,"column_end":46}},{"value":"/         self.ctrl_break.poll_recv(cx)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828579,"byte_end":10828620,"line_start":202,"line_end":202,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828625,"byte_end":10828634,"line_start":203,"line_end":203,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828639,"byte_end":10828644,"line_start":204,"line_end":204,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828649,"byte_end":10828656,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5423},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829559,"byte_end":10829569,"line_start":241,"line_end":241,"column_start":8,"column_end":18},"name":"ctrl_break","qualname":"::signal::windows::ctrl_break","value":"pub fn ctrl_break() -> io::Result<CtrlBreak>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which receives \"ctrl-break\" notifications sent to the\n process.","sig":null,"attributes":[{"value":"/ Creates a new stream which receives \"ctrl-break\" notifications sent to the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829015,"byte_end":10829093,"line_start":221,"line_end":221,"column_start":1,"column_end":79}},{"value":"/ process.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829094,"byte_end":10829106,"line_start":222,"line_end":222,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829107,"byte_end":10829110,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829111,"byte_end":10829125,"line_start":224,"line_end":224,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829126,"byte_end":10829129,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829130,"byte_end":10829148,"line_start":226,"line_end":226,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::windows::ctrl_break;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829149,"byte_end":10829192,"line_start":227,"line_end":227,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829193,"byte_end":10829196,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829197,"byte_end":10829215,"line_start":229,"line_end":229,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829216,"byte_end":10829279,"line_start":230,"line_end":230,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of CTRL-BREAK events.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829280,"byte_end":10829331,"line_start":231,"line_end":231,"column_start":1,"column_end":52}},{"value":"/     let mut stream = ctrl_break()?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829332,"byte_end":10829371,"line_start":232,"line_end":232,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829372,"byte_end":10829375,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a CTRL-BREAK event is received","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829376,"byte_end":10829432,"line_start":234,"line_end":234,"column_start":1,"column_end":57}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829433,"byte_end":10829447,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829448,"byte_end":10829480,"line_start":236,"line_end":236,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal CTRL-BREAK\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829481,"byte_end":10829527,"line_start":237,"line_end":237,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829528,"byte_end":10829537,"line_start":238,"line_end":238,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829538,"byte_end":10829543,"line_start":239,"line_end":239,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10829544,"byte_end":10829551,"line_start":240,"line_end":240,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5457},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":5458},{"krate":0,"index":5478},{"krate":0,"index":5479},{"krate":0,"index":5499},{"krate":0,"index":5500},{"krate":0,"index":5520},{"krate":0,"index":5521},{"krate":0,"index":5612},{"krate":0,"index":5613},{"krate":0,"index":5614},{"krate":0,"index":5634},{"krate":0,"index":5635},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5659},{"krate":0,"index":5660},{"krate":0,"index":5683},{"krate":0,"index":5684},{"krate":0,"index":5703},{"krate":0,"index":5704},{"krate":0,"index":5719},{"krate":0,"index":5720},{"krate":0,"index":5735},{"krate":0,"index":5736},{"krate":0,"index":5737},{"krate":0,"index":5738},{"krate":0,"index":5763},{"krate":0,"index":5764},{"krate":0,"index":5787},{"krate":0,"index":5788},{"krate":0,"index":5805},{"krate":0,"index":5806},{"krate":0,"index":5825},{"krate":0,"index":5826},{"krate":0,"index":5827},{"krate":0,"index":5828},{"krate":0,"index":5848},{"krate":0,"index":5849},{"krate":0,"index":5850},{"krate":0,"index":5851},{"krate":0,"index":5893},{"krate":0,"index":5894},{"krate":0,"index":5914},{"krate":0,"index":5915},{"krate":0,"index":5937},{"krate":0,"index":5938},{"krate":0,"index":5959},{"krate":0,"index":5960},{"krate":0,"index":5981},{"krate":0,"index":5982},{"krate":0,"index":6006},{"krate":0,"index":6121},{"krate":0,"index":6144},{"krate":0,"index":6145},{"krate":0,"index":6007},{"krate":0,"index":6008},{"krate":0,"index":6042},{"krate":0,"index":6044}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21047,"byte_end":21073,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"/ Stream utilities for Tokio.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831090,"byte_end":10831121,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831122,"byte_end":10831125,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831126,"byte_end":10831271,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831272,"byte_end":10831275,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides helpers to work with them.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10831276,"byte_end":10831327,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6045},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":10857008,"byte_end":10857017,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":6049},{"krate":0,"index":6050}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":10856854,"byte_end":10856911,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":10856929,"byte_end":10856996,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6056},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":10858171,"byte_end":10858180,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":6060},{"krate":0,"index":6061}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":10858017,"byte_end":10858074,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":10858092,"byte_end":10858159,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9813},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\chain.rs","byte_start":10859300,"byte_end":10859305,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9816},{"krate":0,"index":9817}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9792},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10860538,"byte_end":10860545,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":9795},{"krate":0,"index":9796}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":5535},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10861110,"byte_end":10861120,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10860697,"byte_end":10860750,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10860751,"byte_end":10860754,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10860755,"byte_end":10860820,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10860821,"byte_end":10860877,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10860878,"byte_end":10860881,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10860882,"byte_end":10860900,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10860901,"byte_end":10860904,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10860905,"byte_end":10860984,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10860985,"byte_end":10861060,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10861061,"byte_end":10861099,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":5606},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10866021,"byte_end":10866035,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5608},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10866115,"byte_end":10866125,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":5606},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10866049,"byte_end":10866101,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5609},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10866177,"byte_end":10866187,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"pub fn initialize(usize, Option<usize>) -> Self::Collection","parent":{"krate":0,"index":5606},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10866136,"byte_end":10866165,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5610},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10866404,"byte_end":10866410,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"pub fn extend(&mut Self::Collection, T) -> bool","parent":{"krate":0,"index":5606},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10866254,"byte_end":10866302,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10866311,"byte_end":10866314,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10866323,"byte_end":10866392,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":5611},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10866526,"byte_end":10866534,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"pub fn finalize(&mut Self::Collection) -> Self","parent":{"krate":0,"index":5606},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10866473,"byte_end":10866514,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6067},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10866827,"byte_end":10866832,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`](fn@empty) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`](fn@empty) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10866701,"byte_end":10866749,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10866767,"byte_end":10866815,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5627},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867422,"byte_end":10867427,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"pub const fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10866957,"byte_end":10866998,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10866999,"byte_end":10867002,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867003,"byte_end":10867071,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867072,"byte_end":10867148,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867149,"byte_end":10867159,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867160,"byte_end":10867163,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867164,"byte_end":10867178,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867179,"byte_end":10867182,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867183,"byte_end":10867199,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867200,"byte_end":10867203,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867204,"byte_end":10867211,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867212,"byte_end":10867253,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867254,"byte_end":10867257,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867258,"byte_end":10867276,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867277,"byte_end":10867298,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867299,"byte_end":10867345,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867346,"byte_end":10867349,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867350,"byte_end":10867394,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867395,"byte_end":10867400,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867401,"byte_end":10867408,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9719},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":10868010,"byte_end":10868016,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":9722},{"krate":0,"index":9723}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9674},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":10869448,"byte_end":10869457,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":9677},{"krate":0,"index":9678}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9646},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fold.rs","byte_start":10870874,"byte_end":10870884,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":9650},{"krate":0,"index":9651},{"krate":0,"index":9652}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9598},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fuse.rs","byte_start":10872040,"byte_end":10872044,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":9600}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6074},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873176,"byte_end":10873180,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6076}],"decl_id":null,"docs":" Stream for the [`iter`](fn@iter) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`](fn@iter) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873052,"byte_end":10873098,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873116,"byte_end":10873164,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5728},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873754,"byte_end":10873758,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873232,"byte_end":10873296,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873297,"byte_end":10873325,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873326,"byte_end":10873329,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873330,"byte_end":10873403,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873404,"byte_end":10873459,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873460,"byte_end":10873463,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873464,"byte_end":10873471,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873472,"byte_end":10873494,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873495,"byte_end":10873536,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873537,"byte_end":10873540,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873541,"byte_end":10873589,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873590,"byte_end":10873593,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873594,"byte_end":10873640,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873641,"byte_end":10873687,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873688,"byte_end":10873730,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873731,"byte_end":10873738,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873739,"byte_end":10873746,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9531},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":10874538,"byte_end":10874541,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":9534},{"krate":0,"index":9535}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9482},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\merge.rs","byte_start":10875611,"byte_end":10875616,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":9485},{"krate":0,"index":9486},{"krate":0,"index":9487}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6080},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":10877491,"byte_end":10877495,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":6083}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":10877335,"byte_end":10877394,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":10877412,"byte_end":10877479,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6088},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878191,"byte_end":10878195,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":6090}],"decl_id":null,"docs":" Stream for the [`once`](fn@once) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`](fn@once) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878067,"byte_end":10878113,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878131,"byte_end":10878179,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5818},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878767,"byte_end":10878771,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878271,"byte_end":10878327,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878328,"byte_end":10878331,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878332,"byte_end":10878411,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878412,"byte_end":10878415,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878416,"byte_end":10878430,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878431,"byte_end":10878434,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878435,"byte_end":10878442,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878443,"byte_end":10878484,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878485,"byte_end":10878488,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878489,"byte_end":10878507,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878508,"byte_end":10878529,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878530,"byte_end":10878568,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878569,"byte_end":10878607,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878608,"byte_end":10878611,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878612,"byte_end":10878658,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878659,"byte_end":10878662,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878663,"byte_end":10878701,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878702,"byte_end":10878745,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878746,"byte_end":10878751,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878752,"byte_end":10878759,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6094},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879394,"byte_end":10879401,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`](fn@pending) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`](fn@pending) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879264,"byte_end":10879316,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879334,"byte_end":10879382,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5841},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10880141,"byte_end":10880148,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"pub const fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879532,"byte_end":10879572,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879573,"byte_end":10879576,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879577,"byte_end":10879635,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879636,"byte_end":10879707,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879708,"byte_end":10879777,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879778,"byte_end":10879822,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879823,"byte_end":10879826,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879827,"byte_end":10879841,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879842,"byte_end":10879845,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879846,"byte_end":10879862,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879863,"byte_end":10879866,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879867,"byte_end":10879880,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879881,"byte_end":10879922,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879923,"byte_end":10879926,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879927,"byte_end":10879945,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879946,"byte_end":10879967,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879968,"byte_end":10880017,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10880018,"byte_end":10880021,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10880022,"byte_end":10880057,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10880058,"byte_end":10880085,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10880086,"byte_end":10880089,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10880090,"byte_end":10880113,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10880114,"byte_end":10880119,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10880120,"byte_end":10880127,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6101},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885797,"byte_end":10885806,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":6104}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10880565,"byte_end":10880641,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10880642,"byte_end":10880650,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10880651,"byte_end":10880654,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10880655,"byte_end":10880732,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10880733,"byte_end":10880809,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10880810,"byte_end":10880886,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10880887,"byte_end":10880921,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10880922,"byte_end":10880925,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10880926,"byte_end":10880946,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10880947,"byte_end":10880950,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10880951,"byte_end":10880994,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10880995,"byte_end":10881055,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881056,"byte_end":10881134,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881135,"byte_end":10881168,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881169,"byte_end":10881172,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881173,"byte_end":10881252,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881253,"byte_end":10881333,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881334,"byte_end":10881406,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881407,"byte_end":10881431,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881432,"byte_end":10881435,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881436,"byte_end":10881449,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881450,"byte_end":10881453,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881454,"byte_end":10881532,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881533,"byte_end":10881602,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881603,"byte_end":10881682,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881683,"byte_end":10881714,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881715,"byte_end":10881718,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881719,"byte_end":10881739,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881740,"byte_end":10881743,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881744,"byte_end":10881821,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881822,"byte_end":10881899,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881900,"byte_end":10881977,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10881978,"byte_end":10882052,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882053,"byte_end":10882131,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882132,"byte_end":10882209,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882210,"byte_end":10882231,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882232,"byte_end":10882235,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882236,"byte_end":10882293,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882294,"byte_end":10882325,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882326,"byte_end":10882349,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882350,"byte_end":10882388,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882389,"byte_end":10882392,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882393,"byte_end":10882407,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882408,"byte_end":10882411,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882412,"byte_end":10882485,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882486,"byte_end":10882489,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882490,"byte_end":10882497,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882498,"byte_end":10882544,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882545,"byte_end":10882571,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882572,"byte_end":10882575,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882576,"byte_end":10882594,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882595,"byte_end":10882616,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882617,"byte_end":10882664,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882665,"byte_end":10882712,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882713,"byte_end":10882716,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882717,"byte_end":10882750,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882751,"byte_end":10882790,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882791,"byte_end":10882794,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882795,"byte_end":10882875,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882876,"byte_end":10882948,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882949,"byte_end":10882987,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10882988,"byte_end":10882999,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883000,"byte_end":10883003,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883004,"byte_end":10883037,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883038,"byte_end":10883077,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883078,"byte_end":10883116,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883117,"byte_end":10883128,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883129,"byte_end":10883132,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883133,"byte_end":10883172,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883173,"byte_end":10883176,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883177,"byte_end":10883207,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883208,"byte_end":10883239,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883240,"byte_end":10883271,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883272,"byte_end":10883275,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883276,"byte_end":10883297,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883298,"byte_end":10883321,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883322,"byte_end":10883377,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883378,"byte_end":10883381,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883382,"byte_end":10883411,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883412,"byte_end":10883447,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883448,"byte_end":10883468,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883469,"byte_end":10883504,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883505,"byte_end":10883518,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883519,"byte_end":10883522,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883523,"byte_end":10883589,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883590,"byte_end":10883618,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883619,"byte_end":10883628,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883629,"byte_end":10883634,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883635,"byte_end":10883642,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883643,"byte_end":10883646,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883647,"byte_end":10883725,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883726,"byte_end":10883802,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883803,"byte_end":10883843,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883844,"byte_end":10883847,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883848,"byte_end":10883925,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883926,"byte_end":10883963,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883964,"byte_end":10883967,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883968,"byte_end":10883981,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10883982,"byte_end":10884036,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884037,"byte_end":10884040,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884041,"byte_end":10884059,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884060,"byte_end":10884081,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884082,"byte_end":10884104,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884105,"byte_end":10884110,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884111,"byte_end":10884114,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884115,"byte_end":10884165,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884166,"byte_end":10884221,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884222,"byte_end":10884252,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884253,"byte_end":10884258,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884259,"byte_end":10884262,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884263,"byte_end":10884339,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884340,"byte_end":10884406,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884407,"byte_end":10884451,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884452,"byte_end":10884482,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884483,"byte_end":10884488,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884489,"byte_end":10884492,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884493,"byte_end":10884511,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884512,"byte_end":10884533,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884534,"byte_end":10884578,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884579,"byte_end":10884582,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884583,"byte_end":10884633,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884634,"byte_end":10884664,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884665,"byte_end":10884691,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884692,"byte_end":10884695,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884696,"byte_end":10884710,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884711,"byte_end":10884739,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884740,"byte_end":10884784,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884785,"byte_end":10884816,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884817,"byte_end":10884865,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884866,"byte_end":10884942,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884943,"byte_end":10884984,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10884985,"byte_end":10885036,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885037,"byte_end":10885093,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885094,"byte_end":10885119,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885120,"byte_end":10885169,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885170,"byte_end":10885221,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885222,"byte_end":10885247,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885248,"byte_end":10885269,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885270,"byte_end":10885287,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885288,"byte_end":10885344,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885345,"byte_end":10885425,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885426,"byte_end":10885468,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885469,"byte_end":10885519,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885520,"byte_end":10885537,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885538,"byte_end":10885613,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885614,"byte_end":10885690,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885691,"byte_end":10885721,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885722,"byte_end":10885735,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885736,"byte_end":10885745,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885746,"byte_end":10885751,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885752,"byte_end":10885759,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5862},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886279,"byte_end":10886282,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"pub fn new() -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885911,"byte_end":10885944,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885949,"byte_end":10885952,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885957,"byte_end":10886031,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886036,"byte_end":10886085,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886090,"byte_end":10886093,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886098,"byte_end":10886112,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886117,"byte_end":10886120,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886125,"byte_end":10886132,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886137,"byte_end":10886181,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886186,"byte_end":10886189,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886194,"byte_end":10886255,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886260,"byte_end":10886267,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5863},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886787,"byte_end":10886800,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886355,"byte_end":10886416,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886421,"byte_end":10886424,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886429,"byte_end":10886505,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886510,"byte_end":10886581,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886586,"byte_end":10886589,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886594,"byte_end":10886608,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886613,"byte_end":10886616,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886621,"byte_end":10886628,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886633,"byte_end":10886677,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886682,"byte_end":10886685,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886690,"byte_end":10886763,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886768,"byte_end":10886775,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5864},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887418,"byte_end":10887422,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"pub fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886931,"byte_end":10886992,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10886997,"byte_end":10887000,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887005,"byte_end":10887044,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887049,"byte_end":10887052,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887057,"byte_end":10887071,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887076,"byte_end":10887079,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887084,"byte_end":10887091,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887096,"byte_end":10887140,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887145,"byte_end":10887148,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887153,"byte_end":10887188,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887193,"byte_end":10887196,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887201,"byte_end":10887239,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887244,"byte_end":10887275,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887280,"byte_end":10887311,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887316,"byte_end":10887319,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887324,"byte_end":10887351,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887356,"byte_end":10887384,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887389,"byte_end":10887394,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887399,"byte_end":10887406,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5867},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888006,"byte_end":10888012,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887515,"byte_end":10887570,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887575,"byte_end":10887578,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887583,"byte_end":10887622,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887627,"byte_end":10887630,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887635,"byte_end":10887649,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887654,"byte_end":10887657,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887662,"byte_end":10887669,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887674,"byte_end":10887718,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887723,"byte_end":10887726,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887731,"byte_end":10887766,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887771,"byte_end":10887774,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887779,"byte_end":10887817,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887822,"byte_end":10887853,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887858,"byte_end":10887889,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887894,"byte_end":10887897,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887902,"byte_end":10887934,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887939,"byte_end":10887972,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887977,"byte_end":10887982,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10887987,"byte_end":10887994,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5870},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888612,"byte_end":10888622,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"pub fn values_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888105,"byte_end":10888168,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888173,"byte_end":10888176,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888181,"byte_end":10888224,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888229,"byte_end":10888232,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888237,"byte_end":10888251,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888256,"byte_end":10888259,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888264,"byte_end":10888271,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888276,"byte_end":10888320,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888325,"byte_end":10888328,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888333,"byte_end":10888368,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888373,"byte_end":10888376,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888381,"byte_end":10888419,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888424,"byte_end":10888455,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888460,"byte_end":10888491,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888496,"byte_end":10888499,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888504,"byte_end":10888540,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888545,"byte_end":10888578,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888583,"byte_end":10888588,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888593,"byte_end":10888600,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5873},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889200,"byte_end":10889208,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888727,"byte_end":10888799,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888804,"byte_end":10888807,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888812,"byte_end":10888883,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888888,"byte_end":10888954,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888959,"byte_end":10888962,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888967,"byte_end":10888981,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888986,"byte_end":10888989,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10888994,"byte_end":10889001,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889006,"byte_end":10889050,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889055,"byte_end":10889058,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889063,"byte_end":10889136,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889141,"byte_end":10889176,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889181,"byte_end":10889188,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5874},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889584,"byte_end":10889587,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889270,"byte_end":10889315,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889320,"byte_end":10889323,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889328,"byte_end":10889342,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889347,"byte_end":10889350,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889355,"byte_end":10889362,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889367,"byte_end":10889411,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889416,"byte_end":10889419,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889424,"byte_end":10889457,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889462,"byte_end":10889489,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889494,"byte_end":10889528,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889533,"byte_end":10889560,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889565,"byte_end":10889572,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5875},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889938,"byte_end":10889946,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889644,"byte_end":10889695,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889700,"byte_end":10889703,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889708,"byte_end":10889722,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889727,"byte_end":10889730,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889735,"byte_end":10889742,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889747,"byte_end":10889781,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889786,"byte_end":10889789,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889794,"byte_end":10889825,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889830,"byte_end":10889856,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889861,"byte_end":10889882,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889887,"byte_end":10889914,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10889919,"byte_end":10889926,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5876},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890358,"byte_end":10890363,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890007,"byte_end":10890077,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890082,"byte_end":10890103,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890108,"byte_end":10890111,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890116,"byte_end":10890130,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890135,"byte_end":10890138,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890143,"byte_end":10890150,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890155,"byte_end":10890199,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890204,"byte_end":10890207,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890212,"byte_end":10890245,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890250,"byte_end":10890284,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890289,"byte_end":10890303,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890308,"byte_end":10890334,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890339,"byte_end":10890346,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5877},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891038,"byte_end":10891044,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V> where K: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890418,"byte_end":10890460,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890465,"byte_end":10890468,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890473,"byte_end":10890538,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890543,"byte_end":10890546,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890551,"byte_end":10890626,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890631,"byte_end":10890670,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890675,"byte_end":10890678,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890683,"byte_end":10890697,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890702,"byte_end":10890705,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890710,"byte_end":10890717,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890722,"byte_end":10890766,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890771,"byte_end":10890774,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890779,"byte_end":10890814,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890819,"byte_end":10890822,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890827,"byte_end":10890883,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890888,"byte_end":10890917,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890922,"byte_end":10890925,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890930,"byte_end":10890960,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10890965,"byte_end":10891014,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891019,"byte_end":10891026,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5878},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891775,"byte_end":10891781,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891223,"byte_end":10891324,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891329,"byte_end":10891332,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891337,"byte_end":10891411,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891416,"byte_end":10891480,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891485,"byte_end":10891488,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891493,"byte_end":10891507,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891512,"byte_end":10891515,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891520,"byte_end":10891527,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891532,"byte_end":10891576,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891581,"byte_end":10891584,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891589,"byte_end":10891624,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891629,"byte_end":10891665,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891670,"byte_end":10891708,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891713,"byte_end":10891751,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10891756,"byte_end":10891763,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5880},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892615,"byte_end":10892627,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892083,"byte_end":10892153,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892158,"byte_end":10892161,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892166,"byte_end":10892240,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892245,"byte_end":10892309,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892314,"byte_end":10892317,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892322,"byte_end":10892336,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892341,"byte_end":10892344,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892349,"byte_end":10892356,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892361,"byte_end":10892405,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892410,"byte_end":10892413,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892418,"byte_end":10892453,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892458,"byte_end":10892494,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892499,"byte_end":10892542,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892547,"byte_end":10892591,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892596,"byte_end":10892603,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9445},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":10895567,"byte_end":10895571,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":9447},{"krate":0,"index":9448}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9400},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":10897133,"byte_end":10897142,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":9403},{"krate":0,"index":9404}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6113},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":10898946,"byte_end":10898953,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":6116}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":10898782,"byte_end":10898849,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":10898867,"byte_end":10898934,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9363},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":10899802,"byte_end":10899806,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9365},{"krate":0,"index":9366}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9314},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":10901649,"byte_end":10901658,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":9317},{"krate":0,"index":9318},{"krate":0,"index":9319}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9291},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\timeout.rs","byte_start":10933326,"byte_end":10933333,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":9293},{"krate":0,"index":9294},{"krate":0,"index":9295},{"krate":0,"index":9296}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":6008},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832331,"byte_end":10832340,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":6009},{"krate":0,"index":6010},{"krate":0,"index":6013},{"krate":0,"index":6016},{"krate":0,"index":6018},{"krate":0,"index":6020},{"krate":0,"index":6023},{"krate":0,"index":6024},{"krate":0,"index":6025},{"krate":0,"index":6027},{"krate":0,"index":6028},{"krate":0,"index":6030},{"krate":0,"index":6032},{"krate":0,"index":6034},{"krate":0,"index":6036},{"krate":0,"index":6039},{"krate":0,"index":6041}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832220,"byte_end":10832294,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832295,"byte_end":10832320,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":6009},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833410,"byte_end":10833414,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832355,"byte_end":10832425,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832430,"byte_end":10832453,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832458,"byte_end":10832461,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832466,"byte_end":10832484,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832489,"byte_end":10832492,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832497,"byte_end":10832510,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832515,"byte_end":10832566,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832571,"byte_end":10832578,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832583,"byte_end":10832586,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832591,"byte_end":10832659,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832664,"byte_end":10832739,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832744,"byte_end":10832819,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832824,"byte_end":10832878,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832883,"byte_end":10832958,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832963,"byte_end":10832973,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832978,"byte_end":10832981,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832986,"byte_end":10833000,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833005,"byte_end":10833008,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833013,"byte_end":10833020,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833025,"byte_end":10833045,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833050,"byte_end":10833073,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833078,"byte_end":10833119,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833124,"byte_end":10833127,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833132,"byte_end":10833173,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833178,"byte_end":10833181,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833186,"byte_end":10833231,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833236,"byte_end":10833281,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833286,"byte_end":10833331,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833336,"byte_end":10833378,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833383,"byte_end":10833390,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833395,"byte_end":10833402,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6010},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834485,"byte_end":10834493,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"pub fn try_next<T, E>(&mut Self) -> TryNext<, Self> where Self: Stream<Item =\nResult<T, E>> + Unpin","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833516,"byte_end":10833584,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833589,"byte_end":10833657,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833662,"byte_end":10833665,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833670,"byte_end":10833688,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833693,"byte_end":10833696,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833701,"byte_end":10833714,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833719,"byte_end":10833776,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833781,"byte_end":10833788,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833793,"byte_end":10833796,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833801,"byte_end":10833865,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833870,"byte_end":10833932,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10833937,"byte_end":10833997,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834002,"byte_end":10834045,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834050,"byte_end":10834053,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834058,"byte_end":10834072,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834077,"byte_end":10834080,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834085,"byte_end":10834092,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834097,"byte_end":10834117,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834122,"byte_end":10834145,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834150,"byte_end":10834191,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834196,"byte_end":10834199,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834204,"byte_end":10834271,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834276,"byte_end":10834279,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834284,"byte_end":10834337,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834342,"byte_end":10834395,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834400,"byte_end":10834453,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834458,"byte_end":10834465,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834470,"byte_end":10834477,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6013},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835561,"byte_end":10835564,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834637,"byte_end":10834712,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834717,"byte_end":10834740,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834745,"byte_end":10834748,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834753,"byte_end":10834825,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834830,"byte_end":10834894,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834899,"byte_end":10834936,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834941,"byte_end":10834944,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10834949,"byte_end":10835025,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835030,"byte_end":10835101,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835106,"byte_end":10835127,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835132,"byte_end":10835135,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835140,"byte_end":10835154,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835159,"byte_end":10835162,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835167,"byte_end":10835174,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835179,"byte_end":10835199,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835204,"byte_end":10835227,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835232,"byte_end":10835273,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835278,"byte_end":10835281,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835286,"byte_end":10835323,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835328,"byte_end":10835371,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835376,"byte_end":10835379,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835384,"byte_end":10835429,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835434,"byte_end":10835479,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835484,"byte_end":10835529,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835534,"byte_end":10835541,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835546,"byte_end":10835553,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6016},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838174,"byte_end":10838179,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835708,"byte_end":10835781,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835786,"byte_end":10835802,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835807,"byte_end":10835810,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835815,"byte_end":10835891,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835896,"byte_end":10835961,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10835966,"byte_end":10836041,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness. You should not chain calls to `merge`, as this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836046,"byte_end":10836120,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ will break the fairness of the merging.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836125,"byte_end":10836168,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836173,"byte_end":10836176,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836181,"byte_end":10836256,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836261,"byte_end":10836327,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836332,"byte_end":10836375,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836380,"byte_end":10836383,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For merging multiple streams, consider using [`StreamMap`] instead.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836388,"byte_end":10836459,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836464,"byte_end":10836467,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`StreamMap`]: crate::stream::StreamMap","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836472,"byte_end":10836515,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836520,"byte_end":10836523,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836528,"byte_end":10836542,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836547,"byte_end":10836550,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836555,"byte_end":10836562,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836567,"byte_end":10836600,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836605,"byte_end":10836631,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836636,"byte_end":10836656,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836661,"byte_end":10836664,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836669,"byte_end":10836697,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836702,"byte_end":10836705,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836710,"byte_end":10836718,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836723,"byte_end":10836741,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836746,"byte_end":10836754,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836759,"byte_end":10836796,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836801,"byte_end":10836822,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836827,"byte_end":10836847,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836852,"byte_end":10836899,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836904,"byte_end":10836951,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836956,"byte_end":10836959,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10836964,"byte_end":10837000,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837005,"byte_end":10837008,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837013,"byte_end":10837046,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837051,"byte_end":10837094,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837099,"byte_end":10837138,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837143,"byte_end":10837182,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837187,"byte_end":10837190,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837195,"byte_end":10837240,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837245,"byte_end":10837306,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837311,"byte_end":10837314,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837319,"byte_end":10837358,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837363,"byte_end":10837374,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837379,"byte_end":10837382,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837387,"byte_end":10837420,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837425,"byte_end":10837478,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837483,"byte_end":10837543,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837548,"byte_end":10837551,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837556,"byte_end":10837595,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837600,"byte_end":10837603,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837608,"byte_end":10837669,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837674,"byte_end":10837677,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837682,"byte_end":10837717,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837722,"byte_end":10837761,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837766,"byte_end":10837777,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837782,"byte_end":10837785,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837790,"byte_end":10837837,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837842,"byte_end":10837889,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837894,"byte_end":10837941,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837946,"byte_end":10837993,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10837998,"byte_end":10838045,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838050,"byte_end":10838053,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838058,"byte_end":10838097,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838102,"byte_end":10838144,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838149,"byte_end":10838154,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838159,"byte_end":10838166,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6018},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839484,"byte_end":10839490,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where F: FnMut(&Self::Item) ->\nbool, Self: Sized","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838335,"byte_end":10838407,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838412,"byte_end":10838426,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838431,"byte_end":10838434,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838439,"byte_end":10838514,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838519,"byte_end":10838565,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838570,"byte_end":10838642,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838647,"byte_end":10838696,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838701,"byte_end":10838759,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838764,"byte_end":10838767,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838772,"byte_end":10838848,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838853,"byte_end":10838925,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838930,"byte_end":10838951,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838956,"byte_end":10838959,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838964,"byte_end":10838978,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838983,"byte_end":10838986,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10838991,"byte_end":10838998,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839003,"byte_end":10839023,"line_start":283,"line_end":283,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839028,"byte_end":10839051,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839056,"byte_end":10839097,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839102,"byte_end":10839105,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839110,"byte_end":10839147,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839152,"byte_end":10839202,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839207,"byte_end":10839210,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839215,"byte_end":10839259,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839264,"byte_end":10839308,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839313,"byte_end":10839357,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839362,"byte_end":10839406,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839411,"byte_end":10839452,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839457,"byte_end":10839464,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839469,"byte_end":10839476,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6020},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840857,"byte_end":10840867,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"pub fn filter_map<T, F>(Self, F) -> FilterMap<Self, F> where\nF: FnMut(Self::Item) -> Option<T>, Self: Sized","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839641,"byte_end":10839716,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839721,"byte_end":10839784,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839789,"byte_end":10839792,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839797,"byte_end":10839872,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839877,"byte_end":10839929,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10839934,"byte_end":10840010,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value will be skipped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840015,"byte_end":10840075,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840080,"byte_end":10840083,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840088,"byte_end":10840164,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840169,"byte_end":10840245,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840250,"byte_end":10840271,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840276,"byte_end":10840279,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840284,"byte_end":10840298,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840303,"byte_end":10840310,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840315,"byte_end":10840335,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840340,"byte_end":10840363,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840368,"byte_end":10840409,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840414,"byte_end":10840417,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840422,"byte_end":10840459,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840464,"byte_end":10840507,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840512,"byte_end":10840563,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840568,"byte_end":10840575,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840580,"byte_end":10840583,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840588,"byte_end":10840632,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840637,"byte_end":10840681,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840686,"byte_end":10840730,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840735,"byte_end":10840779,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840784,"byte_end":10840825,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840830,"byte_end":10840837,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10840842,"byte_end":10840849,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6023},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842999,"byte_end":10843003,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841031,"byte_end":10841086,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841091,"byte_end":10841094,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841099,"byte_end":10841172,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841177,"byte_end":10841249,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841254,"byte_end":10841328,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841333,"byte_end":10841359,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841364,"byte_end":10841367,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841372,"byte_end":10841386,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841391,"byte_end":10841394,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841399,"byte_end":10841406,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841411,"byte_end":10841454,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841459,"byte_end":10841462,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841467,"byte_end":10841489,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841494,"byte_end":10841529,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841534,"byte_end":10841537,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841542,"byte_end":10841596,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841601,"byte_end":10841623,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841628,"byte_end":10841647,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841652,"byte_end":10841657,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841662,"byte_end":10841665,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841670,"byte_end":10841701,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841706,"byte_end":10841730,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841735,"byte_end":10841738,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841743,"byte_end":10841835,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841840,"byte_end":10841873,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841878,"byte_end":10841918,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841923,"byte_end":10841926,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841931,"byte_end":10841980,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10841985,"byte_end":10842014,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842019,"byte_end":10842057,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842062,"byte_end":10842082,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842087,"byte_end":10842120,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842125,"byte_end":10842138,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842143,"byte_end":10842152,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842157,"byte_end":10842162,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842167,"byte_end":10842170,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842175,"byte_end":10842193,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842198,"byte_end":10842219,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842224,"byte_end":10842272,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842277,"byte_end":10842280,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842285,"byte_end":10842326,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842331,"byte_end":10842380,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842385,"byte_end":10842431,"line_start":385,"line_end":385,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842436,"byte_end":10842485,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842490,"byte_end":10842536,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842541,"byte_end":10842544,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842549,"byte_end":10842585,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842590,"byte_end":10842629,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842634,"byte_end":10842637,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842642,"byte_end":10842691,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842696,"byte_end":10842742,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842747,"byte_end":10842750,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842755,"byte_end":10842816,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842821,"byte_end":10842867,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842872,"byte_end":10842918,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842923,"byte_end":10842969,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842974,"byte_end":10842979,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10842984,"byte_end":10842991,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6024},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843739,"byte_end":10843743,"line_start":428,"line_end":428,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843096,"byte_end":10843167,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843172,"byte_end":10843175,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843180,"byte_end":10843253,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843258,"byte_end":10843293,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843298,"byte_end":10843301,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843306,"byte_end":10843320,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843325,"byte_end":10843328,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843333,"byte_end":10843340,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843345,"byte_end":10843365,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843370,"byte_end":10843393,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843398,"byte_end":10843439,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843444,"byte_end":10843447,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843452,"byte_end":10843502,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843507,"byte_end":10843510,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843515,"byte_end":10843560,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843565,"byte_end":10843610,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843615,"byte_end":10843660,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843665,"byte_end":10843707,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843712,"byte_end":10843719,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843724,"byte_end":10843731,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6025},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844636,"byte_end":10844646,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"pub fn take_while<F>(Self, F) -> TakeWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843849,"byte_end":10843912,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843917,"byte_end":10843940,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843945,"byte_end":10843948,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10843953,"byte_end":10844028,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844033,"byte_end":10844105,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844110,"byte_end":10844174,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844179,"byte_end":10844182,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844187,"byte_end":10844201,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844206,"byte_end":10844209,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844214,"byte_end":10844221,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844226,"byte_end":10844246,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844251,"byte_end":10844274,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844279,"byte_end":10844320,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844325,"byte_end":10844328,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844333,"byte_end":10844399,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844404,"byte_end":10844407,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844412,"byte_end":10844457,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844462,"byte_end":10844507,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844512,"byte_end":10844557,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844562,"byte_end":10844604,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844609,"byte_end":10844616,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844621,"byte_end":10844628,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6027},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845343,"byte_end":10845347,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844803,"byte_end":10844869,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844874,"byte_end":10844896,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844901,"byte_end":10844904,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844909,"byte_end":10844923,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844928,"byte_end":10844931,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844936,"byte_end":10844943,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844948,"byte_end":10844968,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10844973,"byte_end":10844996,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845001,"byte_end":10845042,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845047,"byte_end":10845050,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845055,"byte_end":10845105,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845110,"byte_end":10845113,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845118,"byte_end":10845163,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845168,"byte_end":10845213,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845218,"byte_end":10845264,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845269,"byte_end":10845311,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845316,"byte_end":10845323,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845328,"byte_end":10845335,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6028},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846325,"byte_end":10846335,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"pub fn skip_while<F>(Self, F) -> SkipWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845453,"byte_end":10845526,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845531,"byte_end":10845554,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845559,"byte_end":10845562,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845567,"byte_end":10845645,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845650,"byte_end":10845722,"line_start":494,"line_end":494,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845727,"byte_end":10845787,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845792,"byte_end":10845795,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845800,"byte_end":10845863,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845868,"byte_end":10845871,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845876,"byte_end":10845890,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845895,"byte_end":10845898,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845903,"byte_end":10845910,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845915,"byte_end":10845935,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845940,"byte_end":10845963,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10845968,"byte_end":10846009,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846014,"byte_end":10846088,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846093,"byte_end":10846096,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846101,"byte_end":10846146,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846151,"byte_end":10846196,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846201,"byte_end":10846246,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846251,"byte_end":10846293,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846298,"byte_end":10846305,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846310,"byte_end":10846317,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6030},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847914,"byte_end":10847917,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846492,"byte_end":10846553,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846558,"byte_end":10846561,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846566,"byte_end":10846636,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846641,"byte_end":10846711,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846716,"byte_end":10846781,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846786,"byte_end":10846838,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846843,"byte_end":10846846,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846851,"byte_end":10846923,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10846928,"byte_end":10847002,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847007,"byte_end":10847043,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847048,"byte_end":10847051,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847056,"byte_end":10847091,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847096,"byte_end":10847099,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847104,"byte_end":10847118,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847123,"byte_end":10847126,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847131,"byte_end":10847147,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847152,"byte_end":10847155,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847160,"byte_end":10847167,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847172,"byte_end":10847192,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847197,"byte_end":10847220,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847225,"byte_end":10847266,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847271,"byte_end":10847274,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847279,"byte_end":10847301,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847306,"byte_end":10847309,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847314,"byte_end":10847366,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847371,"byte_end":10847374,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847379,"byte_end":10847432,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847437,"byte_end":10847444,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847449,"byte_end":10847456,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847461,"byte_end":10847464,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847469,"byte_end":10847503,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847508,"byte_end":10847511,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847516,"byte_end":10847523,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847528,"byte_end":10847548,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847553,"byte_end":10847576,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847581,"byte_end":10847622,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847627,"byte_end":10847630,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847635,"byte_end":10847657,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847662,"byte_end":10847665,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847670,"byte_end":10847706,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847711,"byte_end":10847714,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847719,"byte_end":10847761,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847766,"byte_end":10847769,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847774,"byte_end":10847833,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847838,"byte_end":10847882,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847887,"byte_end":10847894,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10847899,"byte_end":10847906,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6032},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849442,"byte_end":10849445,"line_start":621,"line_end":621,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848082,"byte_end":10848141,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848146,"byte_end":10848149,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848154,"byte_end":10848224,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848229,"byte_end":10848302,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848307,"byte_end":10848371,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848376,"byte_end":10848396,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848401,"byte_end":10848404,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848409,"byte_end":10848481,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848486,"byte_end":10848559,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848564,"byte_end":10848599,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848604,"byte_end":10848607,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848612,"byte_end":10848648,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848653,"byte_end":10848656,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848661,"byte_end":10848677,"line_start":589,"line_end":589,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848682,"byte_end":10848685,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848690,"byte_end":10848697,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848702,"byte_end":10848722,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848727,"byte_end":10848750,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848755,"byte_end":10848796,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848801,"byte_end":10848804,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848809,"byte_end":10848831,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848836,"byte_end":10848839,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848844,"byte_end":10848896,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848901,"byte_end":10848904,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848909,"byte_end":10848962,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848967,"byte_end":10848974,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848979,"byte_end":10848986,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848991,"byte_end":10848994,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10848999,"byte_end":10849032,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849037,"byte_end":10849040,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849045,"byte_end":10849052,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849057,"byte_end":10849077,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849082,"byte_end":10849105,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849110,"byte_end":10849151,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849156,"byte_end":10849159,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849164,"byte_end":10849186,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849191,"byte_end":10849194,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849199,"byte_end":10849235,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849240,"byte_end":10849243,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849248,"byte_end":10849289,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849294,"byte_end":10849297,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849302,"byte_end":10849361,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849366,"byte_end":10849410,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849415,"byte_end":10849422,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849427,"byte_end":10849434,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6034},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850588,"byte_end":10850593,"line_start":656,"line_end":656,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849610,"byte_end":10849681,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849686,"byte_end":10849742,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849747,"byte_end":10849750,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849755,"byte_end":10849829,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849834,"byte_end":10849870,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849875,"byte_end":10849878,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849883,"byte_end":10849897,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849902,"byte_end":10849905,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849910,"byte_end":10849917,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849922,"byte_end":10849963,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849968,"byte_end":10849971,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849976,"byte_end":10849994,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10849999,"byte_end":10850020,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850025,"byte_end":10850071,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850076,"byte_end":10850122,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850127,"byte_end":10850130,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850135,"byte_end":10850175,"line_start":645,"line_end":645,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850180,"byte_end":10850183,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850188,"byte_end":10850237,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850242,"byte_end":10850291,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850296,"byte_end":10850345,"line_start":649,"line_end":649,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850350,"byte_end":10850399,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850404,"byte_end":10850453,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850458,"byte_end":10850507,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850512,"byte_end":10850558,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850563,"byte_end":10850568,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850573,"byte_end":10850580,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6036},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851186,"byte_end":10851190,"line_start":680,"line_end":680,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, B, F> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850749,"byte_end":10850818,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850823,"byte_end":10850859,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850864,"byte_end":10850867,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850872,"byte_end":10850886,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850891,"byte_end":10850907,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850912,"byte_end":10850919,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850924,"byte_end":10850944,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850949,"byte_end":10850972,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10850977,"byte_end":10851010,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851015,"byte_end":10851018,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851023,"byte_end":10851065,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851070,"byte_end":10851118,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851123,"byte_end":10851126,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851131,"byte_end":10851154,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851159,"byte_end":10851166,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851171,"byte_end":10851178,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6039},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853503,"byte_end":10853510,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"pub fn collect<T>(Self) -> Collect<Self, T> where T: FromStream<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851369,"byte_end":10851431,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851436,"byte_end":10851439,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851444,"byte_end":10851520,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851525,"byte_end":10851592,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851597,"byte_end":10851645,"line_start":692,"line_end":692,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851650,"byte_end":10851715,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851720,"byte_end":10851723,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851728,"byte_end":10851742,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851747,"byte_end":10851750,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851755,"byte_end":10851829,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851834,"byte_end":10851906,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851911,"byte_end":10851986,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10851991,"byte_end":10852053,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852058,"byte_end":10852061,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852066,"byte_end":10852077,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852082,"byte_end":10852085,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852090,"byte_end":10852160,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852165,"byte_end":10852203,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852208,"byte_end":10852211,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852216,"byte_end":10852230,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852235,"byte_end":10852238,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852243,"byte_end":10852259,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852264,"byte_end":10852267,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852272,"byte_end":10852279,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852284,"byte_end":10852325,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852330,"byte_end":10852333,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852338,"byte_end":10852356,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852361,"byte_end":10852382,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852387,"byte_end":10852418,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852423,"byte_end":10852462,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852467,"byte_end":10852498,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852503,"byte_end":10852529,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852534,"byte_end":10852557,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852562,"byte_end":10852565,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852570,"byte_end":10852613,"line_start":722,"line_end":722,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852618,"byte_end":10852623,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852628,"byte_end":10852635,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852640,"byte_end":10852643,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852648,"byte_end":10852690,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852695,"byte_end":10852698,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852703,"byte_end":10852710,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852715,"byte_end":10852756,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852761,"byte_end":10852764,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852769,"byte_end":10852787,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852792,"byte_end":10852813,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852818,"byte_end":10852883,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852888,"byte_end":10852932,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852937,"byte_end":10852988,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10852993,"byte_end":10853019,"line_start":736,"line_end":736,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853024,"byte_end":10853047,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853052,"byte_end":10853055,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853060,"byte_end":10853106,"line_start":739,"line_end":739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853111,"byte_end":10853114,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853119,"byte_end":10853191,"line_start":741,"line_end":741,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853196,"byte_end":10853268,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853273,"byte_end":10853276,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853281,"byte_end":10853325,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853330,"byte_end":10853363,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853368,"byte_end":10853394,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853399,"byte_end":10853422,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853427,"byte_end":10853430,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853435,"byte_end":10853473,"line_start":749,"line_end":749,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853478,"byte_end":10853483,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853488,"byte_end":10853495,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6041},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10856165,"byte_end":10856172,"line_start":816,"line_end":816,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":6008},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853650,"byte_end":10853702,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853707,"byte_end":10853710,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853715,"byte_end":10853787,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853792,"byte_end":10853862,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853867,"byte_end":10853870,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853875,"byte_end":10853951,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10853956,"byte_end":10854033,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854038,"byte_end":10854114,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854119,"byte_end":10854162,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854167,"byte_end":10854170,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854175,"byte_end":10854186,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854191,"byte_end":10854194,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854199,"byte_end":10854265,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854270,"byte_end":10854296,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854301,"byte_end":10854304,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854309,"byte_end":10854384,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854389,"byte_end":10854423,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854428,"byte_end":10854431,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854436,"byte_end":10854450,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854455,"byte_end":10854458,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854463,"byte_end":10854537,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854542,"byte_end":10854545,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854550,"byte_end":10854557,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854562,"byte_end":10854582,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854587,"byte_end":10854610,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854615,"byte_end":10854656,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854661,"byte_end":10854689,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854694,"byte_end":10854737,"line_start":787,"line_end":787,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854742,"byte_end":10854745,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854750,"byte_end":10854818,"line_start":789,"line_end":789,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854823,"byte_end":10854826,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854831,"byte_end":10854898,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854903,"byte_end":10854960,"line_start":792,"line_end":792,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10854965,"byte_end":10855022,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855027,"byte_end":10855084,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855089,"byte_end":10855143,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855148,"byte_end":10855151,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855156,"byte_end":10855241,"line_start":797,"line_end":797,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855246,"byte_end":10855322,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855327,"byte_end":10855384,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855389,"byte_end":10855439,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855444,"byte_end":10855501,"line_start":801,"line_end":801,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855506,"byte_end":10855563,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855568,"byte_end":10855622,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855627,"byte_end":10855630,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855635,"byte_end":10855706,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855711,"byte_end":10855774,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855779,"byte_end":10855851,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855856,"byte_end":10855918,"line_start":808,"line_end":808,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855923,"byte_end":10855926,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855931,"byte_end":10855988,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10855993,"byte_end":10856047,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10856052,"byte_end":10856059,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10856064,"byte_end":10856071,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10856076,"byte_end":10856105,"line_start":814,"line_end":814,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":6146},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":6147},{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6159},{"krate":0,"index":6160},{"krate":0,"index":6347},{"krate":0,"index":6774},{"krate":0,"index":6855},{"krate":0,"index":6856},{"krate":0,"index":6857},{"krate":0,"index":6858},{"krate":0,"index":6859},{"krate":0,"index":6860},{"krate":0,"index":6909},{"krate":0,"index":6910},{"krate":0,"index":7029},{"krate":0,"index":7120},{"krate":0,"index":7258},{"krate":0,"index":7283},{"krate":0,"index":7284},{"krate":0,"index":7285},{"krate":0,"index":7286},{"krate":0,"index":7287},{"krate":0,"index":7340},{"krate":0,"index":7341},{"krate":0,"index":7342},{"krate":0,"index":7343},{"krate":0,"index":7344},{"krate":0,"index":7389},{"krate":0,"index":7390}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10934872,"byte_end":10934936,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10934937,"byte_end":10934940,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10934941,"byte_end":10935016,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935017,"byte_end":10935097,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935098,"byte_end":10935177,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935178,"byte_end":10935212,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935213,"byte_end":10935216,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935217,"byte_end":10935241,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935242,"byte_end":10935245,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935246,"byte_end":10935267,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935268,"byte_end":10935271,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935272,"byte_end":10935345,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935346,"byte_end":10935425,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935426,"byte_end":10935495,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935496,"byte_end":10935499,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935500,"byte_end":10935579,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935580,"byte_end":10935657,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935658,"byte_end":10935733,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935734,"byte_end":10935806,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935807,"byte_end":10935879,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports muliple consumers, many different separate tasks may **receive**","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935880,"byte_end":10935957,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ messages.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935958,"byte_end":10935971,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935972,"byte_end":10935975,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10935976,"byte_end":10936054,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936055,"byte_end":10936116,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936117,"byte_end":10936120,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936121,"byte_end":10936145,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936146,"byte_end":10936149,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936150,"byte_end":10936229,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936230,"byte_end":10936308,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936309,"byte_end":10936353,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936354,"byte_end":10936357,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936358,"byte_end":10936438,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936439,"byte_end":10936455,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936456,"byte_end":10936459,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936460,"byte_end":10936467,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936468,"byte_end":10936497,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936498,"byte_end":10936501,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936502,"byte_end":10936545,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936546,"byte_end":10936608,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936609,"byte_end":10936614,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936615,"byte_end":10936618,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936619,"byte_end":10936637,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936638,"byte_end":10936659,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936660,"byte_end":10936702,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936703,"byte_end":10936706,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936707,"byte_end":10936740,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936741,"byte_end":10936788,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936789,"byte_end":10936823,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936824,"byte_end":10936835,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936836,"byte_end":10936839,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936840,"byte_end":10936917,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936918,"byte_end":10936921,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936922,"byte_end":10936964,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10936965,"byte_end":10937001,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937002,"byte_end":10937007,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937008,"byte_end":10937015,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937016,"byte_end":10937019,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937020,"byte_end":10937084,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937085,"byte_end":10937149,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937150,"byte_end":10937212,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937213,"byte_end":10937283,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937284,"byte_end":10937349,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937350,"byte_end":10937360,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937361,"byte_end":10937364,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937365,"byte_end":10937381,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937382,"byte_end":10937385,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937386,"byte_end":10937393,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937394,"byte_end":10937437,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937438,"byte_end":10937489,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937490,"byte_end":10937495,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937496,"byte_end":10937499,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937500,"byte_end":10937518,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937519,"byte_end":10937540,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937541,"byte_end":10937592,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937593,"byte_end":10937629,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937630,"byte_end":10937641,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937642,"byte_end":10937645,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937646,"byte_end":10937723,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937724,"byte_end":10937727,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937728,"byte_end":10937770,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937771,"byte_end":10937816,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937817,"byte_end":10937822,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937823,"byte_end":10937830,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937831,"byte_end":10937834,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937835,"byte_end":10937857,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937858,"byte_end":10937901,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937902,"byte_end":10937905,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937906,"byte_end":10937927,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937928,"byte_end":10937931,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10937932,"byte_end":10938009,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938010,"byte_end":10938090,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938091,"byte_end":10938146,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938147,"byte_end":10938150,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938151,"byte_end":10938229,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938230,"byte_end":10938250,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938251,"byte_end":10938254,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938255,"byte_end":10938262,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938263,"byte_end":10938289,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938290,"byte_end":10938293,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938294,"byte_end":10938347,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938348,"byte_end":10938402,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938403,"byte_end":10938408,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938409,"byte_end":10938412,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938413,"byte_end":10938431,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938432,"byte_end":10938453,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938454,"byte_end":10938504,"line_start":109,"line_end":109,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938505,"byte_end":10938508,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938509,"byte_end":10938542,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938543,"byte_end":10938571,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938572,"byte_end":10938624,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938625,"byte_end":10938669,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938670,"byte_end":10938683,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938684,"byte_end":10938695,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938696,"byte_end":10938699,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938700,"byte_end":10938747,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938748,"byte_end":10938786,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938787,"byte_end":10938796,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938797,"byte_end":10938802,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938803,"byte_end":10938810,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938811,"byte_end":10938814,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938815,"byte_end":10938895,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938896,"byte_end":10938973,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10938974,"byte_end":10939047,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939048,"byte_end":10939123,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939124,"byte_end":10939137,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939138,"byte_end":10939141,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939142,"byte_end":10939217,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939218,"byte_end":10939297,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939298,"byte_end":10939376,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939377,"byte_end":10939456,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939457,"byte_end":10939537,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939538,"byte_end":10939603,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939604,"byte_end":10939607,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939608,"byte_end":10939688,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939689,"byte_end":10939701,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939702,"byte_end":10939705,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939706,"byte_end":10939719,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939720,"byte_end":10939761,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939762,"byte_end":10939792,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939793,"byte_end":10939819,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939820,"byte_end":10939823,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939824,"byte_end":10939842,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939843,"byte_end":10939882,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939883,"byte_end":10939958,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10939959,"byte_end":10940005,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940006,"byte_end":10940009,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940010,"byte_end":10940034,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940035,"byte_end":10940114,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940115,"byte_end":10940146,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let mut tx = tx.clone();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940147,"byte_end":10940183,"line_start":153,"line_end":153,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940184,"byte_end":10940187,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940188,"byte_end":10940225,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940226,"byte_end":10940288,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940289,"byte_end":10940304,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940305,"byte_end":10940314,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940315,"byte_end":10940318,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940319,"byte_end":10940398,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940399,"byte_end":10940474,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940475,"byte_end":10940553,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940554,"byte_end":10940601,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940602,"byte_end":10940619,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940620,"byte_end":10940623,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940624,"byte_end":10940671,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940672,"byte_end":10940713,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940714,"byte_end":10940723,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940724,"byte_end":10940727,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940728,"byte_end":10940742,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940743,"byte_end":10940748,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940749,"byte_end":10940756,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940757,"byte_end":10940760,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940761,"byte_end":10940836,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940837,"byte_end":10940912,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940913,"byte_end":10940992,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10940993,"byte_end":10941058,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941059,"byte_end":10941136,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941137,"byte_end":10941140,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941141,"byte_end":10941219,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941220,"byte_end":10941300,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941301,"byte_end":10941346,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941347,"byte_end":10941350,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941351,"byte_end":10941358,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941359,"byte_end":10941396,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941397,"byte_end":10941424,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941425,"byte_end":10941428,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941429,"byte_end":10941447,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941448,"byte_end":10941466,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941467,"byte_end":10941510,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941511,"byte_end":10941516,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941517,"byte_end":10941520,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941521,"byte_end":10941539,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941540,"byte_end":10941561,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941562,"byte_end":10941651,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941652,"byte_end":10941655,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941656,"byte_end":10941701,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941702,"byte_end":10941735,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941736,"byte_end":10941773,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941774,"byte_end":10941777,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941778,"byte_end":10941845,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941846,"byte_end":10941873,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941874,"byte_end":10941908,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941909,"byte_end":10941952,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941953,"byte_end":10941990,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10941991,"byte_end":10942044,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942045,"byte_end":10942066,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942067,"byte_end":10942084,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942085,"byte_end":10942098,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942099,"byte_end":10942110,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942111,"byte_end":10942114,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942115,"byte_end":10942153,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942154,"byte_end":10942157,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942158,"byte_end":10942218,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942219,"byte_end":10942243,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let mut cmd_tx = cmd_tx.clone();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942244,"byte_end":10942288,"line_start":216,"line_end":216,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942289,"byte_end":10942292,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942293,"byte_end":10942348,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942349,"byte_end":10942409,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942410,"byte_end":10942413,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942414,"byte_end":10942484,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942485,"byte_end":10942534,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942535,"byte_end":10942538,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942539,"byte_end":10942592,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942593,"byte_end":10942609,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942610,"byte_end":10942619,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942620,"byte_end":10942623,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942624,"byte_end":10942665,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942666,"byte_end":10942717,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942718,"byte_end":10942757,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942758,"byte_end":10942767,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942768,"byte_end":10942773,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942774,"byte_end":10942781,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942782,"byte_end":10942785,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942786,"byte_end":10942802,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942803,"byte_end":10942806,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942807,"byte_end":10942833,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942834,"byte_end":10942837,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942838,"byte_end":10942905,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942906,"byte_end":10942978,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10942979,"byte_end":10943052,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943053,"byte_end":10943106,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943107,"byte_end":10943110,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943111,"byte_end":10943191,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943192,"byte_end":10943214,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943215,"byte_end":10943218,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943219,"byte_end":10943234,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943235,"byte_end":10943238,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943239,"byte_end":10943246,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943247,"byte_end":10943278,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943279,"byte_end":10943282,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943283,"byte_end":10943301,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943302,"byte_end":10943323,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943324,"byte_end":10943375,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943376,"byte_end":10943413,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943414,"byte_end":10943417,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943418,"byte_end":10943451,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943452,"byte_end":10943506,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943507,"byte_end":10943561,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943562,"byte_end":10943573,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943574,"byte_end":10943577,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943578,"byte_end":10943611,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943612,"byte_end":10943666,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943667,"byte_end":10943721,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943722,"byte_end":10943733,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943734,"byte_end":10943737,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943738,"byte_end":10943767,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943768,"byte_end":10943797,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943798,"byte_end":10943803,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943804,"byte_end":10943811,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943812,"byte_end":10943815,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943816,"byte_end":10943865,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943866,"byte_end":10943869,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943870,"byte_end":10943892,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943893,"byte_end":10943896,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943897,"byte_end":10943973,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10943974,"byte_end":10944052,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944053,"byte_end":10944132,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944133,"byte_end":10944198,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944199,"byte_end":10944202,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944203,"byte_end":10944283,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944284,"byte_end":10944287,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944288,"byte_end":10944362,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944363,"byte_end":10944436,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944437,"byte_end":10944450,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944451,"byte_end":10944454,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944455,"byte_end":10944528,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944529,"byte_end":10944609,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944610,"byte_end":10944685,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944686,"byte_end":10944689,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944690,"byte_end":10944697,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944698,"byte_end":10944725,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944726,"byte_end":10944773,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944774,"byte_end":10944777,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944778,"byte_end":10944794,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944795,"byte_end":10944798,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944799,"byte_end":10944841,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944842,"byte_end":10944861,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944862,"byte_end":10944888,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944889,"byte_end":10944894,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944895,"byte_end":10944898,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944899,"byte_end":10944916,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944917,"byte_end":10944974,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10944975,"byte_end":10945033,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945034,"byte_end":10945086,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945087,"byte_end":10945096,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945097,"byte_end":10945102,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945103,"byte_end":10945106,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945107,"byte_end":10945142,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945143,"byte_end":10945171,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945172,"byte_end":10945177,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945178,"byte_end":10945181,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945182,"byte_end":10945200,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945201,"byte_end":10945222,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945223,"byte_end":10945266,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945267,"byte_end":10945332,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945333,"byte_end":10945336,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945337,"byte_end":10945415,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945416,"byte_end":10945470,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945471,"byte_end":10945474,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945475,"byte_end":10945519,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945520,"byte_end":10945553,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945554,"byte_end":10945572,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945573,"byte_end":10945622,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::delay_for(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945623,"byte_end":10945686,"line_start":325,"line_end":325,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945687,"byte_end":10945690,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945691,"byte_end":10945737,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945738,"byte_end":10945811,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945812,"byte_end":10945815,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945816,"byte_end":10945890,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945891,"byte_end":10945931,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945932,"byte_end":10945973,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.broadcast(new_config.clone()).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10945974,"byte_end":10946036,"line_start":333,"line_end":333,"column_start":1,"column_end":63}},{"value":"/                 config = new_config;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946037,"byte_end":10946077,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946078,"byte_end":10946095,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946096,"byte_end":10946109,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946110,"byte_end":10946121,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946122,"byte_end":10946125,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946126,"byte_end":10946159,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946160,"byte_end":10946163,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946164,"byte_end":10946242,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946243,"byte_end":10946297,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946298,"byte_end":10946308,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946309,"byte_end":10946386,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946387,"byte_end":10946465,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946466,"byte_end":10946501,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946502,"byte_end":10946525,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946526,"byte_end":10946589,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946590,"byte_end":10946626,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946627,"byte_end":10946630,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946631,"byte_end":10946681,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946682,"byte_end":10946761,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946762,"byte_end":10946837,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946838,"byte_end":10946891,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946892,"byte_end":10946938,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946939,"byte_end":10946971,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946972,"byte_end":10946975,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Receive the **initial** configuration value. As this is the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10946976,"byte_end":10947054,"line_start":358,"line_end":358,"column_start":1,"column_end":79}},{"value":"/             // first time the config is received from the watch, it will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947055,"byte_end":10947131,"line_start":359,"line_end":359,"column_start":1,"column_end":77}},{"value":"/             // always complete immediatedly.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947132,"byte_end":10947180,"line_start":360,"line_end":360,"column_start":1,"column_end":49}},{"value":"/             let mut conf = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947181,"byte_end":10947237,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947238,"byte_end":10947241,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947242,"byte_end":10947292,"line_start":363,"line_end":363,"column_start":1,"column_end":51}},{"value":"/             let mut delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947293,"byte_end":10947368,"line_start":364,"line_end":364,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947369,"byte_end":10947372,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947373,"byte_end":10947395,"line_start":366,"line_end":366,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947396,"byte_end":10947432,"line_start":367,"line_end":367,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut delay => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947433,"byte_end":10947476,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947477,"byte_end":10947541,"line_start":369,"line_end":369,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947542,"byte_end":10947599,"line_start":370,"line_end":370,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947600,"byte_end":10947603,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947604,"byte_end":10947659,"line_start":372,"line_end":372,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947660,"byte_end":10947714,"line_start":373,"line_end":373,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947715,"byte_end":10947718,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947719,"byte_end":10947769,"line_start":375,"line_end":375,"column_start":1,"column_end":51}},{"value":"/                         delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947770,"byte_end":10947849,"line_start":376,"line_end":376,"column_start":1,"column_end":80}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947850,"byte_end":10947875,"line_start":377,"line_end":377,"column_start":1,"column_end":26}},{"value":"/                     new_conf = rx.recv() => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947876,"byte_end":10947925,"line_start":378,"line_end":378,"column_start":1,"column_end":50}},{"value":"/                         conf = new_conf.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947926,"byte_end":10947979,"line_start":379,"line_end":379,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947980,"byte_end":10947983,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10947984,"byte_end":10948061,"line_start":381,"line_end":381,"column_start":1,"column_end":78}},{"value":"/                         // `delay` using the new `timeout` value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948062,"byte_end":10948131,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"/                         delay.reset(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948132,"byte_end":10948197,"line_start":383,"line_end":383,"column_start":1,"column_end":66}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948198,"byte_end":10948223,"line_start":384,"line_end":384,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948224,"byte_end":10948264,"line_start":385,"line_end":385,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948265,"byte_end":10948320,"line_start":386,"line_end":386,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948321,"byte_end":10948355,"line_start":387,"line_end":387,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948356,"byte_end":10948381,"line_start":388,"line_end":388,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948382,"byte_end":10948403,"line_start":389,"line_end":389,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948404,"byte_end":10948421,"line_start":390,"line_end":390,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948422,"byte_end":10948437,"line_start":391,"line_end":391,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948438,"byte_end":10948441,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948442,"byte_end":10948475,"line_start":393,"line_end":393,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948476,"byte_end":10948485,"line_start":394,"line_end":394,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948486,"byte_end":10948489,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948490,"byte_end":10948531,"line_start":396,"line_end":396,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948532,"byte_end":10948566,"line_start":397,"line_end":397,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948567,"byte_end":10948576,"line_start":398,"line_end":398,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948577,"byte_end":10948582,"line_start":399,"line_end":399,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948583,"byte_end":10948590,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948591,"byte_end":10948594,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: crate::sync::watch","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948595,"byte_end":10948636,"line_start":402,"line_end":402,"column_start":1,"column_end":42}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948637,"byte_end":10948686,"line_start":403,"line_end":403,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948687,"byte_end":10948690,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948691,"byte_end":10948718,"line_start":405,"line_end":405,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948719,"byte_end":10948722,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948723,"byte_end":10948797,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948798,"byte_end":10948872,"line_start":408,"line_end":408,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts parts but will wait","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948873,"byte_end":10948949,"line_start":409,"line_end":409,"column_start":1,"column_end":77}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10948950,"byte_end":10949000,"line_start":410,"line_end":410,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949001,"byte_end":10949004,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949005,"byte_end":10949082,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949083,"byte_end":10949160,"line_start":413,"line_end":413,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949161,"byte_end":10949164,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949165,"byte_end":10949242,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949243,"byte_end":10949298,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949299,"byte_end":10949302,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949303,"byte_end":10949382,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949383,"byte_end":10949461,"line_start":419,"line_end":419,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949462,"byte_end":10949487,"line_start":420,"line_end":420,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949488,"byte_end":10949491,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949492,"byte_end":10949567,"line_start":422,"line_end":422,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949568,"byte_end":10949644,"line_start":423,"line_end":423,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949645,"byte_end":10949712,"line_start":424,"line_end":424,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949713,"byte_end":10949716,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949717,"byte_end":10949793,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949794,"byte_end":10949870,"line_start":427,"line_end":427,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949871,"byte_end":10949945,"line_start":428,"line_end":428,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10949946,"byte_end":10949973,"line_start":429,"line_end":429,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7478},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10952107,"byte_end":10952114,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":7479},{"krate":0,"index":7480},{"krate":0,"index":7481}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951154,"byte_end":10951242,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951243,"byte_end":10951246,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951247,"byte_end":10951254,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951255,"byte_end":10951275,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951276,"byte_end":10951299,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951300,"byte_end":10951329,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951330,"byte_end":10951333,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951334,"byte_end":10951368,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951369,"byte_end":10951392,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951393,"byte_end":10951396,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951397,"byte_end":10951442,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951443,"byte_end":10951488,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951489,"byte_end":10951509,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951510,"byte_end":10951542,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951543,"byte_end":10951597,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951598,"byte_end":10951643,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951644,"byte_end":10951677,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951678,"byte_end":10951714,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951715,"byte_end":10951751,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951752,"byte_end":10951787,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951788,"byte_end":10951802,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951803,"byte_end":10951814,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951815,"byte_end":10951820,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951821,"byte_end":10951895,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951896,"byte_end":10951934,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951935,"byte_end":10951990,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10951991,"byte_end":10952062,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10952063,"byte_end":10952070,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10952071,"byte_end":10952078,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6151},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10952577,"byte_end":10952580,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10952337,"byte_end":10952404,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10952409,"byte_end":10952412,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10952417,"byte_end":10952505,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10952510,"byte_end":10952565,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6152},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10953653,"byte_end":10953657,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10953179,"byte_end":10953239,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10953244,"byte_end":10953247,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10953252,"byte_end":10953328,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10953333,"byte_end":10953358,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10953363,"byte_end":10953366,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10953371,"byte_end":10953464,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10953469,"byte_end":10953562,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10953567,"byte_end":10953635,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":7490},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10955579,"byte_end":10955596,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10955443,"byte_end":10955543,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":6156},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10955844,"byte_end":10955853,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10955634,"byte_end":10955701,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10955706,"byte_end":10955709,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10955714,"byte_end":10955806,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10955811,"byte_end":10955832,"line_start":132,"line_end":132,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":6160},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":6161},{"krate":0,"index":6162},{"krate":0,"index":6163},{"krate":0,"index":6164},{"krate":0,"index":6165},{"krate":0,"index":6166},{"krate":0,"index":6167},{"krate":0,"index":6168},{"krate":0,"index":6169},{"krate":0,"index":6170},{"krate":0,"index":6171},{"krate":0,"index":6172},{"krate":0,"index":6173},{"krate":0,"index":14599},{"krate":0,"index":6174},{"krate":0,"index":6175},{"krate":0,"index":6176},{"krate":0,"index":14605},{"krate":0,"index":6177},{"krate":0,"index":6178},{"krate":0,"index":6179},{"krate":0,"index":6180},{"krate":0,"index":6181},{"krate":0,"index":6182},{"krate":0,"index":6185},{"krate":0,"index":7497},{"krate":0,"index":7501},{"krate":0,"index":7504},{"krate":0,"index":7514},{"krate":0,"index":7510},{"krate":0,"index":7511},{"krate":0,"index":7516},{"krate":0,"index":7528},{"krate":0,"index":7524},{"krate":0,"index":7525},{"krate":0,"index":6190},{"krate":0,"index":6196},{"krate":0,"index":6201},{"krate":0,"index":6207},{"krate":0,"index":6212},{"krate":0,"index":6216},{"krate":0,"index":6222},{"krate":0,"index":6226},{"krate":0,"index":6229},{"krate":0,"index":6233},{"krate":0,"index":6236},{"krate":0,"index":6239},{"krate":0,"index":6240},{"krate":0,"index":6242},{"krate":0,"index":6244},{"krate":0,"index":6246},{"krate":0,"index":6248},{"krate":0,"index":6250},{"krate":0,"index":6259},{"krate":0,"index":6261},{"krate":0,"index":6264},{"krate":0,"index":6267},{"krate":0,"index":6271},{"krate":0,"index":6291},{"krate":0,"index":6296},{"krate":0,"index":6301},{"krate":0,"index":6306},{"krate":0,"index":7530},{"krate":0,"index":7531},{"krate":0,"index":7535},{"krate":0,"index":6311},{"krate":0,"index":6317},{"krate":0,"index":6323},{"krate":0,"index":6326},{"krate":0,"index":6329},{"krate":0,"index":6334},{"krate":0,"index":6339},{"krate":0,"index":6341},{"krate":0,"index":6342},{"krate":0,"index":6344},{"krate":0,"index":6345}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10955895,"byte_end":10955975,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10955976,"byte_end":10955994,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10955995,"byte_end":10955998,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10955999,"byte_end":10956077,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956078,"byte_end":10956153,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956154,"byte_end":10956232,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956233,"byte_end":10956287,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956288,"byte_end":10956291,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956292,"byte_end":10956368,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956369,"byte_end":10956449,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956450,"byte_end":10956527,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956528,"byte_end":10956578,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956579,"byte_end":10956582,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956583,"byte_end":10956661,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956662,"byte_end":10956719,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956720,"byte_end":10956723,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956724,"byte_end":10956802,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956803,"byte_end":10956875,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956876,"byte_end":10956892,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956893,"byte_end":10956896,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956897,"byte_end":10956911,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956912,"byte_end":10956915,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956916,"byte_end":10956996,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are suspectible to the \"slow receiver\" problem.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10956997,"byte_end":10957076,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957077,"byte_end":10957154,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957155,"byte_end":10957233,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957234,"byte_end":10957241,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957242,"byte_end":10957245,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957246,"byte_end":10957323,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957324,"byte_end":10957399,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957400,"byte_end":10957480,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957481,"byte_end":10957484,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957485,"byte_end":10957557,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957558,"byte_end":10957636,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957637,"byte_end":10957713,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957714,"byte_end":10957773,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957774,"byte_end":10957777,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957778,"byte_end":10957856,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957857,"byte_end":10957931,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957932,"byte_end":10957968,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957969,"byte_end":10957972,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10957973,"byte_end":10958052,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958053,"byte_end":10958130,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958131,"byte_end":10958206,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958207,"byte_end":10958238,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958239,"byte_end":10958242,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958243,"byte_end":10958257,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958258,"byte_end":10958261,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958262,"byte_end":10958337,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958338,"byte_end":10958416,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958417,"byte_end":10958494,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958495,"byte_end":10958526,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958527,"byte_end":10958530,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958531,"byte_end":10958577,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958578,"byte_end":10958646,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958647,"byte_end":10958697,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958698,"byte_end":10958746,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::RecvError::Lagged","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958747,"byte_end":10958815,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::RecvError::Closed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958816,"byte_end":10958884,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958885,"byte_end":10958937,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958938,"byte_end":10958941,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958942,"byte_end":10958956,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958957,"byte_end":10958960,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958961,"byte_end":10958976,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958977,"byte_end":10958980,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958981,"byte_end":10958988,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10958989,"byte_end":10959020,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959021,"byte_end":10959024,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959025,"byte_end":10959043,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959044,"byte_end":10959065,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959066,"byte_end":10959117,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959118,"byte_end":10959155,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959156,"byte_end":10959159,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959160,"byte_end":10959193,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959194,"byte_end":10959248,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959249,"byte_end":10959303,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959304,"byte_end":10959315,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959316,"byte_end":10959319,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959320,"byte_end":10959353,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959354,"byte_end":10959408,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959409,"byte_end":10959463,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959464,"byte_end":10959475,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959476,"byte_end":10959479,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959480,"byte_end":10959509,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959510,"byte_end":10959539,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959540,"byte_end":10959545,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959546,"byte_end":10959553,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959554,"byte_end":10959557,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959558,"byte_end":10959574,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959575,"byte_end":10959578,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959579,"byte_end":10959586,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959587,"byte_end":10959618,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959619,"byte_end":10959622,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959623,"byte_end":10959641,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959642,"byte_end":10959663,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959664,"byte_end":10959713,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959714,"byte_end":10959717,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959718,"byte_end":10959747,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959748,"byte_end":10959777,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959778,"byte_end":10959807,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959808,"byte_end":10959811,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959812,"byte_end":10959849,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959850,"byte_end":10959892,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959893,"byte_end":10959896,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959897,"byte_end":10959966,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959967,"byte_end":10959970,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10959971,"byte_end":10960020,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960021,"byte_end":10960070,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960071,"byte_end":10960076,"line_start":109,"line_end":109,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":6182},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961273,"byte_end":10961279,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6184}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960480,"byte_end":10960526,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960527,"byte_end":10960530,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960531,"byte_end":10960591,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960592,"byte_end":10960619,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960620,"byte_end":10960623,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960624,"byte_end":10960638,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960639,"byte_end":10960642,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960643,"byte_end":10960650,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960651,"byte_end":10960682,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960683,"byte_end":10960686,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960687,"byte_end":10960705,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960706,"byte_end":10960727,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960728,"byte_end":10960779,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960780,"byte_end":10960817,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960818,"byte_end":10960821,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960822,"byte_end":10960855,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960856,"byte_end":10960910,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960911,"byte_end":10960965,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960966,"byte_end":10960977,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960978,"byte_end":10960981,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10960982,"byte_end":10961015,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961016,"byte_end":10961070,"line_start":146,"line_end":146,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961071,"byte_end":10961125,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961126,"byte_end":10961137,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961138,"byte_end":10961141,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961142,"byte_end":10961171,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961172,"byte_end":10961201,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961202,"byte_end":10961207,"line_start":152,"line_end":152,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961208,"byte_end":10961215,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961216,"byte_end":10961219,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961220,"byte_end":10961261,"line_start":155,"line_end":155,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6185},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962119,"byte_end":10962127,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6187},{"krate":0,"index":6188},{"krate":0,"index":6189}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961316,"byte_end":10961364,"line_start":160,"line_end":160,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961365,"byte_end":10961368,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961369,"byte_end":10961435,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961436,"byte_end":10961465,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961466,"byte_end":10961469,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961470,"byte_end":10961484,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961485,"byte_end":10961488,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961489,"byte_end":10961496,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961497,"byte_end":10961528,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961529,"byte_end":10961532,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961533,"byte_end":10961551,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961552,"byte_end":10961573,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961574,"byte_end":10961625,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961626,"byte_end":10961663,"line_start":173,"line_end":173,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961664,"byte_end":10961667,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961668,"byte_end":10961701,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961702,"byte_end":10961756,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961757,"byte_end":10961811,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961812,"byte_end":10961823,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961824,"byte_end":10961827,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961828,"byte_end":10961861,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961862,"byte_end":10961916,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961917,"byte_end":10961971,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961972,"byte_end":10961983,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961984,"byte_end":10961987,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10961988,"byte_end":10962017,"line_start":185,"line_end":185,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962018,"byte_end":10962047,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962048,"byte_end":10962053,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962054,"byte_end":10962061,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962062,"byte_end":10962065,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962066,"byte_end":10962107,"line_start":190,"line_end":190,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7497},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962670,"byte_end":10962679,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::broadcast::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::send`][Sender::send].","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::send`][Sender::send].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962373,"byte_end":10962426,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962427,"byte_end":10962430,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962431,"byte_end":10962503,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962504,"byte_end":10962581,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962582,"byte_end":10962641,"line_start":206,"line_end":206,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":7500},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962683,"byte_end":10962688,"line_start":208,"line_end":208,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::broadcast::SendError::0","value":"T","parent":{"krate":0,"index":7497},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7505},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963018,"byte_end":10963024,"line_start":218,"line_end":218,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":7504},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962921,"byte_end":10962996,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963001,"byte_end":10963013,"line_start":217,"line_end":217,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7507},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963230,"byte_end":10963236,"line_start":224,"line_end":224,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":7504},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963031,"byte_end":10963103,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963108,"byte_end":10963168,"line_start":221,"line_end":221,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963173,"byte_end":10963176,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963181,"byte_end":10963225,"line_start":223,"line_end":223,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":7504},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962905,"byte_end":10962914,"line_start":215,"line_end":215,"column_start":10,"column_end":19},"name":"RecvError","qualname":"::sync::broadcast::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":7505},{"krate":0,"index":7507}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962692,"byte_end":10962759,"line_start":210,"line_end":210,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962760,"byte_end":10962763,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962764,"byte_end":10962816,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10962817,"byte_end":10962867,"line_start":213,"line_end":213,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7517},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963623,"byte_end":10963628,"line_start":235,"line_end":235,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::broadcast::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7516},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`][Sender] handles, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963490,"byte_end":10963548,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/ [`Sender`][Sender] handles, so data may yet become available.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963553,"byte_end":10963618,"line_start":234,"line_end":234,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7519},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963732,"byte_end":10963738,"line_start":239,"line_end":239,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7516},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963635,"byte_end":10963710,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963715,"byte_end":10963727,"line_start":238,"line_end":238,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7521},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963987,"byte_end":10963993,"line_start":246,"line_end":246,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":7516},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963745,"byte_end":10963819,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963824,"byte_end":10963892,"line_start":242,"line_end":242,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963897,"byte_end":10963925,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963930,"byte_end":10963933,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963938,"byte_end":10963982,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":7516},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963471,"byte_end":10963483,"line_start":232,"line_end":232,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::broadcast::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`][Sender] handles, so data may yet become available.\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":7517},{"krate":0,"index":7519},{"krate":0,"index":7521}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963246,"byte_end":10963317,"line_start":227,"line_end":227,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963318,"byte_end":10963321,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963322,"byte_end":10963382,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10963383,"byte_end":10963433,"line_start":230,"line_end":230,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":6240},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10968294,"byte_end":10968301,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966682,"byte_end":10966758,"line_start":358,"line_end":358,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966759,"byte_end":10966808,"line_start":359,"line_end":359,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966809,"byte_end":10966812,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966813,"byte_end":10966882,"line_start":361,"line_end":361,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966883,"byte_end":10966933,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966934,"byte_end":10966937,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966938,"byte_end":10967012,"line_start":364,"line_end":364,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967013,"byte_end":10967088,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967089,"byte_end":10967157,"line_start":366,"line_end":366,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967158,"byte_end":10967161,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967162,"byte_end":10967238,"line_start":368,"line_end":368,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967239,"byte_end":10967320,"line_start":369,"line_end":369,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967321,"byte_end":10967360,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967361,"byte_end":10967364,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967365,"byte_end":10967411,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967412,"byte_end":10967480,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967481,"byte_end":10967531,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967532,"byte_end":10967584,"line_start":375,"line_end":375,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::SendError","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967585,"byte_end":10967637,"line_start":376,"line_end":376,"column_start":1,"column_end":53}},{"value":"/ [`RecvError`]: crate::sync::broadcast::RecvError","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967638,"byte_end":10967690,"line_start":377,"line_end":377,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967691,"byte_end":10967694,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967695,"byte_end":10967709,"line_start":379,"line_end":379,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967710,"byte_end":10967713,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967714,"byte_end":10967721,"line_start":381,"line_end":381,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967722,"byte_end":10967753,"line_start":382,"line_end":382,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967754,"byte_end":10967757,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967758,"byte_end":10967776,"line_start":384,"line_end":384,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967777,"byte_end":10967798,"line_start":385,"line_end":385,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967799,"byte_end":10967850,"line_start":386,"line_end":386,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967851,"byte_end":10967888,"line_start":387,"line_end":387,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967889,"byte_end":10967892,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967893,"byte_end":10967926,"line_start":389,"line_end":389,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967927,"byte_end":10967981,"line_start":390,"line_end":390,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10967982,"byte_end":10968036,"line_start":391,"line_end":391,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10968037,"byte_end":10968048,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10968049,"byte_end":10968052,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10968053,"byte_end":10968086,"line_start":394,"line_end":394,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10968087,"byte_end":10968141,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10968142,"byte_end":10968196,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10968197,"byte_end":10968208,"line_start":397,"line_end":397,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10968209,"byte_end":10968212,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10968213,"byte_end":10968242,"line_start":399,"line_end":399,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10968243,"byte_end":10968272,"line_start":400,"line_end":400,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10968273,"byte_end":10968278,"line_start":401,"line_end":401,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10968279,"byte_end":10968286,"line_start":402,"line_end":402,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6252},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971368,"byte_end":10971372,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969518,"byte_end":10969592,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969597,"byte_end":10969633,"line_start":452,"line_end":452,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969638,"byte_end":10969641,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969646,"byte_end":10969721,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969726,"byte_end":10969792,"line_start":455,"line_end":455,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969797,"byte_end":10969848,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969853,"byte_end":10969856,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969861,"byte_end":10969873,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969878,"byte_end":10969881,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969886,"byte_end":10969960,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969965,"byte_end":10970041,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970046,"byte_end":10970099,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970104,"byte_end":10970107,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970112,"byte_end":10970122,"line_start":464,"line_end":464,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970127,"byte_end":10970130,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970135,"byte_end":10970207,"line_start":466,"line_end":466,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970212,"byte_end":10970287,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970292,"byte_end":10970353,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970358,"byte_end":10970361,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970366,"byte_end":10970439,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970444,"byte_end":10970509,"line_start":471,"line_end":471,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970514,"byte_end":10970532,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970537,"byte_end":10970540,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970545,"byte_end":10970595,"line_start":474,"line_end":474,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970600,"byte_end":10970660,"line_start":475,"line_end":475,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970665,"byte_end":10970668,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970673,"byte_end":10970687,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970692,"byte_end":10970695,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970700,"byte_end":10970707,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970712,"byte_end":10970743,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970748,"byte_end":10970751,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970756,"byte_end":10970774,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970779,"byte_end":10970800,"line_start":483,"line_end":483,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970805,"byte_end":10970856,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970861,"byte_end":10970898,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970903,"byte_end":10970906,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970911,"byte_end":10970944,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10970949,"byte_end":10971003,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971008,"byte_end":10971062,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971067,"byte_end":10971078,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971083,"byte_end":10971086,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971091,"byte_end":10971124,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971129,"byte_end":10971183,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971188,"byte_end":10971242,"line_start":494,"line_end":494,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971247,"byte_end":10971258,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971263,"byte_end":10971266,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971271,"byte_end":10971300,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971305,"byte_end":10971334,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971339,"byte_end":10971344,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971349,"byte_end":10971356,"line_start":500,"line_end":500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6254},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972132,"byte_end":10972141,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971537,"byte_end":10971614,"line_start":506,"line_end":506,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971619,"byte_end":10971648,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971653,"byte_end":10971656,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971661,"byte_end":10971675,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971680,"byte_end":10971683,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971688,"byte_end":10971695,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971700,"byte_end":10971731,"line_start":512,"line_end":512,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971736,"byte_end":10971739,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971744,"byte_end":10971762,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971767,"byte_end":10971788,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971793,"byte_end":10971840,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971845,"byte_end":10971848,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971853,"byte_end":10971880,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971885,"byte_end":10971914,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971919,"byte_end":10971922,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971927,"byte_end":10971963,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971968,"byte_end":10971971,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10971976,"byte_end":10972005,"line_start":523,"line_end":523,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972010,"byte_end":10972013,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972018,"byte_end":10972063,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972068,"byte_end":10972098,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972103,"byte_end":10972108,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972113,"byte_end":10972120,"line_start":528,"line_end":528,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6255},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973728,"byte_end":10973742,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972576,"byte_end":10972618,"line_start":550,"line_end":550,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972623,"byte_end":10972626,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972631,"byte_end":10972707,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972712,"byte_end":10972785,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972790,"byte_end":10972810,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972815,"byte_end":10972818,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972823,"byte_end":10972833,"line_start":556,"line_end":556,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972838,"byte_end":10972841,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972846,"byte_end":10972916,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972921,"byte_end":10972989,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10972994,"byte_end":10973007,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973012,"byte_end":10973015,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973020,"byte_end":10973072,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973077,"byte_end":10973127,"line_start":563,"line_end":563,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973132,"byte_end":10973178,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973183,"byte_end":10973243,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973248,"byte_end":10973296,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973301,"byte_end":10973304,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973309,"byte_end":10973323,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973328,"byte_end":10973331,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973336,"byte_end":10973343,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973348,"byte_end":10973379,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973384,"byte_end":10973387,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973392,"byte_end":10973410,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973415,"byte_end":10973436,"line_start":574,"line_end":574,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973441,"byte_end":10973489,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973494,"byte_end":10973497,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973502,"byte_end":10973545,"line_start":577,"line_end":577,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973550,"byte_end":10973553,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973558,"byte_end":10973596,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973601,"byte_end":10973604,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973609,"byte_end":10973652,"line_start":581,"line_end":581,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973657,"byte_end":10973660,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973665,"byte_end":10973694,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973699,"byte_end":10973704,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10973709,"byte_end":10973716,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6273},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982391,"byte_end":10982399,"line_start":830,"line_end":830,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10980797,"byte_end":10980870,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10980875,"byte_end":10980878,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10980883,"byte_end":10980955,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10980960,"byte_end":10980984,"line_start":794,"line_end":794,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10980989,"byte_end":10980992,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of one","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10980997,"byte_end":10981077,"line_start":796,"line_end":796,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981082,"byte_end":10981156,"line_start":797,"line_end":797,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981161,"byte_end":10981164,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981169,"byte_end":10981242,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981247,"byte_end":10981321,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981326,"byte_end":10981329,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981334,"byte_end":10981410,"line_start":802,"line_end":802,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981415,"byte_end":10981491,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981496,"byte_end":10981567,"line_start":804,"line_end":804,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981572,"byte_end":10981645,"line_start":805,"line_end":805,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981650,"byte_end":10981723,"line_start":806,"line_end":806,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981728,"byte_end":10981799,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981804,"byte_end":10981856,"line_start":808,"line_end":808,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981861,"byte_end":10981864,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981869,"byte_end":10981921,"line_start":810,"line_end":810,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981926,"byte_end":10981976,"line_start":811,"line_end":811,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981981,"byte_end":10981984,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10981989,"byte_end":10982003,"line_start":813,"line_end":813,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982008,"byte_end":10982011,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982016,"byte_end":10982023,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982028,"byte_end":10982059,"line_start":816,"line_end":816,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982064,"byte_end":10982067,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982072,"byte_end":10982090,"line_start":818,"line_end":818,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982095,"byte_end":10982116,"line_start":819,"line_end":819,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982121,"byte_end":10982171,"line_start":820,"line_end":820,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982176,"byte_end":10982179,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982184,"byte_end":10982224,"line_start":822,"line_end":822,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982229,"byte_end":10982232,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982237,"byte_end":10982266,"line_start":824,"line_end":824,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982271,"byte_end":10982274,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982279,"byte_end":10982322,"line_start":826,"line_end":826,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982327,"byte_end":10982357,"line_start":827,"line_end":827,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982362,"byte_end":10982367,"line_start":828,"line_end":828,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982372,"byte_end":10982379,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6274},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982641,"byte_end":10982650,"line_start":837,"line_end":837,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.21\", note = \"use async fn recv()\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10982568,"byte_end":10982629,"line_start":836,"line_end":836,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6288},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986681,"byte_end":10986685,"line_start":951,"line_end":951,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10984465,"byte_end":10984511,"line_start":887,"line_end":887,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10984516,"byte_end":10984519,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10984524,"byte_end":10984592,"line_start":889,"line_end":889,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10984597,"byte_end":10984629,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10984634,"byte_end":10984637,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10984642,"byte_end":10984712,"line_start":892,"line_end":892,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10984717,"byte_end":10984791,"line_start":893,"line_end":893,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10984796,"byte_end":10984799,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10984804,"byte_end":10984880,"line_start":895,"line_end":895,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10984885,"byte_end":10984961,"line_start":896,"line_end":896,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10984966,"byte_end":10985034,"line_start":897,"line_end":897,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985039,"byte_end":10985112,"line_start":898,"line_end":898,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985117,"byte_end":10985186,"line_start":899,"line_end":899,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985191,"byte_end":10985236,"line_start":900,"line_end":900,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985241,"byte_end":10985244,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985249,"byte_end":10985299,"line_start":902,"line_end":902,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985304,"byte_end":10985356,"line_start":903,"line_end":903,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985361,"byte_end":10985364,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985369,"byte_end":10985383,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985388,"byte_end":10985391,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985396,"byte_end":10985403,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985408,"byte_end":10985439,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985444,"byte_end":10985447,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985452,"byte_end":10985470,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985475,"byte_end":10985496,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985501,"byte_end":10985552,"line_start":912,"line_end":912,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985557,"byte_end":10985594,"line_start":913,"line_end":913,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985599,"byte_end":10985602,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985607,"byte_end":10985640,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985645,"byte_end":10985699,"line_start":916,"line_end":916,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985704,"byte_end":10985758,"line_start":917,"line_end":917,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985763,"byte_end":10985774,"line_start":918,"line_end":918,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985779,"byte_end":10985782,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985787,"byte_end":10985820,"line_start":920,"line_end":920,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985825,"byte_end":10985879,"line_start":921,"line_end":921,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985884,"byte_end":10985938,"line_start":922,"line_end":922,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985943,"byte_end":10985954,"line_start":923,"line_end":923,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985959,"byte_end":10985962,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10985967,"byte_end":10985996,"line_start":925,"line_end":925,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986001,"byte_end":10986030,"line_start":926,"line_end":926,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986035,"byte_end":10986040,"line_start":927,"line_end":927,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986045,"byte_end":10986052,"line_start":928,"line_end":928,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986057,"byte_end":10986060,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986065,"byte_end":10986081,"line_start":930,"line_end":930,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986086,"byte_end":10986089,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986094,"byte_end":10986101,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986106,"byte_end":10986137,"line_start":933,"line_end":933,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986142,"byte_end":10986145,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986150,"byte_end":10986168,"line_start":935,"line_end":935,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986173,"byte_end":10986194,"line_start":936,"line_end":936,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986199,"byte_end":10986248,"line_start":937,"line_end":937,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986253,"byte_end":10986256,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986261,"byte_end":10986290,"line_start":939,"line_end":939,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986295,"byte_end":10986324,"line_start":940,"line_end":940,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986329,"byte_end":10986358,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986363,"byte_end":10986366,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986371,"byte_end":10986408,"line_start":943,"line_end":943,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986413,"byte_end":10986455,"line_start":944,"line_end":944,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986460,"byte_end":10986463,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986468,"byte_end":10986537,"line_start":946,"line_end":946,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986542,"byte_end":10986545,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986550,"byte_end":10986599,"line_start":948,"line_end":948,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986604,"byte_end":10986653,"line_start":949,"line_end":949,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986658,"byte_end":10986663,"line_start":950,"line_end":950,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":7533},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10991339,"byte_end":10991350,"line_start":1110,"line_end":1110,"column_start":16,"column_end":27},"name":"into_stream","qualname":"<Receiver<T>>::into_stream","value":"pub fn into_stream(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Convert the receiver into a `Stream`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6347},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":6348},{"krate":0,"index":6421},{"krate":0,"index":6481},{"krate":0,"index":6482},{"krate":0,"index":6483},{"krate":0,"index":6484},{"krate":0,"index":6485},{"krate":0,"index":6649},{"krate":0,"index":6695},{"krate":0,"index":6742},{"krate":0,"index":6743},{"krate":0,"index":6744},{"krate":0,"index":6745},{"krate":0,"index":6746},{"krate":0,"index":6773}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995004,"byte_end":10995073,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995074,"byte_end":10995097,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995098,"byte_end":10995101,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Similar to `std`, channel creation provides [`Receiver`] and [`Sender`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995102,"byte_end":10995177,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ handles. [`Receiver`] implements `Stream` and allows a task to read values","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995178,"byte_end":10995256,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ out of the channel. If there is no message to read, the current task will be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995257,"byte_end":10995337,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ notified when a new value is sent. If the channel is at capacity, the send","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995338,"byte_end":10995416,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ is rejected and the task will be notified when additional capacity is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995417,"byte_end":10995490,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ available. In other words, the channel provides backpressure.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995491,"byte_end":10995556,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995557,"byte_end":10995560,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995561,"byte_end":10995641,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995642,"byte_end":10995720,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995721,"byte_end":10995797,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995798,"byte_end":10995877,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method never does any kind of sleeping.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995878,"byte_end":10995957,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10995958,"byte_end":10996029,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996030,"byte_end":10996052,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996053,"byte_end":10996056,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996057,"byte_end":10996076,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996077,"byte_end":10996080,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996081,"byte_end":10996147,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996148,"byte_end":10996228,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996229,"byte_end":10996306,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996307,"byte_end":10996310,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996311,"byte_end":10996381,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996382,"byte_end":10996461,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996462,"byte_end":10996485,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996486,"byte_end":10996489,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996490,"byte_end":10996510,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996511,"byte_end":10996514,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996515,"byte_end":10996595,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996596,"byte_end":10996676,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996677,"byte_end":10996755,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996756,"byte_end":10996828,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996829,"byte_end":10996903,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996904,"byte_end":10996916,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996917,"byte_end":10996920,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996921,"byte_end":10996968,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996969,"byte_end":10996972,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10996973,"byte_end":10997054,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997055,"byte_end":10997090,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997091,"byte_end":10997094,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997095,"byte_end":10997175,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. To call the async","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997176,"byte_end":10997256,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ [`send`][bounded-send] or [`recv`][bounded-recv] methods in sync code, you","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997257,"byte_end":10997335,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ will need to use [`Handle::block_on`], which allow you to execute an async","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997336,"byte_end":10997414,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ method in synchronous code. This is necessary because a bounded channel may","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997415,"byte_end":10997494,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ need to wait for additional capacity to become available.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997495,"byte_end":10997556,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997557,"byte_end":10997560,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997561,"byte_end":10997641,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997642,"byte_end":10997720,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997721,"byte_end":10997787,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997788,"byte_end":10997870,"line_start":55,"line_end":55,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997871,"byte_end":10997935,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997936,"byte_end":10997939,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997940,"byte_end":10997981,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10997982,"byte_end":10998027,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10998028,"byte_end":10998081,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10998082,"byte_end":10998137,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10998138,"byte_end":10998197,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10998198,"byte_end":10998258,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10998259,"byte_end":10998304,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10998305,"byte_end":10998395,"line_start":65,"line_end":65,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":6433},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012260,"byte_end":11012266,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6435}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012135,"byte_end":11012180,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012181,"byte_end":11012184,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012185,"byte_end":11012248,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6442},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012775,"byte_end":11012783,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6444}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012647,"byte_end":11012695,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012696,"byte_end":11012699,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012700,"byte_end":11012763,"line_start":38,"line_end":38,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":6448},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014171,"byte_end":11014178,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks,\n returning the sender/receiver halves.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013064,"byte_end":11013144,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ returning the sender/receiver halves.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013145,"byte_end":11013186,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013187,"byte_end":11013190,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013191,"byte_end":11013268,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013269,"byte_end":11013294,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013295,"byte_end":11013298,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013299,"byte_end":11013378,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013379,"byte_end":11013427,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013428,"byte_end":11013431,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013432,"byte_end":11013511,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013512,"byte_end":11013587,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013588,"byte_end":11013654,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013655,"byte_end":11013658,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013659,"byte_end":11013673,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013674,"byte_end":11013677,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013678,"byte_end":11013689,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013690,"byte_end":11013716,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013717,"byte_end":11013720,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013721,"byte_end":11013739,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013740,"byte_end":11013761,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013762,"byte_end":11013812,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013813,"byte_end":11013816,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013817,"byte_end":11013850,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013851,"byte_end":11013879,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013880,"byte_end":11013930,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013931,"byte_end":11013980,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11013981,"byte_end":11014008,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014009,"byte_end":11014026,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014027,"byte_end":11014040,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014041,"byte_end":11014052,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014053,"byte_end":11014056,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014057,"byte_end":11014102,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014103,"byte_end":11014139,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014140,"byte_end":11014149,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014150,"byte_end":11014155,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014156,"byte_end":11014163,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6454},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015860,"byte_end":11015864,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014778,"byte_end":11014824,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014829,"byte_end":11014832,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014837,"byte_end":11014909,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014914,"byte_end":11014968,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014973,"byte_end":11014976,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014981,"byte_end":11014995,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015000,"byte_end":11015003,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015008,"byte_end":11015015,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015020,"byte_end":11015046,"line_start":116,"line_end":116,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015051,"byte_end":11015054,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015059,"byte_end":11015077,"line_start":118,"line_end":118,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015082,"byte_end":11015103,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015108,"byte_end":11015158,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015163,"byte_end":11015166,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015171,"byte_end":11015204,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015209,"byte_end":11015253,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015258,"byte_end":11015269,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015274,"byte_end":11015277,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015282,"byte_end":11015333,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015338,"byte_end":11015380,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015385,"byte_end":11015390,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015395,"byte_end":11015402,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015407,"byte_end":11015410,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015415,"byte_end":11015439,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015444,"byte_end":11015447,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015452,"byte_end":11015459,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015464,"byte_end":11015490,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015495,"byte_end":11015498,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015503,"byte_end":11015521,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015526,"byte_end":11015547,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015552,"byte_end":11015602,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015607,"byte_end":11015610,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015615,"byte_end":11015655,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015660,"byte_end":11015700,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015705,"byte_end":11015708,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015713,"byte_end":11015764,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015769,"byte_end":11015820,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015825,"byte_end":11015830,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11015835,"byte_end":11015842,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6459},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016030,"byte_end":11016039,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6460},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016695,"byte_end":11016703,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016132,"byte_end":11016205,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016210,"byte_end":11016213,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016218,"byte_end":11016290,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016295,"byte_end":11016366,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016371,"byte_end":11016424,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016429,"byte_end":11016432,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016437,"byte_end":11016509,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016514,"byte_end":11016538,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016543,"byte_end":11016546,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016551,"byte_end":11016621,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016626,"byte_end":11016683,"line_start":168,"line_end":168,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6461},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017021,"byte_end":11017026,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016784,"byte_end":11016848,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016853,"byte_end":11016856,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016861,"byte_end":11016936,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11016941,"byte_end":11017009,"line_start":176,"line_end":176,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6467},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019116,"byte_end":11019120,"line_start":244,"line_end":244,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017472,"byte_end":11017523,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017528,"byte_end":11017531,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017536,"byte_end":11017612,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017617,"byte_end":11017693,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017698,"byte_end":11017772,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017777,"byte_end":11017852,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017857,"byte_end":11017926,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017931,"byte_end":11018003,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018008,"byte_end":11018039,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018044,"byte_end":11018047,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018052,"byte_end":11018064,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018069,"byte_end":11018072,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018077,"byte_end":11018150,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018155,"byte_end":11018229,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018234,"byte_end":11018294,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018299,"byte_end":11018302,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018307,"byte_end":11018337,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018342,"byte_end":11018368,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018373,"byte_end":11018376,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018381,"byte_end":11018395,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018400,"byte_end":11018403,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018408,"byte_end":11018478,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018483,"byte_end":11018522,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018527,"byte_end":11018530,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018535,"byte_end":11018546,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018551,"byte_end":11018577,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018582,"byte_end":11018585,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018590,"byte_end":11018608,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018613,"byte_end":11018634,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018639,"byte_end":11018687,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018692,"byte_end":11018695,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018700,"byte_end":11018733,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018738,"byte_end":11018766,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018771,"byte_end":11018821,"line_start":232,"line_end":232,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018826,"byte_end":11018875,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018880,"byte_end":11018907,"line_start":234,"line_end":234,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018912,"byte_end":11018929,"line_start":235,"line_end":235,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018934,"byte_end":11018947,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018952,"byte_end":11018963,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018968,"byte_end":11018971,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11018976,"byte_end":11019021,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019026,"byte_end":11019062,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019067,"byte_end":11019076,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019081,"byte_end":11019086,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019091,"byte_end":11019098,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6472},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021853,"byte_end":11021861,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019541,"byte_end":11019600,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019605,"byte_end":11019608,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019613,"byte_end":11019692,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019697,"byte_end":11019772,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019777,"byte_end":11019855,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019860,"byte_end":11019902,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019907,"byte_end":11019910,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function may be paired with [`poll_ready`] in order to wait for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019915,"byte_end":11019987,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ channel capacity before trying to send a value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11019992,"byte_end":11020043,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020048,"byte_end":11020051,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020056,"byte_end":11020068,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020073,"byte_end":11020076,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020081,"byte_end":11020152,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020157,"byte_end":11020233,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020238,"byte_end":11020260,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020265,"byte_end":11020268,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020273,"byte_end":11020346,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020351,"byte_end":11020425,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020430,"byte_end":11020490,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020495,"byte_end":11020498,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020503,"byte_end":11020529,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ [`poll_ready`]: Sender::poll_ready","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020534,"byte_end":11020572,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ [`channel`]: channel","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020577,"byte_end":11020601,"line_start":280,"line_end":280,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020606,"byte_end":11020636,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020641,"byte_end":11020644,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020649,"byte_end":11020663,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020668,"byte_end":11020671,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020676,"byte_end":11020683,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020688,"byte_end":11020714,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020719,"byte_end":11020722,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020727,"byte_end":11020745,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020750,"byte_end":11020771,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020776,"byte_end":11020822,"line_start":290,"line_end":290,"column_start":5,"column_end":51}},{"value":"/     let (mut tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020827,"byte_end":11020876,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/     let mut tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020881,"byte_end":11020915,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020920,"byte_end":11020923,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020928,"byte_end":11020961,"line_start":294,"line_end":294,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11020966,"byte_end":11021005,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021010,"byte_end":11021049,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021054,"byte_end":11021116,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021121,"byte_end":11021132,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021137,"byte_end":11021140,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021145,"byte_end":11021178,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021183,"byte_end":11021232,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021237,"byte_end":11021284,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021289,"byte_end":11021325,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021330,"byte_end":11021341,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021346,"byte_end":11021349,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021354,"byte_end":11021374,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021379,"byte_end":11021418,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021423,"byte_end":11021468,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021473,"byte_end":11021476,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021481,"byte_end":11021520,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021525,"byte_end":11021570,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021575,"byte_end":11021578,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021583,"byte_end":11021632,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021637,"byte_end":11021668,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021673,"byte_end":11021735,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021740,"byte_end":11021805,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021810,"byte_end":11021819,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021824,"byte_end":11021829,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021834,"byte_end":11021841,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6473},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023678,"byte_end":11023690,"line_start":372,"line_end":372,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ mut Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11021982,"byte_end":11022062,"line_start":325,"line_end":325,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022067,"byte_end":11022070,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022075,"byte_end":11022152,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022157,"byte_end":11022235,"line_start":328,"line_end":328,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022240,"byte_end":11022288,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022293,"byte_end":11022296,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022301,"byte_end":11022327,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022332,"byte_end":11022335,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022340,"byte_end":11022352,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022357,"byte_end":11022360,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022365,"byte_end":11022438,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022443,"byte_end":11022500,"line_start":336,"line_end":336,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022505,"byte_end":11022586,"line_start":337,"line_end":337,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022591,"byte_end":11022594,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022599,"byte_end":11022629,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022634,"byte_end":11022660,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022665,"byte_end":11022668,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022673,"byte_end":11022687,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022692,"byte_end":11022695,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022700,"byte_end":11022778,"line_start":344,"line_end":344,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022783,"byte_end":11022854,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022859,"byte_end":11022862,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022867,"byte_end":11022878,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022883,"byte_end":11022909,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022914,"byte_end":11022957,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022962,"byte_end":11022965,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022970,"byte_end":11022988,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11022993,"byte_end":11023014,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023019,"byte_end":11023067,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023072,"byte_end":11023075,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023080,"byte_end":11023113,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023118,"byte_end":11023146,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023151,"byte_end":11023237,"line_start":357,"line_end":357,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023242,"byte_end":11023295,"line_start":358,"line_end":358,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023300,"byte_end":11023327,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023332,"byte_end":11023349,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023354,"byte_end":11023367,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023372,"byte_end":11023383,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023388,"byte_end":11023391,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023396,"byte_end":11023441,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023446,"byte_end":11023482,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/         delay_for(Duration::from_millis(200)).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023487,"byte_end":11023543,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023548,"byte_end":11023557,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023562,"byte_end":11023567,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023572,"byte_end":11023579,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11023584,"byte_end":11023608,"line_start":370,"line_end":370,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":6478},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025474,"byte_end":11025484,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), ClosedError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11024393,"byte_end":11024475,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11024480,"byte_end":11024483,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, then `Poll::Pending` is returned and the task is notified when a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11024488,"byte_end":11024580,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ slot becomes available.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11024585,"byte_end":11024612,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11024617,"byte_end":11024620,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a call to `try_send` will succeed unless","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11024625,"byte_end":11024718,"line_start":401,"line_end":401,"column_start":5,"column_end":98}},{"value":"/ the channel has since been closed. To provide this guarantee, the channel reserves one slot","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11024723,"byte_end":11024818,"line_start":402,"line_end":402,"column_start":5,"column_end":100}},{"value":"/ in the channel for the coming send. This reserved slot is not available to other `Sender`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11024823,"byte_end":11024916,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ instances, so you need to be careful to not end up with deadlocks by blocking after calling","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11024921,"byte_end":11025016,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ `poll_ready` but before sending an element.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025021,"byte_end":11025068,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025073,"byte_end":11025076,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If, after `poll_ready` succeeds, you decide you do not wish to send an item after all, you","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025081,"byte_end":11025175,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ can use [`disarm`](Sender::disarm) to release the reserved slot.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025180,"byte_end":11025248,"line_start":408,"line_end":408,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025253,"byte_end":11025256,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Until an item is sent or [`disarm`](Sender::disarm) is called, repeated calls to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025261,"byte_end":11025345,"line_start":410,"line_end":410,"column_start":5,"column_end":89}},{"value":"/ `poll_ready` will return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))` if channel","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025350,"byte_end":11025443,"line_start":411,"line_end":411,"column_start":5,"column_end":98}},{"value":"/ is closed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025448,"byte_end":11025462,"line_start":412,"line_end":412,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":6480},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11028040,"byte_end":11028046,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"disarm","qualname":"<Sender<T>>::disarm","value":"pub fn disarm(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Undo a successful call to `poll_ready`.","sig":null,"attributes":[{"value":"/ Undo a successful call to `poll_ready`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025629,"byte_end":11025672,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025677,"byte_end":11025680,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Once a call to `poll_ready` returns `Poll::Ready(Ok(()))`, it holds up one slot in the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025685,"byte_end":11025775,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ channel to make room for the coming send. `disarm` allows you to give up that slot if you","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025780,"byte_end":11025873,"line_start":420,"line_end":420,"column_start":5,"column_end":98}},{"value":"/ decide you do not wish to send an item after all. After calling `disarm`, you must call","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025878,"byte_end":11025969,"line_start":421,"line_end":421,"column_start":5,"column_end":96}},{"value":"/ `poll_ready` until it returns `Poll::Ready(Ok(()))` before attempting to send again.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11025974,"byte_end":11026062,"line_start":422,"line_end":422,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026067,"byte_end":11026070,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if no slot is reserved for this sender (usually because `poll_ready` was","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026075,"byte_end":11026167,"line_start":424,"line_end":424,"column_start":5,"column_end":97}},{"value":"/ not previously called, or did not succeed).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026172,"byte_end":11026219,"line_start":425,"line_end":425,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026224,"byte_end":11026227,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Motivation","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026232,"byte_end":11026248,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026253,"byte_end":11026256,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Since `poll_ready` takes up one of the finite number of slots in a bounded channel, callers","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026261,"byte_end":11026356,"line_start":429,"line_end":429,"column_start":5,"column_end":100}},{"value":"/ need to send an item shortly after `poll_ready` succeeds. If they do not, idle senders may","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026361,"byte_end":11026455,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ take up all the slots of the channel, and prevent active senders from getting any requests","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026460,"byte_end":11026554,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/ through. Consider this code that forwards from one channel to another:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026559,"byte_end":11026633,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026638,"byte_end":11026641,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026646,"byte_end":11026664,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026669,"byte_end":11026679,"line_start":435,"line_end":435,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026684,"byte_end":11026717,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/   if let Some(item) = ready!(rx.poll_recv(cx)) {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026722,"byte_end":11026774,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026779,"byte_end":11026806,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026811,"byte_end":11026825,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026830,"byte_end":11026844,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026849,"byte_end":11026856,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026861,"byte_end":11026866,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026871,"byte_end":11026878,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026883,"byte_end":11026886,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If many such forwarders exist, and they all forward into a single (cloned) `Sender`, then","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026891,"byte_end":11026984,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ any number of forwarders may be waiting for `rx.poll_recv` at the same time. While they do,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11026989,"byte_end":11027084,"line_start":446,"line_end":446,"column_start":5,"column_end":100}},{"value":"/ they are effectively each reducing the channel's capacity by 1. If enough of these","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027089,"byte_end":11027175,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ forwarders are idle, forwarders whose `rx` _do_ have elements will be unable to find a spot","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027180,"byte_end":11027275,"line_start":448,"line_end":448,"column_start":5,"column_end":100}},{"value":"/ for them through `poll_ready`, and the system will deadlock.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027280,"byte_end":11027344,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027349,"byte_end":11027352,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `disarm` solves this problem by allowing you to give up the reserved slot if you find that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027357,"byte_end":11027451,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ you have to block. We can then fix the code above by writing:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027456,"byte_end":11027521,"line_start":452,"line_end":452,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027526,"byte_end":11027529,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027534,"byte_end":11027552,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027557,"byte_end":11027567,"line_start":455,"line_end":455,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027572,"byte_end":11027605,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/   let item = rx.poll_recv(cx);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027610,"byte_end":11027644,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/   if let Poll::Ready(Ok(_)) = item {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027649,"byte_end":11027689,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/     // we're going to send the item below, so don't disarm","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027694,"byte_end":11027756,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027761,"byte_end":11027775,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/     // give up our send slot, we won't need it for a while","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027780,"byte_end":11027842,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/     tx.disarm();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027847,"byte_end":11027867,"line_start":462,"line_end":462,"column_start":5,"column_end":25}},{"value":"/   }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027872,"byte_end":11027879,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/   if let Some(item) = ready!(item) {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027884,"byte_end":11027924,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027929,"byte_end":11027956,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027961,"byte_end":11027975,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027980,"byte_end":11027994,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11027999,"byte_end":11028006,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11028011,"byte_end":11028016,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11028021,"byte_end":11028028,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":6531},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11030038,"byte_end":11030044,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":6530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6705},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11053641,"byte_end":11053656,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":6707}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11053483,"byte_end":11053537,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11053538,"byte_end":11053541,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11053542,"byte_end":11053574,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11053575,"byte_end":11053629,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6714},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054234,"byte_end":11054251,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":6716}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054073,"byte_end":11054130,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054131,"byte_end":11054134,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054135,"byte_end":11054167,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054168,"byte_end":11054222,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":6720},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055062,"byte_end":11055079,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054550,"byte_end":11054626,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054627,"byte_end":11054637,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054638,"byte_end":11054641,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054642,"byte_end":11054722,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054723,"byte_end":11054802,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054803,"byte_end":11054816,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054817,"byte_end":11054820,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054821,"byte_end":11054900,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054901,"byte_end":11054977,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054978,"byte_end":11055054,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":6726},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055527,"byte_end":11055536,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6727},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056699,"byte_end":11056703,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055629,"byte_end":11055675,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055680,"byte_end":11055683,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055688,"byte_end":11055760,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055765,"byte_end":11055819,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055824,"byte_end":11055827,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055832,"byte_end":11055846,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055851,"byte_end":11055854,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055859,"byte_end":11055866,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055871,"byte_end":11055897,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055902,"byte_end":11055905,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055910,"byte_end":11055928,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055933,"byte_end":11055954,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055959,"byte_end":11056012,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056017,"byte_end":11056020,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056025,"byte_end":11056058,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056063,"byte_end":11056101,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056106,"byte_end":11056117,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056122,"byte_end":11056125,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056130,"byte_end":11056181,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056186,"byte_end":11056228,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056233,"byte_end":11056238,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056243,"byte_end":11056250,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056255,"byte_end":11056258,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056263,"byte_end":11056287,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056292,"byte_end":11056295,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056300,"byte_end":11056307,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056312,"byte_end":11056338,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056343,"byte_end":11056346,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056351,"byte_end":11056369,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056374,"byte_end":11056395,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056400,"byte_end":11056453,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056458,"byte_end":11056461,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056466,"byte_end":11056500,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056505,"byte_end":11056539,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056544,"byte_end":11056547,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056552,"byte_end":11056603,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056608,"byte_end":11056659,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056664,"byte_end":11056669,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056674,"byte_end":11056681,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6732},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057388,"byte_end":11057396,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056825,"byte_end":11056898,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056903,"byte_end":11056906,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056911,"byte_end":11056983,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11056988,"byte_end":11057059,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057064,"byte_end":11057117,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057122,"byte_end":11057125,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057130,"byte_end":11057202,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057207,"byte_end":11057231,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057236,"byte_end":11057239,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057244,"byte_end":11057314,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057319,"byte_end":11057376,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6733},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057714,"byte_end":11057719,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057477,"byte_end":11057541,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057546,"byte_end":11057549,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057554,"byte_end":11057629,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057634,"byte_end":11057702,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6741},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058842,"byte_end":11058846,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058154,"byte_end":11058228,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058233,"byte_end":11058236,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058241,"byte_end":11058326,"line_start":166,"line_end":166,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058331,"byte_end":11058412,"line_start":167,"line_end":167,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058417,"byte_end":11058485,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058490,"byte_end":11058493,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058498,"byte_end":11058571,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058576,"byte_end":11058647,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058652,"byte_end":11058729,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058734,"byte_end":11058737,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058742,"byte_end":11058781,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058786,"byte_end":11058830,"line_start":175,"line_end":175,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":6746},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","parent":null,"children":[{"krate":0,"index":6747},{"krate":0,"index":6748},{"krate":0,"index":7561},{"krate":0,"index":7565},{"krate":0,"index":6749},{"krate":0,"index":6752},{"krate":0,"index":7568},{"krate":0,"index":7576},{"krate":0,"index":6754},{"krate":0,"index":6756},{"krate":0,"index":6759},{"krate":0,"index":7579},{"krate":0,"index":7582},{"krate":0,"index":6762},{"krate":0,"index":6764},{"krate":0,"index":7584},{"krate":0,"index":7592},{"krate":0,"index":7589},{"krate":0,"index":7590},{"krate":0,"index":6765},{"krate":0,"index":6767},{"krate":0,"index":7594},{"krate":0,"index":7597},{"krate":0,"index":6768},{"krate":0,"index":6770},{"krate":0,"index":6772},{"krate":0,"index":7604},{"krate":0,"index":7612},{"krate":0,"index":7599},{"krate":0,"index":7601}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11058964,"byte_end":11058987,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7561},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059091,"byte_end":11059100,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059027,"byte_end":11059062,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7564},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059104,"byte_end":11059109,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7570},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059653,"byte_end":11059657,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":7568},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059521,"byte_end":11059589,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059594,"byte_end":11059648,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7573},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059758,"byte_end":11059764,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":7568},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059667,"byte_end":11059736,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059741,"byte_end":11059753,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":7568},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059499,"byte_end":11059511,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":7570},{"krate":0,"index":7573}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059353,"byte_end":11059424,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059425,"byte_end":11059472,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":7579},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060402,"byte_end":11060411,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060340,"byte_end":11060373,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7585},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060916,"byte_end":11060921,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7584},"children":[],"decl_id":null,"docs":" This channel is currently empty, but the Sender(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This channel is currently empty, but the Sender(s) have not yet","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060788,"byte_end":11060855,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060860,"byte_end":11060911,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7587},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061041,"byte_end":11061047,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7584},"children":[],"decl_id":null,"docs":" The channel's sending half has been closed, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The channel's sending half has been closed, and there will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060927,"byte_end":11060989,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ never be any more data received on it.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060994,"byte_end":11061036,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":7584},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060769,"byte_end":11060781,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// This channel is currently empty, but the Sender(s) have not yet\n    /// disconnected, so data may yet become available.\n    Empty,\n\n    /// The channel's sending half has been closed, and there will\n    /// never be any more data received on it.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":7585},{"krate":0,"index":7587}],"decl_id":null,"docs":" This enumeration is the list of the possible reasons that try_recv\n could not return data when called.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible reasons that try_recv","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060622,"byte_end":11060692,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ could not return data when called.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060693,"byte_end":11060731,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":7594},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061538,"byte_end":11061549,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"ClosedError","qualname":"::sync::mpsc::error::ClosedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).\n","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061437,"byte_end":11061509,"line_start":99,"line_end":99,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7606},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11062155,"byte_end":11062162,"line_start":125,"line_end":125,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":7604},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7609},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11062275,"byte_end":11062281,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":7604},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7604},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061993,"byte_end":11062009,"line_start":122,"line_end":122,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":7606},{"krate":0,"index":7609}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":23098,"byte_end":23122,"line_start":324,"line_end":324,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":7615},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067212,"byte_end":11067217,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":7617},{"krate":0,"index":7618}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11062942,"byte_end":11062980,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11062981,"byte_end":11062984,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11062985,"byte_end":11063063,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063064,"byte_end":11063140,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063141,"byte_end":11063165,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063166,"byte_end":11063169,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063170,"byte_end":11063211,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063212,"byte_end":11063215,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063216,"byte_end":11063296,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063297,"byte_end":11063376,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063377,"byte_end":11063440,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063441,"byte_end":11063444,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063445,"byte_end":11063524,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063525,"byte_end":11063605,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063606,"byte_end":11063684,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063685,"byte_end":11063764,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063765,"byte_end":11063843,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063844,"byte_end":11063924,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063925,"byte_end":11063938,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063939,"byte_end":11063942,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11063943,"byte_end":11064022,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064023,"byte_end":11064099,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064100,"byte_end":11064177,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064178,"byte_end":11064211,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064212,"byte_end":11064215,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064216,"byte_end":11064291,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064292,"byte_end":11064370,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064371,"byte_end":11064413,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064414,"byte_end":11064417,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064418,"byte_end":11064445,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064446,"byte_end":11064494,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064495,"byte_end":11064573,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064574,"byte_end":11064577,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064578,"byte_end":11064593,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064594,"byte_end":11064597,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064598,"byte_end":11064616,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064617,"byte_end":11064644,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064645,"byte_end":11064668,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064669,"byte_end":11064672,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064673,"byte_end":11064691,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064692,"byte_end":11064713,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064714,"byte_end":11064758,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064759,"byte_end":11064798,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064799,"byte_end":11064802,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064803,"byte_end":11064836,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064837,"byte_end":11064883,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064884,"byte_end":11064907,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064908,"byte_end":11064919,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064920,"byte_end":11064923,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064924,"byte_end":11064966,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064967,"byte_end":11064986,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064987,"byte_end":11064992,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11064993,"byte_end":11065000,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065001,"byte_end":11065004,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065005,"byte_end":11065008,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065009,"byte_end":11065027,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065028,"byte_end":11065055,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065056,"byte_end":11065079,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065080,"byte_end":11065083,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065084,"byte_end":11065102,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065103,"byte_end":11065124,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065125,"byte_end":11065169,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065170,"byte_end":11065173,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065174,"byte_end":11065197,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065198,"byte_end":11065244,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065245,"byte_end":11065282,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065283,"byte_end":11065315,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065316,"byte_end":11065373,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065374,"byte_end":11065405,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065406,"byte_end":11065447,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065448,"byte_end":11065465,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065466,"byte_end":11065481,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065482,"byte_end":11065491,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065492,"byte_end":11065495,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065496,"byte_end":11065510,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065511,"byte_end":11065553,"line_start":84,"line_end":84,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065554,"byte_end":11065576,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065577,"byte_end":11065590,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065591,"byte_end":11065600,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065601,"byte_end":11065635,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065636,"byte_end":11065641,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065642,"byte_end":11065649,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065650,"byte_end":11065726,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065727,"byte_end":11065800,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065801,"byte_end":11065816,"line_start":93,"line_end":93,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065817,"byte_end":11065892,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065893,"byte_end":11065969,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11065970,"byte_end":11066022,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066023,"byte_end":11066026,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066027,"byte_end":11066105,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066106,"byte_end":11066186,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066187,"byte_end":11066263,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066264,"byte_end":11066341,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066342,"byte_end":11066420,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066421,"byte_end":11066501,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066502,"byte_end":11066582,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066583,"byte_end":11066652,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066653,"byte_end":11066656,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066657,"byte_end":11066736,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066737,"byte_end":11066816,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066817,"byte_end":11066895,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066896,"byte_end":11066957,"line_start":110,"line_end":110,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066958,"byte_end":11066961,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066962,"byte_end":11066989,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11066990,"byte_end":11067027,"line_start":113,"line_end":113,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067028,"byte_end":11067062,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067063,"byte_end":11067112,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067113,"byte_end":11067150,"line_start":116,"line_end":116,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067151,"byte_end":11067183,"line_start":117,"line_end":117,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6783},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067646,"byte_end":11067656,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":6786}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067285,"byte_end":11067316,"line_start":124,"line_end":124,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067317,"byte_end":11067320,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067321,"byte_end":11067400,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067401,"byte_end":11067476,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067477,"byte_end":11067510,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067511,"byte_end":11067514,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067515,"byte_end":11067593,"line_start":130,"line_end":130,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067594,"byte_end":11067634,"line_start":131,"line_end":131,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6787},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068443,"byte_end":11068458,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":6789}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067701,"byte_end":11067739,"line_start":136,"line_end":136,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067740,"byte_end":11067743,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067744,"byte_end":11067825,"line_start":138,"line_end":138,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067826,"byte_end":11067906,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067907,"byte_end":11067981,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11067982,"byte_end":11068043,"line_start":141,"line_end":141,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068044,"byte_end":11068047,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068048,"byte_end":11068127,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-couned pointer to the original","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068128,"byte_end":11068206,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068207,"byte_end":11068275,"line_start":145,"line_end":145,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068276,"byte_end":11068279,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068280,"byte_end":11068358,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068359,"byte_end":11068399,"line_start":148,"line_end":148,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068400,"byte_end":11068403,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068404,"byte_end":11068431,"line_start":150,"line_end":150,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7622},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11069166,"byte_end":11069178,"line_start":169,"line_end":169,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068958,"byte_end":11069015,"line_start":163,"line_end":163,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11069016,"byte_end":11069019,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11069020,"byte_end":11069092,"line_start":165,"line_end":165,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11069093,"byte_end":11069096,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11069097,"byte_end":11069137,"line_start":167,"line_end":167,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6803},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070394,"byte_end":11070397,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070191,"byte_end":11070249,"line_start":204,"line_end":204,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070254,"byte_end":11070257,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070262,"byte_end":11070276,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070281,"byte_end":11070284,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070289,"byte_end":11070296,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070301,"byte_end":11070328,"line_start":209,"line_end":209,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070333,"byte_end":11070336,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070341,"byte_end":11070370,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070375,"byte_end":11070382,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6804},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071022,"byte_end":11071026,"line_start":240,"line_end":240,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070562,"byte_end":11070608,"line_start":223,"line_end":223,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070613,"byte_end":11070659,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070664,"byte_end":11070735,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070740,"byte_end":11070743,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070748,"byte_end":11070762,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070767,"byte_end":11070770,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070775,"byte_end":11070782,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070787,"byte_end":11070814,"line_start":230,"line_end":230,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070819,"byte_end":11070822,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070827,"byte_end":11070845,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070850,"byte_end":11070871,"line_start":233,"line_end":233,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070876,"byte_end":11070910,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070915,"byte_end":11070918,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070923,"byte_end":11070962,"line_start":236,"line_end":236,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070967,"byte_end":11070982,"line_start":237,"line_end":237,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070987,"byte_end":11070992,"line_start":238,"line_end":238,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070997,"byte_end":11071004,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6807},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072053,"byte_end":11072063,"line_start":271,"line_end":271,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071132,"byte_end":11071206,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071211,"byte_end":11071278,"line_start":246,"line_end":246,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071283,"byte_end":11071307,"line_start":247,"line_end":247,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071312,"byte_end":11071315,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071320,"byte_end":11071393,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071398,"byte_end":11071471,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071476,"byte_end":11071547,"line_start":251,"line_end":251,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071552,"byte_end":11071627,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071632,"byte_end":11071674,"line_start":253,"line_end":253,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071679,"byte_end":11071682,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071687,"byte_end":11071701,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071706,"byte_end":11071709,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071714,"byte_end":11071721,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071726,"byte_end":11071753,"line_start":258,"line_end":258,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071758,"byte_end":11071781,"line_start":259,"line_end":259,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071786,"byte_end":11071789,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071794,"byte_end":11071812,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071817,"byte_end":11071838,"line_start":262,"line_end":262,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071843,"byte_end":11071887,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071892,"byte_end":11071895,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071900,"byte_end":11071953,"line_start":265,"line_end":265,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071958,"byte_end":11071973,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071978,"byte_end":11071983,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11071988,"byte_end":11071995,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072000,"byte_end":11072003,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072008,"byte_end":11072035,"line_start":270,"line_end":270,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6814},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072940,"byte_end":11072948,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072472,"byte_end":11072541,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072546,"byte_end":11072588,"line_start":285,"line_end":285,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072593,"byte_end":11072596,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072601,"byte_end":11072635,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072640,"byte_end":11072654,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072659,"byte_end":11072662,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072667,"byte_end":11072674,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072679,"byte_end":11072706,"line_start":291,"line_end":291,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072711,"byte_end":11072774,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072779,"byte_end":11072782,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072787,"byte_end":11072817,"line_start":294,"line_end":294,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072822,"byte_end":11072825,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072830,"byte_end":11072860,"line_start":296,"line_end":296,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072865,"byte_end":11072887,"line_start":297,"line_end":297,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072892,"byte_end":11072904,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072909,"byte_end":11072916,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11072921,"byte_end":11072928,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6815},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074069,"byte_end":11074083,"line_start":332,"line_end":332,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073157,"byte_end":11073231,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073236,"byte_end":11073273,"line_start":309,"line_end":309,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073278,"byte_end":11073281,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073286,"byte_end":11073354,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073359,"byte_end":11073432,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073437,"byte_end":11073513,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073518,"byte_end":11073592,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073597,"byte_end":11073645,"line_start":315,"line_end":315,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073650,"byte_end":11073653,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073658,"byte_end":11073692,"line_start":317,"line_end":317,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073697,"byte_end":11073724,"line_start":318,"line_end":318,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073729,"byte_end":11073743,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073748,"byte_end":11073751,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073756,"byte_end":11073763,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073768,"byte_end":11073795,"line_start":322,"line_end":322,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073800,"byte_end":11073823,"line_start":323,"line_end":323,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073828,"byte_end":11073891,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073896,"byte_end":11073899,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073904,"byte_end":11073944,"line_start":326,"line_end":326,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073949,"byte_end":11073952,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11073957,"byte_end":11074001,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074006,"byte_end":11074028,"line_start":329,"line_end":329,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074033,"byte_end":11074045,"line_start":330,"line_end":330,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074050,"byte_end":11074057,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6816},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074641,"byte_end":11074651,"line_start":353,"line_end":353,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074308,"byte_end":11074362,"line_start":339,"line_end":339,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074367,"byte_end":11074381,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074386,"byte_end":11074389,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074394,"byte_end":11074401,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074406,"byte_end":11074433,"line_start":343,"line_end":343,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074438,"byte_end":11074441,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074446,"byte_end":11074464,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074469,"byte_end":11074490,"line_start":346,"line_end":346,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074495,"byte_end":11074529,"line_start":347,"line_end":347,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074534,"byte_end":11074537,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074542,"byte_end":11074577,"line_start":349,"line_end":349,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074582,"byte_end":11074607,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074612,"byte_end":11074617,"line_start":351,"line_end":351,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074622,"byte_end":11074629,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7627},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079681,"byte_end":11079687,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":7628},{"krate":0,"index":7629}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11076871,"byte_end":11076907,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11076908,"byte_end":11076911,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11076912,"byte_end":11076988,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11076989,"byte_end":11077069,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077070,"byte_end":11077111,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077112,"byte_end":11077115,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077116,"byte_end":11077190,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify()`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077191,"byte_end":11077272,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077273,"byte_end":11077339,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077340,"byte_end":11077343,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077344,"byte_end":11077402,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077403,"byte_end":11077483,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077484,"byte_end":11077564,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify()`] sets the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077565,"byte_end":11077644,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077645,"byte_end":11077695,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077696,"byte_end":11077699,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **before** `notfied().await`, then the next call to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077700,"byte_end":11077779,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077780,"byte_end":11077855,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077856,"byte_end":11077926,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077927,"byte_end":11077930,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11077931,"byte_end":11078011,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078012,"byte_end":11078085,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078086,"byte_end":11078157,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078158,"byte_end":11078161,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078162,"byte_end":11078176,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078177,"byte_end":11078180,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078181,"byte_end":11078197,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078198,"byte_end":11078201,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078202,"byte_end":11078209,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078210,"byte_end":11078238,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078239,"byte_end":11078262,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078263,"byte_end":11078266,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078267,"byte_end":11078285,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078286,"byte_end":11078307,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078308,"byte_end":11078353,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078354,"byte_end":11078391,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078392,"byte_end":11078395,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078396,"byte_end":11078429,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078430,"byte_end":11078467,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078468,"byte_end":11078514,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078515,"byte_end":11078526,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078527,"byte_end":11078530,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078531,"byte_end":11078572,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078573,"byte_end":11078597,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078598,"byte_end":11078603,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078604,"byte_end":11078611,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078612,"byte_end":11078615,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078616,"byte_end":11078641,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078642,"byte_end":11078645,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078646,"byte_end":11078653,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078654,"byte_end":11078682,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078683,"byte_end":11078686,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078687,"byte_end":11078722,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078723,"byte_end":11078748,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078749,"byte_end":11078752,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078753,"byte_end":11078776,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078777,"byte_end":11078812,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078813,"byte_end":11078836,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078837,"byte_end":11078842,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078843,"byte_end":11078846,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078847,"byte_end":11078871,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078872,"byte_end":11078910,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078911,"byte_end":11078950,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078951,"byte_end":11078985,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078986,"byte_end":11078989,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11078990,"byte_end":11079045,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079046,"byte_end":11079079,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079080,"byte_end":11079089,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079090,"byte_end":11079093,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079094,"byte_end":11079133,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079134,"byte_end":11079152,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079153,"byte_end":11079184,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079185,"byte_end":11079263,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079264,"byte_end":11079297,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079298,"byte_end":11079315,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079316,"byte_end":11079319,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079320,"byte_end":11079370,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079371,"byte_end":11079416,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079417,"byte_end":11079430,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079431,"byte_end":11079440,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079441,"byte_end":11079446,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079447,"byte_end":11079454,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079455,"byte_end":11079458,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079459,"byte_end":11079488,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079489,"byte_end":11079530,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079531,"byte_end":11079575,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ [`notify()`]: Notify::notify()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079576,"byte_end":11079610,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11079611,"byte_end":11079652,"line_start":100,"line_end":100,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":6884},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080919,"byte_end":11080922,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080715,"byte_end":11080771,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080776,"byte_end":11080779,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080784,"byte_end":11080798,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080803,"byte_end":11080806,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080811,"byte_end":11080818,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080823,"byte_end":11080851,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080856,"byte_end":11080859,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080864,"byte_end":11080895,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080900,"byte_end":11080907,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6885},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081994,"byte_end":11082002,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"name":"notified","qualname":"<Notify>::notified","value":"pub async fn notified<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081064,"byte_end":11081092,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081097,"byte_end":11081100,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081105,"byte_end":11081181,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify()`], then `notified().await` will complete","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081186,"byte_end":11081260,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081265,"byte_end":11081340,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify()`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081345,"byte_end":11081414,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081419,"byte_end":11081422,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: Notify::notify","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081427,"byte_end":11081459,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081464,"byte_end":11081467,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081472,"byte_end":11081486,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081491,"byte_end":11081494,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081499,"byte_end":11081506,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081511,"byte_end":11081539,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081544,"byte_end":11081567,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081572,"byte_end":11081575,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081580,"byte_end":11081598,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081603,"byte_end":11081624,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081629,"byte_end":11081674,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081679,"byte_end":11081716,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081721,"byte_end":11081724,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081729,"byte_end":11081762,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081767,"byte_end":11081804,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081809,"byte_end":11081855,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081860,"byte_end":11081871,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081876,"byte_end":11081879,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081884,"byte_end":11081925,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081930,"byte_end":11081954,"line_start":197,"line_end":197,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081959,"byte_end":11081964,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11081969,"byte_end":11081976,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6888},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083498,"byte_end":11083504,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"notify","qualname":"<Notify>::notify","value":"pub fn notify(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082339,"byte_end":11082366,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082371,"byte_end":11082374,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082379,"byte_end":11082450,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082455,"byte_end":11082523,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082528,"byte_end":11082604,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify()`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082609,"byte_end":11082650,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082655,"byte_end":11082658,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082663,"byte_end":11082737,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ `notify` will result in a single permit being stored. The next call to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082742,"byte_end":11082816,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082821,"byte_end":11082893,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082898,"byte_end":11082912,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082917,"byte_end":11082920,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082925,"byte_end":11082969,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082974,"byte_end":11082977,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11082982,"byte_end":11082996,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083001,"byte_end":11083004,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083009,"byte_end":11083016,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083021,"byte_end":11083049,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083054,"byte_end":11083077,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083082,"byte_end":11083085,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083090,"byte_end":11083108,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083113,"byte_end":11083134,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083139,"byte_end":11083184,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083189,"byte_end":11083226,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083231,"byte_end":11083234,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083239,"byte_end":11083272,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083277,"byte_end":11083314,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083319,"byte_end":11083365,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083370,"byte_end":11083381,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083386,"byte_end":11083389,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083394,"byte_end":11083435,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083440,"byte_end":11083464,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083469,"byte_end":11083474,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11083479,"byte_end":11083486,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6910},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":6911},{"krate":0,"index":6912},{"krate":0,"index":6913},{"krate":0,"index":6914},{"krate":0,"index":6915},{"krate":0,"index":6916},{"krate":0,"index":6917},{"krate":0,"index":6918},{"krate":0,"index":6919},{"krate":0,"index":6920},{"krate":0,"index":14841},{"krate":0,"index":6921},{"krate":0,"index":14843},{"krate":0,"index":6922},{"krate":0,"index":6923},{"krate":0,"index":14845},{"krate":0,"index":6924},{"krate":0,"index":14847},{"krate":0,"index":6925},{"krate":0,"index":6926},{"krate":0,"index":6927},{"krate":0,"index":6928},{"krate":0,"index":7656},{"krate":0,"index":7659},{"krate":0,"index":7662},{"krate":0,"index":7665},{"krate":0,"index":6929},{"krate":0,"index":6937},{"krate":0,"index":6938},{"krate":0,"index":7693},{"krate":0,"index":7697},{"krate":0,"index":7696},{"krate":0,"index":6944},{"krate":0,"index":6946},{"krate":0,"index":6959},{"krate":0,"index":6962},{"krate":0,"index":6966},{"krate":0,"index":6969},{"krate":0,"index":6973},{"krate":0,"index":6997},{"krate":0,"index":6999},{"krate":0,"index":7001},{"krate":0,"index":7005},{"krate":0,"index":7009},{"krate":0,"index":7010},{"krate":0,"index":7011},{"krate":0,"index":7012},{"krate":0,"index":7013},{"krate":0,"index":7027}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11095280,"byte_end":11095350,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":7656},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11095829,"byte_end":11095835,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7658}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11095682,"byte_end":11095729,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11095730,"byte_end":11095733,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11095734,"byte_end":11095800,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7662},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096027,"byte_end":11096035,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7664}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11095878,"byte_end":11095927,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11095928,"byte_end":11095931,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11095932,"byte_end":11095998,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":6929},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096086,"byte_end":11096091,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":6930},{"krate":0,"index":7668},{"krate":0,"index":7678},{"krate":0,"index":7675},{"krate":0,"index":7676},{"krate":0,"index":7671},{"krate":0,"index":7672},{"krate":0,"index":7680},{"krate":0,"index":7691},{"krate":0,"index":7688},{"krate":0,"index":7689},{"krate":0,"index":7685},{"krate":0,"index":7686},{"krate":0,"index":6931},{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6936}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096098,"byte_end":11096121,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7668},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096263,"byte_end":11096272,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096146,"byte_end":11096211,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7681},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096494,"byte_end":11096499,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096427,"byte_end":11096485,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7683},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096588,"byte_end":11096594,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096510,"byte_end":11096579,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":7680},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096404,"byte_end":11096416,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":7681},{"krate":0,"index":7683}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096294,"byte_end":11096354,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":6944},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098591,"byte_end":11098598,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11097776,"byte_end":11097855,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11097856,"byte_end":11097866,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11097867,"byte_end":11097870,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11097871,"byte_end":11097947,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11097948,"byte_end":11098026,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098027,"byte_end":11098073,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098074,"byte_end":11098077,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098078,"byte_end":11098124,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098125,"byte_end":11098128,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098129,"byte_end":11098143,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098144,"byte_end":11098147,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098148,"byte_end":11098155,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098156,"byte_end":11098185,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098186,"byte_end":11098189,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098190,"byte_end":11098208,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098209,"byte_end":11098230,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098231,"byte_end":11098273,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098274,"byte_end":11098277,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098278,"byte_end":11098311,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098312,"byte_end":11098352,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098353,"byte_end":11098402,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098403,"byte_end":11098416,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098417,"byte_end":11098428,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098429,"byte_end":11098432,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098433,"byte_end":11098457,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098458,"byte_end":11098505,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098506,"byte_end":11098559,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098560,"byte_end":11098569,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098570,"byte_end":11098575,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11098576,"byte_end":11098583,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6948},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100634,"byte_end":11100638,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099063,"byte_end":11099138,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099143,"byte_end":11099159,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099164,"byte_end":11099167,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099172,"byte_end":11099251,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099256,"byte_end":11099331,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099336,"byte_end":11099412,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099417,"byte_end":11099489,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099494,"byte_end":11099507,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099512,"byte_end":11099515,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099520,"byte_end":11099596,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099601,"byte_end":11099677,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099682,"byte_end":11099754,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099759,"byte_end":11099832,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099837,"byte_end":11099911,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099916,"byte_end":11099988,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099993,"byte_end":11100030,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100035,"byte_end":11100038,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100043,"byte_end":11100057,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100062,"byte_end":11100065,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100070,"byte_end":11100102,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100107,"byte_end":11100110,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100115,"byte_end":11100122,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100127,"byte_end":11100156,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100161,"byte_end":11100164,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100169,"byte_end":11100187,"line_start":168,"line_end":168,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100192,"byte_end":11100213,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100218,"byte_end":11100260,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100265,"byte_end":11100268,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100273,"byte_end":11100306,"line_start":172,"line_end":172,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100311,"byte_end":11100351,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100356,"byte_end":11100405,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100410,"byte_end":11100423,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100428,"byte_end":11100439,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100444,"byte_end":11100447,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100452,"byte_end":11100476,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100481,"byte_end":11100528,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100533,"byte_end":11100586,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100591,"byte_end":11100600,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100605,"byte_end":11100610,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11100615,"byte_end":11100622,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6951},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11101039,"byte_end":11101050,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6953},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104292,"byte_end":11104298,"line_start":316,"line_end":316,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102407,"byte_end":11102465,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102470,"byte_end":11102473,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102478,"byte_end":11102552,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102557,"byte_end":11102591,"line_start":252,"line_end":252,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102596,"byte_end":11102599,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102604,"byte_end":11102669,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102674,"byte_end":11102746,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102751,"byte_end":11102754,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102759,"byte_end":11102771,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102776,"byte_end":11102779,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102784,"byte_end":11102832,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102837,"byte_end":11102840,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102845,"byte_end":11102871,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102876,"byte_end":11102906,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102911,"byte_end":11102914,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102919,"byte_end":11102933,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102938,"byte_end":11102941,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102946,"byte_end":11102961,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102966,"byte_end":11102969,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102974,"byte_end":11102981,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11102986,"byte_end":11103015,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103020,"byte_end":11103023,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103028,"byte_end":11103046,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103051,"byte_end":11103072,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103077,"byte_end":11103129,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103134,"byte_end":11103137,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103142,"byte_end":11103175,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103180,"byte_end":11103201,"line_start":276,"line_end":276,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103206,"byte_end":11103217,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103222,"byte_end":11103225,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103230,"byte_end":11103256,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103261,"byte_end":11103302,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103307,"byte_end":11103312,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103317,"byte_end":11103324,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103329,"byte_end":11103332,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103337,"byte_end":11103359,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103364,"byte_end":11103367,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103372,"byte_end":11103379,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103384,"byte_end":11103413,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103418,"byte_end":11103456,"line_start":288,"line_end":288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103461,"byte_end":11103464,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ use futures::{select, FutureExt};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103469,"byte_end":11103506,"line_start":290,"line_end":290,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103511,"byte_end":11103514,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103519,"byte_end":11103553,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103558,"byte_end":11103609,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103614,"byte_end":11103639,"line_start":294,"line_end":294,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103644,"byte_end":11103649,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103654,"byte_end":11103657,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103662,"byte_end":11103680,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103685,"byte_end":11103706,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103711,"byte_end":11103757,"line_start":299,"line_end":299,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103762,"byte_end":11103765,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103770,"byte_end":11103803,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103808,"byte_end":11103829,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/             _ = tx.closed().fuse() => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103834,"byte_end":11103877,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103882,"byte_end":11103957,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103962,"byte_end":11103979,"line_start":305,"line_end":305,"column_start":5,"column_end":22}},{"value":"/             value = compute().fuse() => {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11103984,"byte_end":11104029,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/                 tx.send(value).unwrap()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104034,"byte_end":11104077,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104082,"byte_end":11104099,"line_start":308,"line_end":308,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104104,"byte_end":11104117,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104122,"byte_end":11104133,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104138,"byte_end":11104141,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104146,"byte_end":11104182,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104187,"byte_end":11104252,"line_start":313,"line_end":313,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104257,"byte_end":11104262,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104267,"byte_end":11104274,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6958},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105168,"byte_end":11105177,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104409,"byte_end":11104483,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104488,"byte_end":11104491,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104496,"byte_end":11104570,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104575,"byte_end":11104609,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104614,"byte_end":11104617,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104622,"byte_end":11104697,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104702,"byte_end":11104705,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104710,"byte_end":11104736,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104741,"byte_end":11104771,"line_start":330,"line_end":330,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104776,"byte_end":11104779,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104784,"byte_end":11104798,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104803,"byte_end":11104806,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104811,"byte_end":11104818,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104823,"byte_end":11104852,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104857,"byte_end":11104860,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104865,"byte_end":11104883,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104888,"byte_end":11104909,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104914,"byte_end":11104956,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104961,"byte_end":11104964,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11104969,"byte_end":11105002,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105007,"byte_end":11105010,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105015,"byte_end":11105032,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105037,"byte_end":11105040,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105045,"byte_end":11105077,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105082,"byte_end":11105134,"line_start":346,"line_end":346,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105139,"byte_end":11105144,"line_start":347,"line_end":347,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105149,"byte_end":11105156,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6964},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107155,"byte_end":11107160,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105517,"byte_end":11105584,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105589,"byte_end":11105592,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105597,"byte_end":11105671,"line_start":368,"line_end":368,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105676,"byte_end":11105744,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105749,"byte_end":11105815,"line_start":370,"line_end":370,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105820,"byte_end":11105834,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105839,"byte_end":11105842,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105847,"byte_end":11105923,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105928,"byte_end":11105991,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105996,"byte_end":11105999,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106004,"byte_end":11106026,"line_start":376,"line_end":376,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106031,"byte_end":11106067,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106072,"byte_end":11106075,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106080,"byte_end":11106094,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106099,"byte_end":11106102,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106107,"byte_end":11106142,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106147,"byte_end":11106150,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106155,"byte_end":11106162,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106167,"byte_end":11106196,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106201,"byte_end":11106251,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106256,"byte_end":11106259,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106264,"byte_end":11106282,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106287,"byte_end":11106308,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106313,"byte_end":11106359,"line_start":389,"line_end":389,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106364,"byte_end":11106367,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106372,"byte_end":11106405,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106410,"byte_end":11106413,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106418,"byte_end":11106437,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106442,"byte_end":11106445,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106450,"byte_end":11106482,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106487,"byte_end":11106539,"line_start":396,"line_end":396,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106544,"byte_end":11106547,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106552,"byte_end":11106581,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106586,"byte_end":11106629,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106634,"byte_end":11106666,"line_start":400,"line_end":400,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106671,"byte_end":11106680,"line_start":401,"line_end":401,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106685,"byte_end":11106690,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106695,"byte_end":11106702,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106707,"byte_end":11106710,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106715,"byte_end":11106766,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106771,"byte_end":11106774,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106779,"byte_end":11106786,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106791,"byte_end":11106820,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106825,"byte_end":11106828,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106833,"byte_end":11106851,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106856,"byte_end":11106877,"line_start":411,"line_end":411,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106882,"byte_end":11106928,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106933,"byte_end":11106936,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106941,"byte_end":11106990,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11106995,"byte_end":11106998,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107003,"byte_end":11107022,"line_start":416,"line_end":416,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107027,"byte_end":11107030,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107035,"byte_end":11107076,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107081,"byte_end":11107121,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107126,"byte_end":11107131,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107136,"byte_end":11107143,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6965},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11109143,"byte_end":11109151,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107258,"byte_end":11107290,"line_start":427,"line_end":427,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107295,"byte_end":11107298,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107303,"byte_end":11107376,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107381,"byte_end":11107447,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107452,"byte_end":11107476,"line_start":431,"line_end":431,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107481,"byte_end":11107484,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107489,"byte_end":11107555,"line_start":433,"line_end":433,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107560,"byte_end":11107582,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107587,"byte_end":11107590,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107595,"byte_end":11107607,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107612,"byte_end":11107615,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107620,"byte_end":11107671,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107676,"byte_end":11107739,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107744,"byte_end":11107819,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107824,"byte_end":11107838,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107843,"byte_end":11107846,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107851,"byte_end":11107865,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107870,"byte_end":11107873,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107878,"byte_end":11107928,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107933,"byte_end":11107936,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107941,"byte_end":11107948,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107953,"byte_end":11107982,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11107987,"byte_end":11108037,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108042,"byte_end":11108045,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108050,"byte_end":11108068,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108073,"byte_end":11108094,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108099,"byte_end":11108145,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108150,"byte_end":11108153,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108158,"byte_end":11108187,"line_start":455,"line_end":455,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108192,"byte_end":11108237,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108242,"byte_end":11108284,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108289,"byte_end":11108321,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108326,"byte_end":11108335,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108340,"byte_end":11108343,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108348,"byte_end":11108371,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108376,"byte_end":11108410,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108415,"byte_end":11108418,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108423,"byte_end":11108452,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108457,"byte_end":11108509,"line_start":465,"line_end":465,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108514,"byte_end":11108546,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108551,"byte_end":11108560,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108565,"byte_end":11108570,"line_start":468,"line_end":468,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108575,"byte_end":11108582,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108587,"byte_end":11108590,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108595,"byte_end":11108656,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108661,"byte_end":11108664,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108669,"byte_end":11108676,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108681,"byte_end":11108710,"line_start":474,"line_end":474,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108715,"byte_end":11108765,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108770,"byte_end":11108773,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108778,"byte_end":11108796,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108801,"byte_end":11108822,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108827,"byte_end":11108879,"line_start":479,"line_end":479,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108884,"byte_end":11108887,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108892,"byte_end":11108909,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108914,"byte_end":11108917,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108922,"byte_end":11108951,"line_start":483,"line_end":483,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11108956,"byte_end":11109010,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11109015,"byte_end":11109058,"line_start":485,"line_end":485,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11109063,"byte_end":11109095,"line_start":486,"line_end":486,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11109100,"byte_end":11109109,"line_start":487,"line_end":487,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11109114,"byte_end":11109119,"line_start":488,"line_end":488,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11109124,"byte_end":11109131,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7760},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177642,"byte_end":11177651,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":7761}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit aquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit aquisition.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11176991,"byte_end":11177056,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177057,"byte_end":11177060,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177061,"byte_end":11177136,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177137,"byte_end":11177213,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177214,"byte_end":11177294,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177295,"byte_end":11177304,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177305,"byte_end":11177308,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177309,"byte_end":11177382,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177383,"byte_end":11177462,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177463,"byte_end":11177541,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177542,"byte_end":11177613,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":7764},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177900,"byte_end":11177915,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":7766},{"krate":0,"index":7767}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177716,"byte_end":11177748,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177749,"byte_end":11177752,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177753,"byte_end":11177804,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177805,"byte_end":11177808,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177809,"byte_end":11177859,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177860,"byte_end":11177871,"line_start":26,"line_end":26,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7771},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178176,"byte_end":11178196,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":7772},{"krate":0,"index":7773}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11177967,"byte_end":11178006,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178007,"byte_end":11178010,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178011,"byte_end":11178068,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178069,"byte_end":11178072,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178073,"byte_end":11178135,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178136,"byte_end":11178147,"line_start":38,"line_end":38,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7776},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178492,"byte_end":11178507,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"TryAcquireError","qualname":"::sync::semaphore::TryAcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178245,"byte_end":11178309,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178310,"byte_end":11178313,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A `try_acquire` operation can only fail if the semaphore has no available","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178314,"byte_end":11178391,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ permits.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178392,"byte_end":11178404,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178405,"byte_end":11178408,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: Semaphore::try_acquire","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178409,"byte_end":11178463,"line_start":50,"line_end":50,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7262},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11179061,"byte_end":11179064,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178986,"byte_end":11179049,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7263},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11179240,"byte_end":11179257,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11179176,"byte_end":11179228,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":7264},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11179504,"byte_end":11179515,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11179327,"byte_end":11179369,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11179374,"byte_end":11179377,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11179382,"byte_end":11179492,"line_start":84,"line_end":84,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":7265},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11179635,"byte_end":11179642,"line_start":90,"line_end":90,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11179578,"byte_end":11179617,"line_start":89,"line_end":89,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7268},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11179878,"byte_end":11179889,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11179817,"byte_end":11179866,"line_start":98,"line_end":98,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7269},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11180350,"byte_end":11180363,"line_start":114,"line_end":114,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11180172,"byte_end":11180211,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11180216,"byte_end":11180219,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11180224,"byte_end":11180292,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11180297,"byte_end":11180300,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11180305,"byte_end":11180332,"line_start":113,"line_end":113,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7272},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11180743,"byte_end":11180760,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11180561,"byte_end":11180610,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11180615,"byte_end":11180618,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11180623,"byte_end":11180691,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11180696,"byte_end":11180699,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11180704,"byte_end":11180731,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7275},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181275,"byte_end":11181281,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181100,"byte_end":11181170,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181175,"byte_end":11181244,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181249,"byte_end":11181263,"line_start":141,"line_end":141,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":7277},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181536,"byte_end":11181542,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181361,"byte_end":11181431,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181436,"byte_end":11181505,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181510,"byte_end":11181524,"line_start":150,"line_end":150,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7781},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184565,"byte_end":11184571,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":7783},{"krate":0,"index":7784}],"decl_id":null,"docs":" An asynchronous reader-writer lock","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182035,"byte_end":11182073,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182074,"byte_end":11182077,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182078,"byte_end":11182155,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182156,"byte_end":11182235,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182236,"byte_end":11182315,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182316,"byte_end":11182374,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182375,"byte_end":11182378,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182379,"byte_end":11182457,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182458,"byte_end":11182536,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182537,"byte_end":11182615,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182616,"byte_end":11182681,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182682,"byte_end":11182685,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182686,"byte_end":11182750,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182751,"byte_end":11182823,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182824,"byte_end":11182904,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182905,"byte_end":11182985,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11182986,"byte_end":11183066,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183067,"byte_end":11183136,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183137,"byte_end":11183207,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183208,"byte_end":11183246,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183247,"byte_end":11183250,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183251,"byte_end":11183328,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183329,"byte_end":11183414,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183415,"byte_end":11183495,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183496,"byte_end":11183543,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183544,"byte_end":11183616,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183617,"byte_end":11183620,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183621,"byte_end":11183635,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183636,"byte_end":11183639,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183640,"byte_end":11183647,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183648,"byte_end":11183676,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183677,"byte_end":11183680,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183681,"byte_end":11183699,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183700,"byte_end":11183721,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183722,"byte_end":11183756,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183757,"byte_end":11183760,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183761,"byte_end":11183809,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183810,"byte_end":11183819,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183820,"byte_end":11183859,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183860,"byte_end":11183899,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183900,"byte_end":11183931,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183932,"byte_end":11183963,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11183964,"byte_end":11184013,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184014,"byte_end":11184017,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184018,"byte_end":11184069,"line_start":55,"line_end":55,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184070,"byte_end":11184079,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184080,"byte_end":11184123,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184124,"byte_end":11184144,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184145,"byte_end":11184175,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184176,"byte_end":11184215,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184216,"byte_end":11184221,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184222,"byte_end":11184229,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184230,"byte_end":11184233,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184234,"byte_end":11184268,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184269,"byte_end":11184298,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184299,"byte_end":11184346,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184347,"byte_end":11184396,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184397,"byte_end":11184434,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184435,"byte_end":11184536,"line_start":69,"line_end":69,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":7788},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184933,"byte_end":11184948,"line_start":87,"line_end":87,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":7791},{"krate":0,"index":7792}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184705,"byte_end":11184777,"line_start":79,"line_end":79,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184778,"byte_end":11184790,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184791,"byte_end":11184794,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184795,"byte_end":11184850,"line_start":82,"line_end":82,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184851,"byte_end":11184866,"line_start":83,"line_end":83,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184867,"byte_end":11184870,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11184871,"byte_end":11184904,"line_start":85,"line_end":85,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":7797},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11185299,"byte_end":11185315,"line_start":101,"line_end":101,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":7800},{"krate":0,"index":7801}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11185030,"byte_end":11185106,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11185107,"byte_end":11185119,"line_start":93,"line_end":93,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11185120,"byte_end":11185123,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11185124,"byte_end":11185181,"line_start":95,"line_end":95,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11185182,"byte_end":11185200,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11185201,"byte_end":11185204,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11185205,"byte_end":11185240,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11185241,"byte_end":11185270,"line_start":99,"line_end":99,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":7313},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187380,"byte_end":11187383,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187170,"byte_end":11187233,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187238,"byte_end":11187241,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187246,"byte_end":11187260,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187265,"byte_end":11187268,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187273,"byte_end":11187280,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187285,"byte_end":11187313,"line_start":167,"line_end":167,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187318,"byte_end":11187321,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187326,"byte_end":11187356,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187361,"byte_end":11187368,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7314},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188598,"byte_end":11188602,"line_start":212,"line_end":212,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187560,"byte_end":11187631,"line_start":181,"line_end":181,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187636,"byte_end":11187682,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187687,"byte_end":11187690,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187695,"byte_end":11187764,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187769,"byte_end":11187845,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187850,"byte_end":11187874,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187879,"byte_end":11187882,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187887,"byte_end":11187901,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187906,"byte_end":11187909,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187914,"byte_end":11187921,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187926,"byte_end":11187949,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187954,"byte_end":11187982,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187987,"byte_end":11187990,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187995,"byte_end":11188013,"line_start":194,"line_end":194,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188018,"byte_end":11188039,"line_start":195,"line_end":195,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188044,"byte_end":11188088,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188093,"byte_end":11188127,"line_start":197,"line_end":197,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188132,"byte_end":11188135,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188140,"byte_end":11188174,"line_start":199,"line_end":199,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188179,"byte_end":11188205,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188210,"byte_end":11188213,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188218,"byte_end":11188251,"line_start":202,"line_end":202,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188256,"byte_end":11188326,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188331,"byte_end":11188371,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188376,"byte_end":11188406,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188411,"byte_end":11188467,"line_start":206,"line_end":206,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188472,"byte_end":11188475,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188480,"byte_end":11188538,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188543,"byte_end":11188559,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188564,"byte_end":11188568,"line_start":210,"line_end":210,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188573,"byte_end":11188580,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7318},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189633,"byte_end":11189638,"line_start":243,"line_end":243,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11188992,"byte_end":11189067,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189072,"byte_end":11189118,"line_start":222,"line_end":222,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189123,"byte_end":11189126,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189131,"byte_end":11189201,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189206,"byte_end":11189244,"line_start":225,"line_end":225,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189249,"byte_end":11189252,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189257,"byte_end":11189330,"line_start":227,"line_end":227,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189335,"byte_end":11189352,"line_start":228,"line_end":228,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189357,"byte_end":11189360,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189365,"byte_end":11189379,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189384,"byte_end":11189387,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189392,"byte_end":11189399,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189404,"byte_end":11189432,"line_start":233,"line_end":233,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189437,"byte_end":11189440,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189445,"byte_end":11189463,"line_start":235,"line_end":235,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189468,"byte_end":11189489,"line_start":236,"line_end":236,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189494,"byte_end":11189526,"line_start":237,"line_end":237,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189531,"byte_end":11189534,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189539,"byte_end":11189576,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189581,"byte_end":11189594,"line_start":240,"line_end":240,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189599,"byte_end":11189603,"line_start":241,"line_end":241,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11189608,"byte_end":11189615,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7322},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11190153,"byte_end":11190163,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11190088,"byte_end":11190141,"line_start":255,"line_end":255,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":7390},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":7391},{"krate":0,"index":7392},{"krate":0,"index":7393},{"krate":0,"index":7394},{"krate":0,"index":7395},{"krate":0,"index":7396},{"krate":0,"index":7397},{"krate":0,"index":14985},{"krate":0,"index":7398},{"krate":0,"index":14987},{"krate":0,"index":7399},{"krate":0,"index":7400},{"krate":0,"index":7401},{"krate":0,"index":7402},{"krate":0,"index":7403},{"krate":0,"index":7404},{"krate":0,"index":7405},{"krate":0,"index":7406},{"krate":0,"index":14999},{"krate":0,"index":7407},{"krate":0,"index":15001},{"krate":0,"index":7408},{"krate":0,"index":7409},{"krate":0,"index":7410},{"krate":0,"index":7815},{"krate":0,"index":7819},{"krate":0,"index":7822},{"krate":0,"index":7825},{"krate":0,"index":7828},{"krate":0,"index":7832},{"krate":0,"index":7411},{"krate":0,"index":7842},{"krate":0,"index":7848},{"krate":0,"index":7418},{"krate":0,"index":7851},{"krate":0,"index":7856},{"krate":0,"index":7854},{"krate":0,"index":7858},{"krate":0,"index":7861},{"krate":0,"index":7419},{"krate":0,"index":7420},{"krate":0,"index":7424},{"krate":0,"index":7429},{"krate":0,"index":7436},{"krate":0,"index":7441},{"krate":0,"index":7444},{"krate":0,"index":7447},{"krate":0,"index":7455},{"krate":0,"index":7457},{"krate":0,"index":7460},{"krate":0,"index":7464},{"krate":0,"index":7467},{"krate":0,"index":7469},{"krate":0,"index":7471},{"krate":0,"index":7472},{"krate":0,"index":7475}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11203678,"byte_end":11203757,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11203758,"byte_end":11203768,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11203769,"byte_end":11203772,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11203773,"byte_end":11203849,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11203850,"byte_end":11203924,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11203925,"byte_end":11203928,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11203929,"byte_end":11203940,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11203941,"byte_end":11203944,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11203945,"byte_end":11204012,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ the producer and sender halves of the channel. The channel is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204013,"byte_end":11204078,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/ created with an initial value. [`Receiver::recv`] will always","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204079,"byte_end":11204144,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ be ready upon creation and will yield either this initial value or","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204145,"byte_end":11204215,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ the latest value that has been sent by `Sender`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204216,"byte_end":11204268,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204269,"byte_end":11204272,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Calls to [`Receiver::recv`] will always yield the latest value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204273,"byte_end":11204340,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204341,"byte_end":11204344,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204345,"byte_end":11204359,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204360,"byte_end":11204363,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204364,"byte_end":11204371,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204372,"byte_end":11204399,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204400,"byte_end":11204403,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204404,"byte_end":11204468,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204469,"byte_end":11204520,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204521,"byte_end":11204524,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204525,"byte_end":11204558,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204559,"byte_end":11204612,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204613,"byte_end":11204664,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204665,"byte_end":11204678,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204679,"byte_end":11204690,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204691,"byte_end":11204694,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204695,"byte_end":11204726,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204727,"byte_end":11204739,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204740,"byte_end":11204747,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204748,"byte_end":11204755,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204756,"byte_end":11204759,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204760,"byte_end":11204773,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204774,"byte_end":11204777,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::closed`] allows the producer to detect when all [`Receiver`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204778,"byte_end":11204852,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ handles have been dropped. This indicates that there is no further interest","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204853,"byte_end":11204932,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ in the values being produced and work can be stopped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204933,"byte_end":11204990,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204991,"byte_end":11204994,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11204995,"byte_end":11205014,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205015,"byte_end":11205018,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205019,"byte_end":11205099,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205100,"byte_end":11205179,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205180,"byte_end":11205252,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205253,"byte_end":11205256,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205257,"byte_end":11205299,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205300,"byte_end":11205346,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::recv`]: crate::sync::watch::Receiver::recv","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205347,"byte_end":11205405,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205406,"byte_end":11205450,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205451,"byte_end":11205509,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":7815},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205997,"byte_end":11206005,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7817},{"krate":0,"index":7818}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205831,"byte_end":11205897,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205898,"byte_end":11205901,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11205902,"byte_end":11205968,"line_start":67,"line_end":67,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7822},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206312,"byte_end":11206318,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7824}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206147,"byte_end":11206212,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206213,"byte_end":11206216,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206217,"byte_end":11206283,"line_start":79,"line_end":79,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7828},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206639,"byte_end":11206642,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":7831}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206356,"byte_end":11206398,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206399,"byte_end":11206402,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206403,"byte_end":11206479,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206480,"byte_end":11206559,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206560,"byte_end":11206610,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":7411},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206698,"byte_end":11206703,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":7412},{"krate":0,"index":7836},{"krate":0,"index":7839},{"krate":0,"index":7413},{"krate":0,"index":7416}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206710,"byte_end":11206731,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":7836},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206839,"byte_end":11206848,"line_start":102,"line_end":102,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":7838}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206756,"byte_end":11206802,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":7420},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208627,"byte_end":11208634,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T: Clone>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11207859,"byte_end":11207935,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11207936,"byte_end":11207939,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11207940,"byte_end":11208022,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208023,"byte_end":11208099,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208100,"byte_end":11208136,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208137,"byte_end":11208140,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208141,"byte_end":11208155,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208156,"byte_end":11208159,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208160,"byte_end":11208167,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208168,"byte_end":11208195,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208196,"byte_end":11208199,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208200,"byte_end":11208264,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208265,"byte_end":11208316,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208317,"byte_end":11208320,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208321,"byte_end":11208354,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208355,"byte_end":11208408,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208409,"byte_end":11208460,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208461,"byte_end":11208474,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208475,"byte_end":11208486,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208487,"byte_end":11208490,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208491,"byte_end":11208522,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208523,"byte_end":11208535,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208536,"byte_end":11208543,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208544,"byte_end":11208551,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208552,"byte_end":11208555,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208556,"byte_end":11208585,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11208586,"byte_end":11208619,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":7426},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209803,"byte_end":11209809,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209341,"byte_end":11209396,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209401,"byte_end":11209404,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209409,"byte_end":11209485,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209490,"byte_end":11209566,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209571,"byte_end":11209602,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209607,"byte_end":11209610,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209615,"byte_end":11209629,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209634,"byte_end":11209637,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209642,"byte_end":11209649,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209654,"byte_end":11209681,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209686,"byte_end":11209689,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209694,"byte_end":11209736,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209741,"byte_end":11209779,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209784,"byte_end":11209791,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7427},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209969,"byte_end":11209982,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"poll_recv_ref","qualname":"<Receiver<T>>::poll_recv_ref","value":"pub fn poll_recv_ref<'a>(&'a mut Self, &mut Context) -> Poll<Option<Ref>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7431},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211703,"byte_end":11211707,"line_start":282,"line_end":282,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the latest value sent via the channel.","sig":null,"attributes":[{"value":"/ Attempts to clone the latest value sent via the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11210621,"byte_end":11210681,"line_start":249,"line_end":249,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11210686,"byte_end":11210689,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If this is the first time the function is called on a `Receiver`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11210694,"byte_end":11210762,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ instance, then the function completes immediately with the **current**","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11210767,"byte_end":11210841,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ value held by the channel. On the next call, the function waits until","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11210846,"byte_end":11210919,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ a new value is sent in the channel.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11210924,"byte_end":11210963,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11210968,"byte_end":11210971,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the `Sender` half is dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11210976,"byte_end":11211031,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211036,"byte_end":11211039,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211044,"byte_end":11211058,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211063,"byte_end":11211066,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211071,"byte_end":11211078,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211083,"byte_end":11211110,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211115,"byte_end":11211118,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211123,"byte_end":11211141,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211146,"byte_end":11211167,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211172,"byte_end":11211223,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211228,"byte_end":11211231,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211236,"byte_end":11211277,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"hello\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211282,"byte_end":11211313,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211318,"byte_end":11211321,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211326,"byte_end":11211359,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         tx.broadcast(\"goodbye\").unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211364,"byte_end":11211409,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211414,"byte_end":11211425,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211430,"byte_end":11211433,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     // Waits for the new task to spawn and send the value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211438,"byte_end":11211500,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211505,"byte_end":11211546,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"goodbye\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211551,"byte_end":11211584,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211589,"byte_end":11211592,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211597,"byte_end":11211629,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     assert!(v.is_none());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211634,"byte_end":11211663,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211668,"byte_end":11211673,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211678,"byte_end":11211685,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7449},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11212773,"byte_end":11212782,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender<T>>::broadcast","value":"pub fn broadcast(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Broadcasts a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Broadcasts a new value via the channel, notifying all receivers.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11212693,"byte_end":11212761,"line_start":321,"line_end":321,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7450},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11213613,"byte_end":11213619,"line_start":348,"line_end":348,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11213402,"byte_end":11213448,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11213453,"byte_end":11213456,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11213461,"byte_end":11213535,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11213540,"byte_end":11213595,"line_start":347,"line_end":347,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":7863},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":7865},{"krate":0,"index":7867},{"krate":0,"index":7874},{"krate":0,"index":7875},{"krate":0,"index":7876},{"krate":0,"index":7877},{"krate":0,"index":7878},{"krate":0,"index":7882},{"krate":0,"index":7883},{"krate":0,"index":7889},{"krate":0,"index":7900},{"krate":0,"index":7978},{"krate":0,"index":7979},{"krate":0,"index":7980},{"krate":0,"index":7981},{"krate":0,"index":8042}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21559,"byte_end":21586,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"/ Asynchronous green-threads.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215365,"byte_end":11215396,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215397,"byte_end":11215400,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215401,"byte_end":11215423,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215424,"byte_end":11215427,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215428,"byte_end":11215509,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215510,"byte_end":11215590,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215591,"byte_end":11215671,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215672,"byte_end":11215746,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215747,"byte_end":11215822,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215823,"byte_end":11215845,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215846,"byte_end":11215849,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215850,"byte_end":11215885,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215886,"byte_end":11215889,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215890,"byte_end":11215964,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11215965,"byte_end":11216044,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216045,"byte_end":11216117,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216118,"byte_end":11216193,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216194,"byte_end":11216247,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216248,"byte_end":11216251,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216252,"byte_end":11216329,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216330,"byte_end":11216403,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216404,"byte_end":11216483,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216484,"byte_end":11216562,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216563,"byte_end":11216635,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216636,"byte_end":11216711,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216712,"byte_end":11216786,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216787,"byte_end":11216862,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216863,"byte_end":11216893,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216894,"byte_end":11216897,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216898,"byte_end":11216976,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11216977,"byte_end":11217052,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217053,"byte_end":11217130,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217131,"byte_end":11217210,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217211,"byte_end":11217289,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217290,"byte_end":11217365,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217366,"byte_end":11217441,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217442,"byte_end":11217503,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217504,"byte_end":11217507,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217508,"byte_end":11217532,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217533,"byte_end":11217597,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217598,"byte_end":11217658,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217659,"byte_end":11217748,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217749,"byte_end":11217837,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217838,"byte_end":11217841,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217842,"byte_end":11217867,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217868,"byte_end":11217871,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217872,"byte_end":11217939,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217940,"byte_end":11217943,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217944,"byte_end":11217960,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217961,"byte_end":11217964,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11217965,"byte_end":11218044,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218045,"byte_end":11218124,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218125,"byte_end":11218204,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218205,"byte_end":11218272,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218273,"byte_end":11218276,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218277,"byte_end":11218284,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218285,"byte_end":11218305,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218306,"byte_end":11218309,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218310,"byte_end":11218332,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218333,"byte_end":11218356,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218357,"byte_end":11218393,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218394,"byte_end":11218401,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218402,"byte_end":11218409,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218410,"byte_end":11218417,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218418,"byte_end":11218421,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218422,"byte_end":11218501,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218502,"byte_end":11218580,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218581,"byte_end":11218615,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218616,"byte_end":11218619,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218620,"byte_end":11218627,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218628,"byte_end":11218648,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218649,"byte_end":11218652,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218653,"byte_end":11218733,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218734,"byte_end":11218768,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218769,"byte_end":11218783,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218784,"byte_end":11218806,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218807,"byte_end":11218814,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218815,"byte_end":11218818,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218819,"byte_end":11218829,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218830,"byte_end":11218833,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218834,"byte_end":11218878,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218879,"byte_end":11218908,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218909,"byte_end":11218948,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218949,"byte_end":11218961,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218962,"byte_end":11218969,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218970,"byte_end":11218977,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218978,"byte_end":11218981,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11218982,"byte_end":11219062,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219063,"byte_end":11219139,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219140,"byte_end":11219152,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219153,"byte_end":11219156,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219157,"byte_end":11219164,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219165,"byte_end":11219185,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219186,"byte_end":11219189,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219190,"byte_end":11219228,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219229,"byte_end":11219263,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219264,"byte_end":11219305,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219306,"byte_end":11219313,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219314,"byte_end":11219317,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219318,"byte_end":11219376,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219377,"byte_end":11219410,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219411,"byte_end":11219418,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219419,"byte_end":11219426,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219427,"byte_end":11219430,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219431,"byte_end":11219504,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ feature flag is enabled.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219505,"byte_end":11219533,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219534,"byte_end":11219537,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219538,"byte_end":11219579,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219580,"byte_end":11219613,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219614,"byte_end":11219660,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219661,"byte_end":11219704,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219705,"byte_end":11219747,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219748,"byte_end":11219789,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219790,"byte_end":11219793,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219794,"byte_end":11219823,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219824,"byte_end":11219827,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219828,"byte_end":11219908,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219909,"byte_end":11219988,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11219989,"byte_end":11220068,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220069,"byte_end":11220109,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220110,"byte_end":11220113,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220114,"byte_end":11220188,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220189,"byte_end":11220269,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220270,"byte_end":11220273,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220274,"byte_end":11220297,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220298,"byte_end":11220301,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220302,"byte_end":11220382,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220383,"byte_end":11220449,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220450,"byte_end":11220517,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220518,"byte_end":11220592,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220593,"byte_end":11220605,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220606,"byte_end":11220609,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220610,"byte_end":11220617,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220618,"byte_end":11220638,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220639,"byte_end":11220642,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220643,"byte_end":11220666,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220667,"byte_end":11220696,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220697,"byte_end":11220759,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220760,"byte_end":11220767,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220768,"byte_end":11220775,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220776,"byte_end":11220783,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220784,"byte_end":11220787,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220788,"byte_end":11220862,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220863,"byte_end":11220930,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220931,"byte_end":11220934,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220935,"byte_end":11220946,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220947,"byte_end":11220969,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11220970,"byte_end":11221034,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221035,"byte_end":11221075,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221076,"byte_end":11221138,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221139,"byte_end":11221167,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221168,"byte_end":11221175,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221176,"byte_end":11221179,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221180,"byte_end":11221209,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221210,"byte_end":11221255,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221256,"byte_end":11221268,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221269,"byte_end":11221276,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221277,"byte_end":11221284,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221285,"byte_end":11221288,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221289,"byte_end":11221312,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221313,"byte_end":11221316,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221317,"byte_end":11221397,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221398,"byte_end":11221472,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221473,"byte_end":11221549,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221550,"byte_end":11221624,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221625,"byte_end":11221704,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221705,"byte_end":11221787,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221788,"byte_end":11221809,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221810,"byte_end":11221813,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221814,"byte_end":11221830,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221831,"byte_end":11221834,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221835,"byte_end":11221842,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221843,"byte_end":11221863,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221864,"byte_end":11221867,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221868,"byte_end":11221891,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221892,"byte_end":11221934,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221935,"byte_end":11221997,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11221998,"byte_end":11222026,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222027,"byte_end":11222034,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222035,"byte_end":11222038,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222039,"byte_end":11222084,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222085,"byte_end":11222092,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222093,"byte_end":11222100,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222101,"byte_end":11222104,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222105,"byte_end":11222123,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222124,"byte_end":11222127,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222128,"byte_end":11222202,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222203,"byte_end":11222281,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222282,"byte_end":11222358,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222359,"byte_end":11222416,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222417,"byte_end":11222495,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222496,"byte_end":11222524,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222525,"byte_end":11222528,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222529,"byte_end":11222540,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222541,"byte_end":11222561,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222562,"byte_end":11222565,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222566,"byte_end":11222604,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222605,"byte_end":11222616,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222617,"byte_end":11222644,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222645,"byte_end":11222663,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222664,"byte_end":11222706,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222707,"byte_end":11222718,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222719,"byte_end":11222722,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222723,"byte_end":11222790,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222791,"byte_end":11222823,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222824,"byte_end":11222860,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222861,"byte_end":11222866,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222867,"byte_end":11222880,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222881,"byte_end":11222888,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222889,"byte_end":11222896,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222897,"byte_end":11222900,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222901,"byte_end":11222958,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11222959,"byte_end":11223016,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11223017,"byte_end":11223076,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11223077,"byte_end":11223126,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":11223127,"byte_end":11223176,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":7868},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\blocking.rs","byte_start":11225776,"byte_end":11225790,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"pub fn block_in_place<F, R>(F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-threaded\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":22029,"byte_end":22060,"line_start":272,"line_end":272,"column_start":13,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":7871},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\blocking.rs","byte_start":11228679,"byte_end":11228693,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"blocking\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":16564,"byte_end":16592,"line_start":15,"line_end":15,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":7890},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\spawn.rs","byte_start":11232865,"byte_end":11232870,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":7892},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\yield_now.rs","byte_start":11233943,"byte_end":11233952,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\yield_now.rs","byte_start":11233862,"byte_end":11233925,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8043},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11238350,"byte_end":11238358,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":8044},{"krate":0,"index":8045},{"krate":0,"index":8046}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":8052},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11240370,"byte_end":11240381,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":7933},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11241278,"byte_end":11241281,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11241233,"byte_end":11241266,"line_start":222,"line_end":222,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7934},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242986,"byte_end":11242997,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11241823,"byte_end":11241873,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11241878,"byte_end":11241881,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11241886,"byte_end":11241946,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11241951,"byte_end":11241954,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11241959,"byte_end":11242031,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242036,"byte_end":11242106,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242111,"byte_end":11242122,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242127,"byte_end":11242147,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242152,"byte_end":11242155,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242160,"byte_end":11242178,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242183,"byte_end":11242204,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242209,"byte_end":11242251,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242256,"byte_end":11242259,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242264,"byte_end":11242336,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242341,"byte_end":11242394,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242399,"byte_end":11242432,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242437,"byte_end":11242454,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242459,"byte_end":11242470,"line_start":257,"line_end":257,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242475,"byte_end":11242478,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242483,"byte_end":11242517,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242522,"byte_end":11242558,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242563,"byte_end":11242581,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242586,"byte_end":11242603,"line_start":262,"line_end":262,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242608,"byte_end":11242611,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242616,"byte_end":11242687,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242692,"byte_end":11242742,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242747,"byte_end":11242780,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242785,"byte_end":11242802,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242807,"byte_end":11242818,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242823,"byte_end":11242826,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242831,"byte_end":11242867,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242872,"byte_end":11242890,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242895,"byte_end":11242912,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242917,"byte_end":11242922,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242927,"byte_end":11242934,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11242939,"byte_end":11242974,"line_start":275,"line_end":275,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":7936},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245732,"byte_end":11245740,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &mut crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243340,"byte_end":11243414,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243419,"byte_end":11243478,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243483,"byte_end":11243486,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243491,"byte_end":11243558,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243563,"byte_end":11243636,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243641,"byte_end":11243717,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243722,"byte_end":11243802,"line_start":293,"line_end":293,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243807,"byte_end":11243826,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243831,"byte_end":11243834,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243839,"byte_end":11243905,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243910,"byte_end":11243913,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243918,"byte_end":11243930,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243935,"byte_end":11243938,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11243943,"byte_end":11244015,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244020,"byte_end":11244093,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244098,"byte_end":11244101,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244106,"byte_end":11244117,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244122,"byte_end":11244125,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244130,"byte_end":11244204,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244209,"byte_end":11244284,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244289,"byte_end":11244364,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244369,"byte_end":11244446,"line_start":308,"line_end":308,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244451,"byte_end":11244454,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244459,"byte_end":11244492,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244497,"byte_end":11244516,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244521,"byte_end":11244553,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244558,"byte_end":11244578,"line_start":313,"line_end":313,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244583,"byte_end":11244586,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244591,"byte_end":11244632,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244637,"byte_end":11244675,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244680,"byte_end":11244715,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244720,"byte_end":11244764,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244769,"byte_end":11244828,"line_start":319,"line_end":319,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244833,"byte_end":11244855,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244860,"byte_end":11244875,"line_start":321,"line_end":321,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244880,"byte_end":11244898,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244903,"byte_end":11244914,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244919,"byte_end":11244947,"line_start":324,"line_end":324,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244952,"byte_end":11244958,"line_start":325,"line_end":325,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244963,"byte_end":11244970,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11244975,"byte_end":11245009,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245014,"byte_end":11245021,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245026,"byte_end":11245058,"line_start":329,"line_end":329,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245063,"byte_end":11245083,"line_start":330,"line_end":330,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245088,"byte_end":11245091,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245096,"byte_end":11245137,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245142,"byte_end":11245180,"line_start":333,"line_end":333,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245185,"byte_end":11245220,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245225,"byte_end":11245269,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245274,"byte_end":11245333,"line_start":336,"line_end":336,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245338,"byte_end":11245360,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245365,"byte_end":11245386,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245391,"byte_end":11245409,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245414,"byte_end":11245425,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245430,"byte_end":11245458,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245463,"byte_end":11245469,"line_start":342,"line_end":342,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245474,"byte_end":11245481,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245486,"byte_end":11245489,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245494,"byte_end":11245529,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245534,"byte_end":11245601,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245606,"byte_end":11245661,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245666,"byte_end":11245720,"line_start":348,"line_end":348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7938},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246991,"byte_end":11247000,"line_start":384,"line_end":384,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245899,"byte_end":11245969,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245974,"byte_end":11245977,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11245982,"byte_end":11246052,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246057,"byte_end":11246133,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246138,"byte_end":11246206,"line_start":360,"line_end":360,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246211,"byte_end":11246291,"line_start":361,"line_end":361,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246296,"byte_end":11246368,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246373,"byte_end":11246448,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246453,"byte_end":11246509,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246514,"byte_end":11246517,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246522,"byte_end":11246536,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246541,"byte_end":11246544,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246549,"byte_end":11246560,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246565,"byte_end":11246585,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246590,"byte_end":11246593,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246598,"byte_end":11246616,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246621,"byte_end":11246642,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246647,"byte_end":11246694,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246699,"byte_end":11246741,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246746,"byte_end":11246768,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246773,"byte_end":11246803,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246808,"byte_end":11246826,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246831,"byte_end":11246848,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246853,"byte_end":11246858,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246863,"byte_end":11246870,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246875,"byte_end":11246878,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246883,"byte_end":11246918,"line_start":382,"line_end":382,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11246923,"byte_end":11246973,"line_start":383,"line_end":383,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":7995},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255917,"byte_end":11255925,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":7997}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255084,"byte_end":11255114,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255115,"byte_end":11255118,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255119,"byte_end":11255173,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255174,"byte_end":11255177,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255178,"byte_end":11255244,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255245,"byte_end":11255312,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255313,"byte_end":11255370,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255371,"byte_end":11255440,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255441,"byte_end":11255444,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255445,"byte_end":11255459,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255460,"byte_end":11255463,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255464,"byte_end":11255471,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255472,"byte_end":11255494,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255495,"byte_end":11255519,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255520,"byte_end":11255547,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255548,"byte_end":11255553,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255554,"byte_end":11255557,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255558,"byte_end":11255590,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255591,"byte_end":11255627,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255628,"byte_end":11255641,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255642,"byte_end":11255645,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255646,"byte_end":11255678,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255679,"byte_end":11255715,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255716,"byte_end":11255719,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255720,"byte_end":11255756,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255757,"byte_end":11255797,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255798,"byte_end":11255815,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255816,"byte_end":11255829,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255830,"byte_end":11255837,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255838,"byte_end":11255845,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255846,"byte_end":11255905,"line_start":92,"line_end":92,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":7997},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11255967,"byte_end":11255972,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":7995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8000},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256500,"byte_end":11256505,"line_start":116,"line_end":116,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256050,"byte_end":11256114,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256119,"byte_end":11256122,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256127,"byte_end":11256188,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256193,"byte_end":11256196,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256201,"byte_end":11256217,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256222,"byte_end":11256225,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256230,"byte_end":11256237,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256242,"byte_end":11256264,"line_start":106,"line_end":106,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256269,"byte_end":11256293,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256298,"byte_end":11256325,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256330,"byte_end":11256335,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256340,"byte_end":11256343,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256348,"byte_end":11256380,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256385,"byte_end":11256440,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256445,"byte_end":11256458,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256463,"byte_end":11256470,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256475,"byte_end":11256482,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8004},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256979,"byte_end":11256983,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256730,"byte_end":11256796,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256801,"byte_end":11256804,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256809,"byte_end":11256821,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256826,"byte_end":11256829,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256834,"byte_end":11256895,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256900,"byte_end":11256967,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8007},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11257471,"byte_end":11257479,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11257224,"byte_end":11257290,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11257295,"byte_end":11257298,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11257303,"byte_end":11257369,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11257374,"byte_end":11257439,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11257444,"byte_end":11257459,"line_start":148,"line_end":148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8013},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11257939,"byte_end":11257942,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11257834,"byte_end":11257876,"line_start":164,"line_end":164,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11257881,"byte_end":11257927,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":8055},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11259431,"byte_end":11259442,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":8056}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11259306,"byte_end":11259381,"line_start":222,"line_end":222,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":8067},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","parent":null,"children":[{"krate":0,"index":8068},{"krate":0,"index":8069},{"krate":0,"index":8070},{"krate":0,"index":8146},{"krate":0,"index":8147},{"krate":0,"index":8167},{"krate":0,"index":8168},{"krate":0,"index":8169},{"krate":0,"index":8170},{"krate":0,"index":8171},{"krate":0,"index":8348},{"krate":0,"index":8361},{"krate":0,"index":8362},{"krate":0,"index":8398},{"krate":0,"index":8399},{"krate":0,"index":8422},{"krate":0,"index":8423},{"krate":0,"index":8424},{"krate":0,"index":8425},{"krate":0,"index":8426},{"krate":0,"index":8460},{"krate":0,"index":8461},{"krate":0,"index":8462},{"krate":0,"index":8463},{"krate":0,"index":8464},{"krate":0,"index":8700},{"krate":0,"index":8724},{"krate":0,"index":8725},{"krate":0,"index":8726},{"krate":0,"index":8465},{"krate":0,"index":8529},{"krate":0,"index":8530},{"krate":0,"index":8535}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":23098,"byte_end":23122,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11259815,"byte_end":11259847,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11259848,"byte_end":11259851,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11259852,"byte_end":11259932,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11259933,"byte_end":11259945,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11259946,"byte_end":11259949,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11259950,"byte_end":11260031,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260032,"byte_end":11260046,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260047,"byte_end":11260050,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260051,"byte_end":11260121,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260122,"byte_end":11260202,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260203,"byte_end":11260217,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260218,"byte_end":11260221,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260222,"byte_end":11260301,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260302,"byte_end":11260374,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260375,"byte_end":11260444,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260445,"byte_end":11260448,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260449,"byte_end":11260526,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260527,"byte_end":11260545,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260546,"byte_end":11260549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260550,"byte_end":11260621,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260622,"byte_end":11260641,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260642,"byte_end":11260645,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260646,"byte_end":11260716,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260717,"byte_end":11260720,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260721,"byte_end":11260735,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260736,"byte_end":11260739,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260740,"byte_end":11260786,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260787,"byte_end":11260790,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260791,"byte_end":11260798,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::delay_for;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260799,"byte_end":11260830,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260831,"byte_end":11260834,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260835,"byte_end":11260863,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260864,"byte_end":11260867,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260868,"byte_end":11260871,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260872,"byte_end":11260890,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260891,"byte_end":11260912,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260913,"byte_end":11260965,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11260966,"byte_end":11261006,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261007,"byte_end":11261012,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261013,"byte_end":11261020,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261021,"byte_end":11261024,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261025,"byte_end":11261104,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261105,"byte_end":11261183,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ prelude.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261184,"byte_end":11261196,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261197,"byte_end":11261200,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261201,"byte_end":11261208,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261209,"byte_end":11261250,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261251,"byte_end":11261254,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261255,"byte_end":11261283,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261284,"byte_end":11261307,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261308,"byte_end":11261313,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261314,"byte_end":11261317,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261318,"byte_end":11261340,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261341,"byte_end":11261408,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261409,"byte_end":11261412,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261413,"byte_end":11261434,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261435,"byte_end":11261475,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261476,"byte_end":11261481,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261482,"byte_end":11261489,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261490,"byte_end":11261497,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261498,"byte_end":11261501,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261502,"byte_end":11261578,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261579,"byte_end":11261582,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261583,"byte_end":11261651,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261652,"byte_end":11261724,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261725,"byte_end":11261800,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261801,"byte_end":11261879,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261880,"byte_end":11261883,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261884,"byte_end":11261962,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11261963,"byte_end":11262033,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262034,"byte_end":11262046,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262047,"byte_end":11262050,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262051,"byte_end":11262058,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262059,"byte_end":11262079,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262080,"byte_end":11262083,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262084,"byte_end":11262125,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262126,"byte_end":11262152,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262153,"byte_end":11262212,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262213,"byte_end":11262218,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262219,"byte_end":11262222,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262223,"byte_end":11262241,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262242,"byte_end":11262263,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262264,"byte_end":11262336,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262337,"byte_end":11262361,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262362,"byte_end":11262396,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262397,"byte_end":11262442,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262443,"byte_end":11262452,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262453,"byte_end":11262458,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262459,"byte_end":11262466,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262467,"byte_end":11262470,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262471,"byte_end":11262514,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262515,"byte_end":11262556,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":8070},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","parent":null,"children":[{"krate":0,"index":8071},{"krate":0,"index":8072},{"krate":0,"index":8073},{"krate":0,"index":8074},{"krate":0,"index":8075},{"krate":0,"index":8076},{"krate":0,"index":8077},{"krate":0,"index":8078},{"krate":0,"index":8079},{"krate":0,"index":8080},{"krate":0,"index":8081},{"krate":0,"index":8082},{"krate":0,"index":8083},{"krate":0,"index":15123},{"krate":0,"index":8084},{"krate":0,"index":8085},{"krate":0,"index":8086},{"krate":0,"index":8087},{"krate":0,"index":8552},{"krate":0,"index":8560},{"krate":0,"index":8563},{"krate":0,"index":8568},{"krate":0,"index":8571},{"krate":0,"index":8575},{"krate":0,"index":8573},{"krate":0,"index":8577},{"krate":0,"index":8581},{"krate":0,"index":8584},{"krate":0,"index":8591},{"krate":0,"index":8088},{"krate":0,"index":8089},{"krate":0,"index":8116},{"krate":0,"index":8118},{"krate":0,"index":8121},{"krate":0,"index":8125},{"krate":0,"index":8135},{"krate":0,"index":8138},{"krate":0,"index":8140}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11268707,"byte_end":11268739,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11268740,"byte_end":11268743,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11268744,"byte_end":11268784,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11268785,"byte_end":11268788,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11268789,"byte_end":11268826,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":8552},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11273085,"byte_end":11273095,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":8554},{"krate":0,"index":8555},{"krate":0,"index":8556},{"krate":0,"index":8557},{"krate":0,"index":8558},{"krate":0,"index":8559}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269067,"byte_end":11269099,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269100,"byte_end":11269103,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269104,"byte_end":11269181,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269182,"byte_end":11269222,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269223,"byte_end":11269226,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269227,"byte_end":11269238,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269239,"byte_end":11269242,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269243,"byte_end":11269310,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269311,"byte_end":11269391,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269392,"byte_end":11269470,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269471,"byte_end":11269507,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269508,"byte_end":11269511,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269512,"byte_end":11269582,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll`] is called. If an entry has reached its","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269583,"byte_end":11269661,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269662,"byte_end":11269735,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269736,"byte_end":11269805,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269806,"byte_end":11269809,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269810,"byte_end":11269839,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269840,"byte_end":11269843,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`Stream::poll`]. If no delays have","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269844,"byte_end":11269922,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11269923,"byte_end":11270003,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270004,"byte_end":11270080,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270081,"byte_end":11270093,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270094,"byte_end":11270097,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270098,"byte_end":11270177,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270178,"byte_end":11270255,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270256,"byte_end":11270332,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270333,"byte_end":11270366,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270367,"byte_end":11270370,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270371,"byte_end":11270449,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270450,"byte_end":11270526,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270527,"byte_end":11270605,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270606,"byte_end":11270645,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270646,"byte_end":11270649,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270650,"byte_end":11270670,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270671,"byte_end":11270674,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270675,"byte_end":11270773,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270774,"byte_end":11270871,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270872,"byte_end":11270913,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270914,"byte_end":11270917,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11270918,"byte_end":11271018,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271019,"byte_end":11271084,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271085,"byte_end":11271088,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271089,"byte_end":11271171,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271172,"byte_end":11271199,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271200,"byte_end":11271203,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271204,"byte_end":11271215,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271216,"byte_end":11271219,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271220,"byte_end":11271267,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271268,"byte_end":11271271,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271272,"byte_end":11271290,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271291,"byte_end":11271345,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271346,"byte_end":11271349,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271350,"byte_end":11271373,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271374,"byte_end":11271408,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271409,"byte_end":11271444,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271445,"byte_end":11271473,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271474,"byte_end":11271503,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271504,"byte_end":11271530,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271531,"byte_end":11271534,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271535,"byte_end":11271553,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271554,"byte_end":11271616,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271617,"byte_end":11271659,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271660,"byte_end":11271665,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271666,"byte_end":11271669,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271670,"byte_end":11271699,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271700,"byte_end":11271703,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271704,"byte_end":11271720,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271721,"byte_end":11271780,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271781,"byte_end":11271821,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271822,"byte_end":11271890,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271891,"byte_end":11271894,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271895,"byte_end":11271948,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271949,"byte_end":11271958,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271959,"byte_end":11271962,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11271963,"byte_end":11272020,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272021,"byte_end":11272054,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272055,"byte_end":11272092,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272093,"byte_end":11272102,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272103,"byte_end":11272106,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272107,"byte_end":11272153,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272154,"byte_end":11272222,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272223,"byte_end":11272275,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272276,"byte_end":11272289,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272290,"byte_end":11272299,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272300,"byte_end":11272303,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272304,"byte_end":11272387,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272388,"byte_end":11272465,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272466,"byte_end":11272499,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272500,"byte_end":11272553,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272554,"byte_end":11272567,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272568,"byte_end":11272571,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272572,"byte_end":11272603,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272604,"byte_end":11272613,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272614,"byte_end":11272619,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272620,"byte_end":11272627,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272628,"byte_end":11272631,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272632,"byte_end":11272667,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272668,"byte_end":11272709,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272710,"byte_end":11272733,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272734,"byte_end":11272810,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272811,"byte_end":11272842,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/ [`Stream::poll`]: method@Self::poll","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272843,"byte_end":11272882,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272883,"byte_end":11272920,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272921,"byte_end":11272959,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272960,"byte_end":11272978,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11272979,"byte_end":11273018,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11273019,"byte_end":11273056,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":8563},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11273786,"byte_end":11273793,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":8565},{"krate":0,"index":8566},{"krate":0,"index":8567}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11273592,"byte_end":11273650,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11273651,"byte_end":11273654,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11273655,"byte_end":11273703,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11273704,"byte_end":11273707,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll`]: method@DelayQueue::poll","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11273708,"byte_end":11273757,"line_start":151,"line_end":151,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":8571},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11274261,"byte_end":11274264,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":8572}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11273961,"byte_end":11274007,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11274008,"byte_end":11274011,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11274012,"byte_end":11274093,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11274094,"byte_end":11274129,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11274130,"byte_end":11274133,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11274134,"byte_end":11274171,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11274172,"byte_end":11274225,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8091},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275242,"byte_end":11275245,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11274942,"byte_end":11274980,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11274985,"byte_end":11274988,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11274993,"byte_end":11275066,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275071,"byte_end":11275074,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275079,"byte_end":11275093,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275098,"byte_end":11275101,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275106,"byte_end":11275117,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275122,"byte_end":11275156,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275161,"byte_end":11275218,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275223,"byte_end":11275230,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8092},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276163,"byte_end":11276176,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275315,"byte_end":11275382,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275387,"byte_end":11275390,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275395,"byte_end":11275466,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275471,"byte_end":11275540,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275545,"byte_end":11275557,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275562,"byte_end":11275565,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275570,"byte_end":11275584,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275589,"byte_end":11275592,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275597,"byte_end":11275608,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275613,"byte_end":11275647,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275652,"byte_end":11275682,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275687,"byte_end":11275690,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275695,"byte_end":11275715,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275720,"byte_end":11275743,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275748,"byte_end":11275808,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275813,"byte_end":11275816,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275821,"byte_end":11275884,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275889,"byte_end":11275913,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275918,"byte_end":11275976,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275981,"byte_end":11275990,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11275995,"byte_end":11275998,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276003,"byte_end":11276066,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276071,"byte_end":11276127,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276132,"byte_end":11276139,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276144,"byte_end":11276151,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8093},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11278212,"byte_end":11278221,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276475,"byte_end":11276548,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276553,"byte_end":11276562,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276567,"byte_end":11276570,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276575,"byte_end":11276649,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276654,"byte_end":11276674,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276679,"byte_end":11276682,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276687,"byte_end":11276762,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276767,"byte_end":11276837,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276842,"byte_end":11276906,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276911,"byte_end":11276914,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276919,"byte_end":11276994,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11276999,"byte_end":11277074,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277079,"byte_end":11277149,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277154,"byte_end":11277227,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277232,"byte_end":11277308,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277313,"byte_end":11277347,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277352,"byte_end":11277355,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277360,"byte_end":11277412,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277417,"byte_end":11277420,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277425,"byte_end":11277437,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277442,"byte_end":11277445,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277450,"byte_end":11277510,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277515,"byte_end":11277518,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277523,"byte_end":11277537,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277542,"byte_end":11277545,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277550,"byte_end":11277565,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277570,"byte_end":11277573,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277578,"byte_end":11277589,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277594,"byte_end":11277647,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277652,"byte_end":11277655,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277660,"byte_end":11277680,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277685,"byte_end":11277708,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277713,"byte_end":11277761,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277766,"byte_end":11277806,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277811,"byte_end":11277871,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277876,"byte_end":11277879,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277884,"byte_end":11277911,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277916,"byte_end":11277960,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11277965,"byte_end":11278008,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11278013,"byte_end":11278020,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11278025,"byte_end":11278032,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11278037,"byte_end":11278040,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11278045,"byte_end":11278076,"line_start":298,"line_end":298,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11278081,"byte_end":11278116,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11278121,"byte_end":11278154,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11278159,"byte_end":11278182,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11278187,"byte_end":11278200,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8094},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11279581,"byte_end":11279593,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11279373,"byte_end":11279448,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11279453,"byte_end":11279529,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11279534,"byte_end":11279569,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8097},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281965,"byte_end":11281971,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280210,"byte_end":11280287,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280292,"byte_end":11280304,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280309,"byte_end":11280312,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280317,"byte_end":11280386,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280391,"byte_end":11280419,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280424,"byte_end":11280427,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280432,"byte_end":11280507,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280512,"byte_end":11280582,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280587,"byte_end":11280651,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280656,"byte_end":11280659,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280664,"byte_end":11280739,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280744,"byte_end":11280819,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280824,"byte_end":11280894,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280899,"byte_end":11280972,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11280977,"byte_end":11281053,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281058,"byte_end":11281092,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281097,"byte_end":11281100,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281105,"byte_end":11281157,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281162,"byte_end":11281165,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281170,"byte_end":11281182,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281187,"byte_end":11281190,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281195,"byte_end":11281270,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281275,"byte_end":11281288,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281293,"byte_end":11281296,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281301,"byte_end":11281315,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281320,"byte_end":11281323,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281328,"byte_end":11281343,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281348,"byte_end":11281351,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281356,"byte_end":11281367,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281372,"byte_end":11281404,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281409,"byte_end":11281437,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281442,"byte_end":11281445,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281450,"byte_end":11281470,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281475,"byte_end":11281498,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281503,"byte_end":11281551,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281556,"byte_end":11281624,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281629,"byte_end":11281632,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281637,"byte_end":11281664,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281669,"byte_end":11281713,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281718,"byte_end":11281761,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281766,"byte_end":11281773,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281778,"byte_end":11281785,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281790,"byte_end":11281793,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281798,"byte_end":11281829,"line_start":406,"line_end":406,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281834,"byte_end":11281869,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281874,"byte_end":11281907,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281912,"byte_end":11281935,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11281940,"byte_end":11281953,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8102},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283516,"byte_end":11283522,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11282662,"byte_end":11282720,"line_start":430,"line_end":430,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11282725,"byte_end":11282728,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11282733,"byte_end":11282806,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11282811,"byte_end":11282884,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11282889,"byte_end":11282906,"line_start":434,"line_end":434,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11282911,"byte_end":11282914,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11282919,"byte_end":11282931,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11282936,"byte_end":11282939,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11282944,"byte_end":11283007,"line_start":438,"line_end":438,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283012,"byte_end":11283015,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283020,"byte_end":11283034,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283039,"byte_end":11283042,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283047,"byte_end":11283062,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283067,"byte_end":11283070,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283075,"byte_end":11283086,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283091,"byte_end":11283123,"line_start":445,"line_end":445,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283128,"byte_end":11283156,"line_start":446,"line_end":446,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283161,"byte_end":11283164,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283169,"byte_end":11283189,"line_start":448,"line_end":448,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283194,"byte_end":11283217,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283222,"byte_end":11283270,"line_start":450,"line_end":450,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283275,"byte_end":11283343,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283348,"byte_end":11283351,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283356,"byte_end":11283383,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283388,"byte_end":11283432,"line_start":454,"line_end":454,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283437,"byte_end":11283480,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283485,"byte_end":11283492,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11283497,"byte_end":11283504,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8104},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11285174,"byte_end":11285182,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284060,"byte_end":11284133,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284138,"byte_end":11284141,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284146,"byte_end":11284221,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284226,"byte_end":11284243,"line_start":480,"line_end":480,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284248,"byte_end":11284251,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284256,"byte_end":11284331,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284336,"byte_end":11284412,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284417,"byte_end":11284432,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284437,"byte_end":11284440,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284445,"byte_end":11284457,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284462,"byte_end":11284465,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284470,"byte_end":11284544,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284549,"byte_end":11284580,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284585,"byte_end":11284588,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284593,"byte_end":11284607,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284612,"byte_end":11284615,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284620,"byte_end":11284635,"line_start":493,"line_end":493,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284640,"byte_end":11284643,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284648,"byte_end":11284659,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284664,"byte_end":11284717,"line_start":496,"line_end":496,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284722,"byte_end":11284725,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284730,"byte_end":11284750,"line_start":498,"line_end":498,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284755,"byte_end":11284778,"line_start":499,"line_end":499,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284783,"byte_end":11284831,"line_start":500,"line_end":500,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284836,"byte_end":11284904,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284909,"byte_end":11284912,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284917,"byte_end":11284974,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284979,"byte_end":11284982,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11284987,"byte_end":11285064,"line_start":505,"line_end":505,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11285069,"byte_end":11285072,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11285077,"byte_end":11285138,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11285143,"byte_end":11285150,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11285155,"byte_end":11285162,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8107},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287075,"byte_end":11287080,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11285925,"byte_end":11285993,"line_start":532,"line_end":532,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11285998,"byte_end":11286012,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286017,"byte_end":11286020,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286025,"byte_end":11286100,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286105,"byte_end":11286125,"line_start":536,"line_end":536,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286130,"byte_end":11286133,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286138,"byte_end":11286208,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286213,"byte_end":11286283,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286288,"byte_end":11286316,"line_start":540,"line_end":540,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286321,"byte_end":11286324,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286329,"byte_end":11286341,"line_start":542,"line_end":542,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286346,"byte_end":11286349,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286354,"byte_end":11286429,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286434,"byte_end":11286489,"line_start":545,"line_end":545,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286494,"byte_end":11286497,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286502,"byte_end":11286516,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286521,"byte_end":11286524,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286529,"byte_end":11286544,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286549,"byte_end":11286552,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286557,"byte_end":11286568,"line_start":551,"line_end":551,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286573,"byte_end":11286605,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286610,"byte_end":11286638,"line_start":553,"line_end":553,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286643,"byte_end":11286646,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286651,"byte_end":11286671,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286676,"byte_end":11286699,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286704,"byte_end":11286752,"line_start":557,"line_end":557,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286757,"byte_end":11286825,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286830,"byte_end":11286833,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286838,"byte_end":11286895,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286900,"byte_end":11286903,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286908,"byte_end":11286965,"line_start":562,"line_end":562,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286970,"byte_end":11286973,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11286978,"byte_end":11287039,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287044,"byte_end":11287051,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287056,"byte_end":11287063,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8108},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287922,"byte_end":11287927,"line_start":598,"line_end":598,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287189,"byte_end":11287230,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287235,"byte_end":11287238,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll`] will return `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287243,"byte_end":11287309,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287314,"byte_end":11287317,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287322,"byte_end":11287388,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287393,"byte_end":11287396,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287401,"byte_end":11287432,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287437,"byte_end":11287440,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287445,"byte_end":11287459,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287464,"byte_end":11287467,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287472,"byte_end":11287483,"line_start":581,"line_end":581,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287488,"byte_end":11287520,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287525,"byte_end":11287553,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287558,"byte_end":11287561,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287566,"byte_end":11287586,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287591,"byte_end":11287614,"line_start":586,"line_end":586,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287619,"byte_end":11287667,"line_start":587,"line_end":587,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287672,"byte_end":11287675,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287680,"byte_end":11287738,"line_start":589,"line_end":589,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287743,"byte_end":11287746,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287751,"byte_end":11287792,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287797,"byte_end":11287800,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287805,"byte_end":11287833,"line_start":593,"line_end":593,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287838,"byte_end":11287841,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287846,"byte_end":11287886,"line_start":595,"line_end":595,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287891,"byte_end":11287898,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11287903,"byte_end":11287910,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8109},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288399,"byte_end":11288407,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288082,"byte_end":11288157,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288162,"byte_end":11288165,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288170,"byte_end":11288184,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288189,"byte_end":11288192,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288197,"byte_end":11288208,"line_start":609,"line_end":609,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288213,"byte_end":11288245,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288250,"byte_end":11288253,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288258,"byte_end":11288327,"line_start":612,"line_end":612,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288332,"byte_end":11288375,"line_start":613,"line_end":613,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288380,"byte_end":11288387,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8110},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288975,"byte_end":11288978,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288466,"byte_end":11288524,"line_start":619,"line_end":619,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288529,"byte_end":11288532,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288537,"byte_end":11288551,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288556,"byte_end":11288559,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288564,"byte_end":11288575,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288580,"byte_end":11288612,"line_start":624,"line_end":624,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288617,"byte_end":11288645,"line_start":625,"line_end":625,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288650,"byte_end":11288653,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288658,"byte_end":11288678,"line_start":627,"line_end":627,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288683,"byte_end":11288706,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288711,"byte_end":11288788,"line_start":629,"line_end":629,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288793,"byte_end":11288834,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288839,"byte_end":11288893,"line_start":631,"line_end":631,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288898,"byte_end":11288939,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288944,"byte_end":11288951,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11288956,"byte_end":11288963,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8111},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290187,"byte_end":11290194,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289032,"byte_end":11289103,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289108,"byte_end":11289131,"line_start":640,"line_end":640,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289136,"byte_end":11289139,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289144,"byte_end":11289219,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289224,"byte_end":11289300,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289305,"byte_end":11289381,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289386,"byte_end":11289462,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289467,"byte_end":11289490,"line_start":646,"line_end":646,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289495,"byte_end":11289498,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289503,"byte_end":11289575,"line_start":648,"line_end":648,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289580,"byte_end":11289613,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289618,"byte_end":11289621,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289626,"byte_end":11289638,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289643,"byte_end":11289646,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289651,"byte_end":11289723,"line_start":653,"line_end":653,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289728,"byte_end":11289750,"line_start":654,"line_end":654,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289755,"byte_end":11289758,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289763,"byte_end":11289777,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289782,"byte_end":11289785,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289790,"byte_end":11289797,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289802,"byte_end":11289834,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289839,"byte_end":11289867,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289872,"byte_end":11289875,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289880,"byte_end":11289900,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289905,"byte_end":11289928,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289933,"byte_end":11289981,"line_start":664,"line_end":664,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289986,"byte_end":11289989,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11289994,"byte_end":11290055,"line_start":666,"line_end":666,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290060,"byte_end":11290092,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290097,"byte_end":11290100,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290105,"byte_end":11290151,"line_start":669,"line_end":669,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290156,"byte_end":11290163,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290168,"byte_end":11290175,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8112},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290910,"byte_end":11290918,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290277,"byte_end":11290331,"line_start":676,"line_end":676,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290336,"byte_end":11290339,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290344,"byte_end":11290418,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290423,"byte_end":11290479,"line_start":679,"line_end":679,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290484,"byte_end":11290487,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290492,"byte_end":11290506,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290511,"byte_end":11290514,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290519,"byte_end":11290526,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290531,"byte_end":11290563,"line_start":684,"line_end":684,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290568,"byte_end":11290596,"line_start":685,"line_end":685,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290601,"byte_end":11290604,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290609,"byte_end":11290629,"line_start":687,"line_end":687,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290634,"byte_end":11290657,"line_start":688,"line_end":688,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290662,"byte_end":11290710,"line_start":689,"line_end":689,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290715,"byte_end":11290755,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290760,"byte_end":11290763,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290768,"byte_end":11290828,"line_start":692,"line_end":692,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290833,"byte_end":11290874,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290879,"byte_end":11290886,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11290891,"byte_end":11290898,"line_start":695,"line_end":695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8142},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295581,"byte_end":11295588,"line_start":869,"line_end":869,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295526,"byte_end":11295569,"line_start":868,"line_end":868,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":8143},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295697,"byte_end":11295704,"line_start":874,"line_end":874,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295634,"byte_end":11295685,"line_start":873,"line_end":873,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8144},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295822,"byte_end":11295832,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295762,"byte_end":11295810,"line_start":878,"line_end":878,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8145},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295943,"byte_end":11295951,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295875,"byte_end":11295931,"line_start":883,"line_end":883,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":8157},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296529,"byte_end":11296540,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"pub fn delay_until(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296155,"byte_end":11296193,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296194,"byte_end":11296197,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296198,"byte_end":11296273,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296274,"byte_end":11296351,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296352,"byte_end":11296387,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296388,"byte_end":11296391,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296392,"byte_end":11296410,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296411,"byte_end":11296414,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296415,"byte_end":11296491,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296492,"byte_end":11296521,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":8158},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297606,"byte_end":11297615,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296679,"byte_end":11296718,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296719,"byte_end":11296722,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296723,"byte_end":11296798,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296799,"byte_end":11296834,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296835,"byte_end":11296838,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296839,"byte_end":11296914,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296915,"byte_end":11296992,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11296993,"byte_end":11297028,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297029,"byte_end":11297032,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297033,"byte_end":11297096,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297097,"byte_end":11297100,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297101,"byte_end":11297119,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297120,"byte_end":11297123,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297124,"byte_end":11297200,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297201,"byte_end":11297230,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297231,"byte_end":11297234,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297235,"byte_end":11297249,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297250,"byte_end":11297253,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297254,"byte_end":11297301,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297302,"byte_end":11297305,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297306,"byte_end":11297313,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297314,"byte_end":11297357,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297358,"byte_end":11297361,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297362,"byte_end":11297380,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297381,"byte_end":11297402,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297403,"byte_end":11297455,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297456,"byte_end":11297496,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297497,"byte_end":11297502,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297503,"byte_end":11297510,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297511,"byte_end":11297514,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297515,"byte_end":11297556,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":8594},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297875,"byte_end":11297880,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":8595}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297693,"byte_end":11297748,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297749,"byte_end":11297778,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11297796,"byte_end":11297863,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8161},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298320,"byte_end":11298328,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298250,"byte_end":11298308,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8162},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298532,"byte_end":11298542,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298397,"byte_end":11298442,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298447,"byte_end":11298450,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298455,"byte_end":11298520,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8163},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298931,"byte_end":11298936,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298610,"byte_end":11298660,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298665,"byte_end":11298668,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298673,"byte_end":11298747,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298752,"byte_end":11298819,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298824,"byte_end":11298827,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298832,"byte_end":11298900,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298905,"byte_end":11298919,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":8651},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332406,"byte_end":11332411,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331293,"byte_end":11331344,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331345,"byte_end":11331348,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331349,"byte_end":11331410,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331411,"byte_end":11331414,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331415,"byte_end":11331489,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331490,"byte_end":11331569,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331570,"byte_end":11331645,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331646,"byte_end":11331721,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331722,"byte_end":11331750,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331751,"byte_end":11331754,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331755,"byte_end":11331832,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331833,"byte_end":11331911,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331912,"byte_end":11331988,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11331989,"byte_end":11332069,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332070,"byte_end":11332147,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332148,"byte_end":11332229,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332230,"byte_end":11332312,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332313,"byte_end":11332316,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332317,"byte_end":11332377,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":8353},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332562,"byte_end":11332570,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332499,"byte_end":11332550,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8354},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332702,"byte_end":11332713,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332619,"byte_end":11332690,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":8355},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332901,"byte_end":11332912,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332835,"byte_end":11332889,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8356},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11333049,"byte_end":11333063,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332963,"byte_end":11333037,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":8663},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11333903,"byte_end":11333910,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":8664}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11333707,"byte_end":11333767,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11333768,"byte_end":11333830,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8367},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334157,"byte_end":11334160,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11333964,"byte_end":11334010,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334015,"byte_end":11334018,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334023,"byte_end":11334037,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334042,"byte_end":11334045,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334050,"byte_end":11334057,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334062,"byte_end":11334091,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334096,"byte_end":11334099,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334104,"byte_end":11334133,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334138,"byte_end":11334145,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8368},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334286,"byte_end":11334294,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334210,"byte_end":11334274,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":8369},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334430,"byte_end":11334438,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334368,"byte_end":11334418,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":8370},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334682,"byte_end":11334696,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334497,"byte_end":11334569,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334574,"byte_end":11334577,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334582,"byte_end":11334594,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334599,"byte_end":11334602,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334607,"byte_end":11334670,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8371},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335387,"byte_end":11335409,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334792,"byte_end":11334867,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334872,"byte_end":11334920,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334925,"byte_end":11334928,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334933,"byte_end":11334947,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334952,"byte_end":11334955,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334960,"byte_end":11334967,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11334972,"byte_end":11335024,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335029,"byte_end":11335032,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335037,"byte_end":11335055,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335060,"byte_end":11335081,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335086,"byte_end":11335119,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335124,"byte_end":11335169,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335174,"byte_end":11335211,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335216,"byte_end":11335278,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335283,"byte_end":11335353,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335358,"byte_end":11335363,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335368,"byte_end":11335375,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8372},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336132,"byte_end":11336157,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335521,"byte_end":11335596,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335601,"byte_end":11335660,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335665,"byte_end":11335668,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335673,"byte_end":11335687,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335692,"byte_end":11335695,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335700,"byte_end":11335707,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335712,"byte_end":11335764,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335769,"byte_end":11335772,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335777,"byte_end":11335795,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335800,"byte_end":11335821,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335826,"byte_end":11335859,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335864,"byte_end":11335909,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335914,"byte_end":11335951,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11335956,"byte_end":11336021,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336026,"byte_end":11336098,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336103,"byte_end":11336108,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336113,"byte_end":11336120,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8373},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336928,"byte_end":11336935,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336264,"byte_end":11336334,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336339,"byte_end":11336342,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336347,"byte_end":11336359,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336364,"byte_end":11336367,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336372,"byte_end":11336440,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336445,"byte_end":11336511,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336516,"byte_end":11336543,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336548,"byte_end":11336551,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336556,"byte_end":11336570,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336575,"byte_end":11336578,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336583,"byte_end":11336590,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336595,"byte_end":11336647,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336652,"byte_end":11336655,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336660,"byte_end":11336678,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336683,"byte_end":11336704,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336709,"byte_end":11336746,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336751,"byte_end":11336799,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336804,"byte_end":11336840,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336845,"byte_end":11336894,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336899,"byte_end":11336904,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336909,"byte_end":11336916,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8374},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11337216,"byte_end":11337227,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11336999,"byte_end":11337074,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11337079,"byte_end":11337150,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11337155,"byte_end":11337204,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8375},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11337566,"byte_end":11337577,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11337349,"byte_end":11337424,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11337429,"byte_end":11337500,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11337505,"byte_end":11337554,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":8411},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341041,"byte_end":11341049,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339299,"byte_end":11339376,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339377,"byte_end":11339408,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339409,"byte_end":11339412,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339413,"byte_end":11339493,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339494,"byte_end":11339533,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339534,"byte_end":11339537,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339538,"byte_end":11339611,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339612,"byte_end":11339615,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339616,"byte_end":11339628,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339629,"byte_end":11339632,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339633,"byte_end":11339678,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339679,"byte_end":11339682,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339683,"byte_end":11339697,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339698,"byte_end":11339701,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339702,"byte_end":11339709,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339710,"byte_end":11339748,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339749,"byte_end":11339752,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339753,"byte_end":11339771,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339772,"byte_end":11339793,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339794,"byte_end":11339863,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339864,"byte_end":11339867,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339868,"byte_end":11339898,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339899,"byte_end":11339929,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339930,"byte_end":11339960,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339961,"byte_end":11339964,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11339965,"byte_end":11340008,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340009,"byte_end":11340014,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340015,"byte_end":11340022,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340023,"byte_end":11340026,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340027,"byte_end":11340101,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340102,"byte_end":11340105,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340106,"byte_end":11340183,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340184,"byte_end":11340259,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340260,"byte_end":11340336,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340337,"byte_end":11340398,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340399,"byte_end":11340402,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340403,"byte_end":11340481,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340482,"byte_end":11340552,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340553,"byte_end":11340565,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340566,"byte_end":11340569,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340570,"byte_end":11340577,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340578,"byte_end":11340598,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340599,"byte_end":11340602,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340603,"byte_end":11340644,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340645,"byte_end":11340671,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340672,"byte_end":11340731,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340732,"byte_end":11340737,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340738,"byte_end":11340741,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340742,"byte_end":11340760,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340761,"byte_end":11340782,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340783,"byte_end":11340855,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340856,"byte_end":11340880,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340881,"byte_end":11340915,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340916,"byte_end":11340961,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340962,"byte_end":11340971,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340972,"byte_end":11340977,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340978,"byte_end":11340985,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340986,"byte_end":11340989,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11340990,"byte_end":11341033,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":8412},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341935,"byte_end":11341946,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `at`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341199,"byte_end":11341272,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `at`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341273,"byte_end":11341307,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341308,"byte_end":11341311,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341312,"byte_end":11341392,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341393,"byte_end":11341432,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341433,"byte_end":11341436,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341437,"byte_end":11341449,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341450,"byte_end":11341453,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341454,"byte_end":11341499,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341500,"byte_end":11341503,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341504,"byte_end":11341518,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341519,"byte_end":11341522,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341523,"byte_end":11341530,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341531,"byte_end":11341585,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341586,"byte_end":11341589,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341590,"byte_end":11341608,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341609,"byte_end":11341630,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341631,"byte_end":11341694,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341695,"byte_end":11341768,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341769,"byte_end":11341772,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341773,"byte_end":11341803,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341804,"byte_end":11341834,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341835,"byte_end":11341865,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341866,"byte_end":11341869,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341870,"byte_end":11341913,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341914,"byte_end":11341919,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11341920,"byte_end":11341927,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8686},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11342252,"byte_end":11342260,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":8687},{"krate":0,"index":8688}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).\n","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11342144,"byte_end":11342223,"line_start":109,"line_end":109,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":8414},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11342505,"byte_end":11342514,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8415},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343606,"byte_end":11343610,"line_start":158,"line_end":158,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343001,"byte_end":11343070,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343075,"byte_end":11343078,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343083,"byte_end":11343097,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343102,"byte_end":11343105,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343110,"byte_end":11343117,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343122,"byte_end":11343142,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343147,"byte_end":11343150,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343155,"byte_end":11343183,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343188,"byte_end":11343191,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343196,"byte_end":11343214,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343219,"byte_end":11343240,"line_start":147,"line_end":147,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343245,"byte_end":11343314,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343319,"byte_end":11343322,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343327,"byte_end":11343357,"line_start":150,"line_end":150,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343362,"byte_end":11343392,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343397,"byte_end":11343427,"line_start":152,"line_end":152,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343432,"byte_end":11343435,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343440,"byte_end":11343483,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343488,"byte_end":11343493,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343498,"byte_end":11343505,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343510,"byte_end":11343550,"line_start":157,"line_end":157,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":8439},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345292,"byte_end":11345299,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344277,"byte_end":11344354,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344355,"byte_end":11344358,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344359,"byte_end":11344438,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344439,"byte_end":11344511,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344512,"byte_end":11344525,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344526,"byte_end":11344529,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344530,"byte_end":11344547,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344548,"byte_end":11344551,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344552,"byte_end":11344630,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344631,"byte_end":11344661,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344662,"byte_end":11344665,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344666,"byte_end":11344746,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344747,"byte_end":11344774,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344775,"byte_end":11344778,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344779,"byte_end":11344793,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344794,"byte_end":11344797,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344798,"byte_end":11344858,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344859,"byte_end":11344862,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344863,"byte_end":11344874,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344875,"byte_end":11344904,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344905,"byte_end":11344934,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344935,"byte_end":11344938,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344939,"byte_end":11344967,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344968,"byte_end":11344971,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344972,"byte_end":11344994,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11344995,"byte_end":11345033,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345034,"byte_end":11345061,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345062,"byte_end":11345065,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345066,"byte_end":11345139,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345140,"byte_end":11345206,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345207,"byte_end":11345262,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345263,"byte_end":11345268,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345269,"byte_end":11345276,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345277,"byte_end":11345284,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":8441},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346521,"byte_end":11346531,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345490,"byte_end":11345562,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345563,"byte_end":11345566,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345567,"byte_end":11345644,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345645,"byte_end":11345700,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345701,"byte_end":11345704,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345705,"byte_end":11345722,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345723,"byte_end":11345726,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345727,"byte_end":11345805,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345806,"byte_end":11345836,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345837,"byte_end":11345840,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345841,"byte_end":11345921,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345922,"byte_end":11345949,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345950,"byte_end":11345953,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345954,"byte_end":11345968,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345969,"byte_end":11345972,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11345973,"byte_end":11346033,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346034,"byte_end":11346037,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346038,"byte_end":11346049,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346050,"byte_end":11346093,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346094,"byte_end":11346123,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346124,"byte_end":11346127,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346128,"byte_end":11346156,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346157,"byte_end":11346160,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346161,"byte_end":11346183,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346184,"byte_end":11346222,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346223,"byte_end":11346250,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346251,"byte_end":11346254,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346255,"byte_end":11346333,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346334,"byte_end":11346348,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346349,"byte_end":11346435,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346436,"byte_end":11346491,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346492,"byte_end":11346497,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346498,"byte_end":11346505,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346506,"byte_end":11346513,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9151},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346906,"byte_end":11346913,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":9153},{"krate":0,"index":9154}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8691},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11347070,"byte_end":11347077,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11346998,"byte_end":11347030,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":8448},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11347428,"byte_end":11347435,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11347355,"byte_end":11347416,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8449},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11347563,"byte_end":11347570,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11347482,"byte_end":11347551,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":8450},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11347699,"byte_end":11347709,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11347629,"byte_end":11347687,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":8713},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365842,"byte_end":11365850,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"pub fn throttle<T>(Duration, T) -> Throttle<T> where T: Stream","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365268,"byte_end":11365327,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365328,"byte_end":11365397,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365398,"byte_end":11365401,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365402,"byte_end":11365415,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365416,"byte_end":11365419,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365420,"byte_end":11365450,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365451,"byte_end":11365469,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365470,"byte_end":11365498,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365499,"byte_end":11365532,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365533,"byte_end":11365563,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365564,"byte_end":11365567,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365568,"byte_end":11365590,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365591,"byte_end":11365682,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365683,"byte_end":11365686,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365687,"byte_end":11365697,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365698,"byte_end":11365760,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365761,"byte_end":11365812,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365813,"byte_end":11365818,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365819,"byte_end":11365826,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11365827,"byte_end":11365834,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9105},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11366345,"byte_end":11366353,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":9107},{"krate":0,"index":9108},{"krate":0,"index":9109},{"krate":0,"index":9110}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":10009323,"byte_end":10009332,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8717},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11366820,"byte_end":11366827,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11366713,"byte_end":11366786,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11366791,"byte_end":11366808,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":8718},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11367136,"byte_end":11367143,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11366875,"byte_end":11366953,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11366958,"byte_end":11366978,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11366983,"byte_end":11366986,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11366991,"byte_end":11367071,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11367076,"byte_end":11367124,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8719},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11367438,"byte_end":11367448,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11367203,"byte_end":11367265,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11367270,"byte_end":11367273,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11367278,"byte_end":11367355,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11367360,"byte_end":11367426,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":8497},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":11364401,"byte_end":11364406,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":8496},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":11364351,"byte_end":11364391,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":8498},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":11364464,"byte_end":11364472,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":8496},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":11364437,"byte_end":11364454,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":8499},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":11364561,"byte_end":11364566,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":8496},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":11364479,"byte_end":11364551,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181032,"byte_end":181038,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180941,"byte_end":180970,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180975,"byte_end":180978,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180983,"byte_end":181022,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181068,"byte_end":181074,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181045,"byte_end":181058,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\rand.rs","byte_start":197659,"byte_end":197671,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"pub fn thread_rng_n(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\", feature = \"stream\"))","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\rand.rs","byte_start":197524,"byte_end":197575,"line_start":55,"line_end":55,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236457,"byte_end":10236467,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242238,"byte_end":10242242,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":977},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":987},{"krate":0,"index":991},{"krate":0,"index":995},{"krate":0,"index":1002},{"krate":0,"index":1006},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10255467,"byte_end":10255471,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10257955,"byte_end":10257959,"line_start":606,"line_end":606,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10260384,"byte_end":10260388,"line_start":676,"line_end":676,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10263359,"byte_end":10263363,"line_start":764,"line_end":764,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10263461,"byte_end":10263465,"line_start":770,"line_end":770,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10263852,"byte_end":10263856,"line_start":786,"line_end":786,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268623,"byte_end":10268634,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10279103,"byte_end":10279114,"line_start":393,"line_end":393,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10279232,"byte_end":10279243,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283715,"byte_end":10283722,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10284957,"byte_end":10284964,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285791,"byte_end":10285799,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\blocking.rs","byte_start":10295564,"byte_end":10295572,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\blocking.rs","byte_start":10295845,"byte_end":10295853,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\blocking.rs","byte_start":10297458,"byte_end":10297466,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1446},{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\blocking.rs","byte_start":10300191,"byte_end":10300194,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\blocking.rs","byte_start":10302009,"byte_end":10302012,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1491}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1492},{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":10314285,"byte_end":10314296,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":10315055,"byte_end":10315066,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":10315273,"byte_end":10315284,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":10317906,"byte_end":10317917,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10303654,"byte_end":10303660,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10306521,"byte_end":10306527,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10306895,"byte_end":10306901,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10307037,"byte_end":10307043,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10308186,"byte_end":10308192,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10308270,"byte_end":10308276,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10308411,"byte_end":10308416,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1597},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10309960,"byte_end":10309969,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10324475,"byte_end":10324486,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10332277,"byte_end":10332288,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10332781,"byte_end":10332792,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10333873,"byte_end":10333884,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10334057,"byte_end":10334068,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1655}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336216,"byte_end":10336228,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1682},{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10347098,"byte_end":10347110,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10347135,"byte_end":10347147,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10347166,"byte_end":10347178,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stderr.rs","byte_start":10349906,"byte_end":10349912,"line_start":83,"line_end":83,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stderr.rs","byte_start":10350051,"byte_end":10350057,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stdin.rs","byte_start":10352632,"byte_end":10352637,"line_start":59,"line_end":59,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stdin.rs","byte_start":10352774,"byte_end":10352779,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stdout.rs","byte_start":10355731,"byte_end":10355737,"line_start":83,"line_end":83,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stdout.rs","byte_start":10355876,"byte_end":10355882,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358002,"byte_end":10358010,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1819},{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358927,"byte_end":10358936,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10359186,"byte_end":10359194,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10359749,"byte_end":10359758,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10360707,"byte_end":10360712,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361105,"byte_end":10361110,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361363,"byte_end":10361368,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361491,"byte_end":10361499,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361536,"byte_end":10361545,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361582,"byte_end":10361590,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361627,"byte_end":10361636,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361679,"byte_end":10361687,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361855,"byte_end":10361864,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1858}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\seek.rs","byte_start":10362554,"byte_end":10362558,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1877},{"krate":0,"index":1878}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10374508,"byte_end":10374509,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10413794,"byte_end":10413795,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415553,"byte_end":10415554,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10450831,"byte_end":10450832,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10452248,"byte_end":10452257,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10454436,"byte_end":10454445,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2069}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10455421,"byte_end":10455430,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2072},{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10456261,"byte_end":10456270,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2079},{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10456986,"byte_end":10456995,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10458502,"byte_end":10458511,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10460348,"byte_end":10460357,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10460499,"byte_end":10460508,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2113}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10461220,"byte_end":10461229,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10461759,"byte_end":10461768,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2121},{"krate":0,"index":2122}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10462247,"byte_end":10462256,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2125},{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10464210,"byte_end":10464219,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10466497,"byte_end":10466506,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10467396,"byte_end":10467405,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10467887,"byte_end":10467896,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2165},{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10468183,"byte_end":10468192,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10469361,"byte_end":10469366,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10470506,"byte_end":10470511,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2195}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10470790,"byte_end":10470795,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2199},{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10471618,"byte_end":10471623,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2204},{"krate":0,"index":2205}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\copy.rs","byte_start":10474666,"byte_end":10474670,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2219},{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":10477780,"byte_end":10477785,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":10478114,"byte_end":10478119,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2239}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":10478352,"byte_end":10478357,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2241}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\flush.rs","byte_start":10479178,"byte_end":10479183,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2257},{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480363,"byte_end":10480368,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10481620,"byte_end":10481625,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10482372,"byte_end":10482377,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2286},{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read.rs","byte_start":10483775,"byte_end":10483779,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2303},{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_buf.rs","byte_start":10484840,"byte_end":10484847,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_exact.rs","byte_start":10486212,"byte_end":10486221,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2338},{"krate":0,"index":2339}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_line.rs","byte_start":10493756,"byte_end":10493764,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_end.rs","byte_start":10494990,"byte_end":10494995,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2391}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_end.rs","byte_start":10496671,"byte_end":10496680,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2397}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_string.rs","byte_start":10498744,"byte_end":10498756,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2416},{"krate":0,"index":2417}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_until.rs","byte_start":10501408,"byte_end":10501417,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2434},{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\repeat.rs","byte_start":10503251,"byte_end":10503257,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\shutdown.rs","byte_start":10504379,"byte_end":10504387,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\sink.rs","byte_start":10506220,"byte_end":10506224,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\sink.rs","byte_start":10506734,"byte_end":10506738,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2476}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10507703,"byte_end":10507708,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10508447,"byte_end":10508452,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2501}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10509231,"byte_end":10509236,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2504},{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522775,"byte_end":10522787,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10523292,"byte_end":10523304,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3002}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10524843,"byte_end":10524855,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3006},{"krate":0,"index":3007}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510404,"byte_end":10510408,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10512036,"byte_end":10512040,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2532},{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10512697,"byte_end":10512701,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2536},{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write.rs","byte_start":10514258,"byte_end":10514263,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2552},{"krate":0,"index":2553}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_all.rs","byte_start":10515056,"byte_end":10515064,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2568},{"krate":0,"index":2569}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_buf.rs","byte_start":10516572,"byte_end":10516580,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2586},{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":78793,"byte_end":78799,"line_start":206,"line_end":206,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":78843,"byte_end":78849,"line_start":208,"line_end":208,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3208}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":80215,"byte_end":80225,"line_start":259,"line_end":259,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3217},{"krate":0,"index":3218}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":80873,"byte_end":80882,"line_start":277,"line_end":277,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10529777,"byte_end":10529788,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3269},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540492,"byte_end":10540503,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3288},{"krate":0,"index":3289}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540818,"byte_end":10540829,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3291},{"krate":0,"index":3292}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10541269,"byte_end":10541280,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3294},{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10541606,"byte_end":10541617,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10542676,"byte_end":10542684,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3310},{"krate":0,"index":3311}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10543322,"byte_end":10543330,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3313},{"krate":0,"index":3314}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545480,"byte_end":10545488,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3332},{"krate":0,"index":3333}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547943,"byte_end":10547951,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3338},{"krate":0,"index":3339}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10548271,"byte_end":10548280,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3344},{"krate":0,"index":3345}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10549093,"byte_end":10549101,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10549195,"byte_end":10549204,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552267,"byte_end":10552279,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552482,"byte_end":10552494,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552504,"byte_end":10552517,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555351,"byte_end":10555364,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3384},{"krate":0,"index":3385}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555669,"byte_end":10555683,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3387},{"krate":0,"index":3388}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10556235,"byte_end":10556249,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10556409,"byte_end":10556423,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3395},{"krate":0,"index":3396}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10557244,"byte_end":10557257,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3398}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10557353,"byte_end":10557367,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3400}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10559502,"byte_end":10559511,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3439},{"krate":0,"index":3444},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3450},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":3478},{"krate":0,"index":3479}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10584317,"byte_end":10584326,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3487},{"krate":0,"index":3488}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10584762,"byte_end":10584771,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3490},{"krate":0,"index":3491}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10585124,"byte_end":10585133,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3493},{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10585447,"byte_end":10585456,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3499},{"krate":0,"index":3500}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10586200,"byte_end":10586209,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10587438,"byte_end":10587447,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3567},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3576},{"krate":0,"index":3577},{"krate":0,"index":3582},{"krate":0,"index":3586},{"krate":0,"index":3587},{"krate":0,"index":3591},{"krate":0,"index":3592},{"krate":0,"index":3597},{"krate":0,"index":3598},{"krate":0,"index":3602},{"krate":0,"index":3603},{"krate":0,"index":3604},{"krate":0,"index":3605},{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10601003,"byte_end":10601012,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10601448,"byte_end":10601457,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3621},{"krate":0,"index":3622}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10601777,"byte_end":10601786,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3624}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10604095,"byte_end":10604107,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3637}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10604310,"byte_end":10604322,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10604849,"byte_end":10604857,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3646}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606489,"byte_end":10606497,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3656}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607817,"byte_end":10607825,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607916,"byte_end":10607924,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3663}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\either.rs","byte_start":10608137,"byte_end":10608143,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3713},{"krate":0,"index":3714},{"krate":0,"index":3715},{"krate":0,"index":3716}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\either.rs","byte_start":10608949,"byte_end":10608955,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3720}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\either.rs","byte_start":10609169,"byte_end":10609175,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3724}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3757}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3763},{"krate":0,"index":3764},{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3768}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3771}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3773},{"krate":0,"index":3774}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10644916,"byte_end":10644921,"line_start":49,"line_end":49,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3832}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10645309,"byte_end":10645316,"line_start":65,"line_end":65,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10645341,"byte_end":10645348,"line_start":66,"line_end":66,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10645763,"byte_end":10645768,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3841}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10645855,"byte_end":10645860,"line_start":91,"line_end":91,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3843}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10645957,"byte_end":10645962,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3845},{"krate":0,"index":3846}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10647576,"byte_end":10647583,"line_start":143,"line_end":143,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3848}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614713,"byte_end":10614720,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3886},{"krate":0,"index":3888},{"krate":0,"index":3890},{"krate":0,"index":3893},{"krate":0,"index":3896},{"krate":0,"index":3900},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3905},{"krate":0,"index":3907},{"krate":0,"index":3909},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3913},{"krate":0,"index":3918},{"krate":0,"index":3921}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630970,"byte_end":10630977,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3925}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10631307,"byte_end":10631321,"line_start":683,"line_end":683,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3928}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10631527,"byte_end":10631541,"line_start":695,"line_end":695,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3931}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10631678,"byte_end":10631692,"line_start":703,"line_end":703,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3936},{"krate":0,"index":3937}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633541,"byte_end":10633546,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3939},{"krate":0,"index":3940},{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3943},{"krate":0,"index":3944}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636059,"byte_end":10636064,"line_start":832,"line_end":832,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3953},{"krate":0,"index":3954}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10637029,"byte_end":10637039,"line_start":867,"line_end":867,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3956},{"krate":0,"index":3957},{"krate":0,"index":3958}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10637564,"byte_end":10637575,"line_start":885,"line_end":885,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3960},{"krate":0,"index":3961}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10638039,"byte_end":10638050,"line_start":900,"line_end":900,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3963},{"krate":0,"index":3964}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10639193,"byte_end":10639203,"line_start":946,"line_end":946,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3974}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10639344,"byte_end":10639355,"line_start":952,"line_end":952,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3976}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10639496,"byte_end":10639507,"line_start":958,"line_end":958,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3978}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10651251,"byte_end":10651265,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4063},{"krate":0,"index":4064},{"krate":0,"index":4065},{"krate":0,"index":4067}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10654804,"byte_end":10654809,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4085}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10655496,"byte_end":10655510,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4089}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10656397,"byte_end":10656411,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4093}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10656577,"byte_end":10656584,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4095},{"krate":0,"index":4097}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10657042,"byte_end":10657049,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4099}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10657217,"byte_end":10657220,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4101},{"krate":0,"index":4103},{"krate":0,"index":4106}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10658318,"byte_end":10658324,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4109},{"krate":0,"index":4110}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":10666007,"byte_end":10666013,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":10666038,"byte_end":10666044,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":10666403,"byte_end":10666407,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4166}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":10667185,"byte_end":10667189,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4170},{"krate":0,"index":4172},{"krate":0,"index":4174},{"krate":0,"index":4176},{"krate":0,"index":4178},{"krate":0,"index":4180},{"krate":0,"index":4183},{"krate":0,"index":4185},{"krate":0,"index":4187}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":10672940,"byte_end":10672946,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4559}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10673571,"byte_end":10673580,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4208},{"krate":0,"index":4209},{"krate":0,"index":4210},{"krate":0,"index":4211}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676659,"byte_end":10676668,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4213}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676911,"byte_end":10676920,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4215}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10677197,"byte_end":10677206,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10677240,"byte_end":10677245,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4218}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\harness.rs","byte_start":10677923,"byte_end":10677930,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4249}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\harness.rs","byte_start":10678407,"byte_end":10678414,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4253},{"krate":0,"index":4264},{"krate":0,"index":4268},{"krate":0,"index":4271},{"krate":0,"index":4274},{"krate":0,"index":4275},{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4278},{"krate":0,"index":4279},{"krate":0,"index":4281},{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4285}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\harness.rs","byte_start":10680585,"byte_end":10680590,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4263}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10692894,"byte_end":10692904,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10692941,"byte_end":10692951,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10692967,"byte_end":10692977,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4302}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10693153,"byte_end":10693163,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10693190,"byte_end":10693200,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4307},{"krate":0,"index":4308}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10694426,"byte_end":10694436,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4311}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10694702,"byte_end":10694712,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4314}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\raw.rs","byte_start":10695959,"byte_end":10695966,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4340},{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4349}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\raw.rs","byte_start":10697497,"byte_end":10697504,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4351}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\raw.rs","byte_start":10697594,"byte_end":10697601,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":10700283,"byte_end":10700288,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4397},{"krate":0,"index":4399},{"krate":0,"index":4401},{"krate":0,"index":4403},{"krate":0,"index":4404},{"krate":0,"index":4406},{"krate":0,"index":4410},{"krate":0,"index":4412},{"krate":0,"index":4414},{"krate":0,"index":4416},{"krate":0,"index":4419},{"krate":0,"index":4420}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":10709144,"byte_end":10709152,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4423},{"krate":0,"index":4424},{"krate":0,"index":4425},{"krate":0,"index":4426},{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4430},{"krate":0,"index":4431},{"krate":0,"index":4432},{"krate":0,"index":4433},{"krate":0,"index":4434},{"krate":0,"index":4435},{"krate":0,"index":4436},{"krate":0,"index":4437},{"krate":0,"index":4438},{"krate":0,"index":4439},{"krate":0,"index":4440},{"krate":0,"index":4441}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":10711029,"byte_end":10711034,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4443}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":10711193,"byte_end":10711201,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4445}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\waker.rs","byte_start":10713019,"byte_end":10713027,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4471},{"krate":0,"index":4472}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\stack.rs","byte_start":10714775,"byte_end":10714788,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4592},{"krate":0,"index":4593},{"krate":0,"index":4595}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\stack.rs","byte_start":10715946,"byte_end":10715950,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4604},{"krate":0,"index":4605}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\stack.rs","byte_start":10716350,"byte_end":10716354,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4609}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10659337,"byte_end":10659341,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10659372,"byte_end":10659376,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10659513,"byte_end":10659521,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10659562,"byte_end":10659570,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10661494,"byte_end":10661498,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4523},{"krate":0,"index":4524}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10661795,"byte_end":10661803,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4617},{"krate":0,"index":4618}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10662054,"byte_end":10662058,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4621}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10662251,"byte_end":10662259,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4624}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10662390,"byte_end":10662394,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4527}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10662563,"byte_end":10662571,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4530},{"krate":0,"index":4531}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10662857,"byte_end":10662861,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4534}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10663101,"byte_end":10663105,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4537}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10663257,"byte_end":10663265,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4540}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10663481,"byte_end":10663485,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4543},{"krate":0,"index":4544},{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4547}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\pool.rs","byte_start":10718662,"byte_end":10718674,"line_start":85,"line_end":85,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4671},{"krate":0,"index":4672},{"krate":0,"index":4673}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\pool.rs","byte_start":10720310,"byte_end":10720322,"line_start":136,"line_end":136,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4675}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\pool.rs","byte_start":10720408,"byte_end":10720420,"line_start":142,"line_end":142,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4677}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\pool.rs","byte_start":10720581,"byte_end":10720588,"line_start":150,"line_end":150,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4679},{"krate":0,"index":4680}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\pool.rs","byte_start":10722752,"byte_end":10722757,"line_start":218,"line_end":218,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4684}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\pool.rs","byte_start":10725426,"byte_end":10725433,"line_start":303,"line_end":303,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4686}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\schedule.rs","byte_start":10725936,"byte_end":10725948,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4699},{"krate":0,"index":4700},{"krate":0,"index":4701}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\shutdown.rs","byte_start":10726821,"byte_end":10726829,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4708}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\task.rs","byte_start":10728449,"byte_end":10728461,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4721}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\task.rs","byte_start":10728687,"byte_end":10728699,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\task.rs","byte_start":10728729,"byte_end":10728741,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4727},{"krate":0,"index":4728}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4761}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4763}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4765},{"krate":0,"index":4766}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":140925,"byte_end":140932,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4771},{"krate":0,"index":4772}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":145431,"byte_end":145436,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4801}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4806}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":148422,"byte_end":148427,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4817}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4841},{"krate":0,"index":4843}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":159716,"byte_end":159722,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4847}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\park.rs","byte_start":10730712,"byte_end":10730718,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4881}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\park.rs","byte_start":10731187,"byte_end":10731193,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4883}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\park.rs","byte_start":10731509,"byte_end":10731515,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4885},{"krate":0,"index":4886},{"krate":0,"index":4887},{"krate":0,"index":4888},{"krate":0,"index":4889}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\park.rs","byte_start":10732167,"byte_end":10732175,"line_start":109,"line_end":109,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4892}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\park.rs","byte_start":10732244,"byte_end":10732249,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4894},{"krate":0,"index":4895},{"krate":0,"index":4896},{"krate":0,"index":4897},{"krate":0,"index":4898},{"krate":0,"index":4899}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4929}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10739297,"byte_end":10739302,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10739333,"byte_end":10739338,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10739369,"byte_end":10739375,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10739406,"byte_end":10739412,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10740271,"byte_end":10740276,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4985},{"krate":0,"index":4986},{"krate":0,"index":4988},{"krate":0,"index":4994}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10746810,"byte_end":10746815,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":5001}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10751983,"byte_end":10751988,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5006}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10752084,"byte_end":10752089,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5009}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10752248,"byte_end":10752253,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5012}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10752441,"byte_end":10752447,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5015},{"krate":0,"index":5016},{"krate":0,"index":5017},{"krate":0,"index":5018},{"krate":0,"index":5019},{"krate":0,"index":5020},{"krate":0,"index":5021},{"krate":0,"index":5022}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10755952,"byte_end":10755958,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5025}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10760112,"byte_end":10760122,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10760159,"byte_end":10760169,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10760185,"byte_end":10760195,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5046},{"krate":0,"index":5047},{"krate":0,"index":5048},{"krate":0,"index":5049}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10760982,"byte_end":10760992,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5056}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\idle.rs","byte_start":10761798,"byte_end":10761802,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5073},{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":5076},{"krate":0,"index":5077},{"krate":0,"index":5078},{"krate":0,"index":5079},{"krate":0,"index":5080}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\idle.rs","byte_start":10765675,"byte_end":10765680,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5082},{"krate":0,"index":5083},{"krate":0,"index":5084},{"krate":0,"index":5085},{"krate":0,"index":5086},{"krate":0,"index":5087},{"krate":0,"index":5088},{"krate":0,"index":5089}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\idle.rs","byte_start":10767158,"byte_end":10767163,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5091}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\idle.rs","byte_start":10767336,"byte_end":10767341,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5095}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10773105,"byte_end":10773110,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5250}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10776875,"byte_end":10776881,"line_start":282,"line_end":282,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5154}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10777656,"byte_end":10777663,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5159},{"krate":0,"index":5160},{"krate":0,"index":5162},{"krate":0,"index":5163},{"krate":0,"index":5164}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10781929,"byte_end":10781933,"line_start":444,"line_end":444,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5166},{"krate":0,"index":5167},{"krate":0,"index":5170},{"krate":0,"index":5172},{"krate":0,"index":5173},{"krate":0,"index":5174},{"krate":0,"index":5175},{"krate":0,"index":5176},{"krate":0,"index":5177},{"krate":0,"index":5178},{"krate":0,"index":5179}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10786719,"byte_end":10786725,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5182},{"krate":0,"index":5183},{"krate":0,"index":5184}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10787165,"byte_end":10787168,"line_start":616,"line_end":616,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5186},{"krate":0,"index":5188},{"krate":0,"index":5191},{"krate":0,"index":5192}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10789739,"byte_end":10789745,"line_start":694,"line_end":694,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5194},{"krate":0,"index":5196},{"krate":0,"index":5197},{"krate":0,"index":5198},{"krate":0,"index":5199},{"krate":0,"index":5200},{"krate":0,"index":5201},{"krate":0,"index":5202},{"krate":0,"index":5203}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\mod.rs","byte_start":10758010,"byte_end":10758020,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5219}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\mod.rs","byte_start":10759175,"byte_end":10759185,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5222}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\mod.rs","byte_start":10759324,"byte_end":10759334,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5224}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\mod.rs","byte_start":10759441,"byte_end":10759448,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5226}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\mod.rs","byte_start":10759793,"byte_end":10759800,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5229}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":172543,"byte_end":172549,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5291}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5306}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5308}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5313},{"krate":0,"index":5314}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":10797592,"byte_end":10797595,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5343},{"krate":0,"index":5344}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":10798317,"byte_end":10798325,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5351}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":10798415,"byte_end":10798423,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5354},{"krate":0,"index":5356},{"krate":0,"index":5357}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":10800576,"byte_end":10800583,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5364},{"krate":0,"index":5365}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":10800691,"byte_end":10800698,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5367},{"krate":0,"index":5368},{"krate":0,"index":5369}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10823469,"byte_end":10823478,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5395}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10823644,"byte_end":10823653,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5397},{"krate":0,"index":5398}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10824126,"byte_end":10824137,"line_start":57,"line_end":57,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5402}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10825090,"byte_end":10825095,"line_start":86,"line_end":86,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5405},{"krate":0,"index":5406}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827014,"byte_end":10827023,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5417},{"krate":0,"index":5422}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828827,"byte_end":10828836,"line_start":212,"line_end":212,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5455},{"krate":0,"index":5456}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":10857100,"byte_end":10857109,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5469}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":10857255,"byte_end":10857264,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":10857303,"byte_end":10857312,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5476},{"krate":0,"index":5477}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":10858263,"byte_end":10858272,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5490}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":10858418,"byte_end":10858427,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":10858466,"byte_end":10858475,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5497},{"krate":0,"index":5498}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\chain.rs","byte_start":10859398,"byte_end":10859403,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5512}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\chain.rs","byte_start":10859583,"byte_end":10859588,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5516},{"krate":0,"index":5517},{"krate":0,"index":5519}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10861166,"byte_end":10861173,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5540}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10861457,"byte_end":10861464,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5544},{"krate":0,"index":5545}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10862440,"byte_end":10862446,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10862501,"byte_end":10862507,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5557},{"krate":0,"index":5558},{"krate":0,"index":5559},{"krate":0,"index":5560}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10862896,"byte_end":10862899,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10862945,"byte_end":10862948,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5565},{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":5568}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10863331,"byte_end":10863334,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10863382,"byte_end":10863385,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5573},{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10863900,"byte_end":10863906,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10863995,"byte_end":10864001,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5585},{"krate":0,"index":5586},{"krate":0,"index":5587},{"krate":0,"index":5588}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10865079,"byte_end":10865084,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10865132,"byte_end":10865137,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5593},{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5596}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10865537,"byte_end":10865545,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10865593,"byte_end":10865601,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5601},{"krate":0,"index":5602},{"krate":0,"index":5603},{"krate":0,"index":5604}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10866872,"byte_end":10866877,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10866908,"byte_end":10866913,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10866944,"byte_end":10866949,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867492,"byte_end":10867497,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5633}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":10868111,"byte_end":10868117,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5648}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":10868335,"byte_end":10868341,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5652}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":10868460,"byte_end":10868466,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5656},{"krate":0,"index":5657},{"krate":0,"index":5658}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":10869552,"byte_end":10869561,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5671}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":10869782,"byte_end":10869791,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5675}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":10869913,"byte_end":10869922,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5680},{"krate":0,"index":5681},{"krate":0,"index":5682}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fold.rs","byte_start":10870994,"byte_end":10871004,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5696}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fold.rs","byte_start":10871200,"byte_end":10871210,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5701},{"krate":0,"index":5702}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fuse.rs","byte_start":10872109,"byte_end":10872113,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5713}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fuse.rs","byte_start":10872273,"byte_end":10872277,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5716},{"krate":0,"index":5717},{"krate":0,"index":5718}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873220,"byte_end":10873224,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873886,"byte_end":10873890,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5732},{"krate":0,"index":5733},{"krate":0,"index":5734}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":10874636,"byte_end":10874639,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5749}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":10874828,"byte_end":10874831,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5753}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":10874952,"byte_end":10874955,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5762}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\merge.rs","byte_start":10875800,"byte_end":10875805,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5776}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\merge.rs","byte_start":10876059,"byte_end":10876064,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5780},{"krate":0,"index":5781},{"krate":0,"index":5782}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":10877576,"byte_end":10877580,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":10877614,"byte_end":10877618,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5800}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":10877759,"byte_end":10877763,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5803},{"krate":0,"index":5804}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878259,"byte_end":10878263,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878890,"byte_end":10878894,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5822},{"krate":0,"index":5823},{"krate":0,"index":5824}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879441,"byte_end":10879448,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879479,"byte_end":10879486,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879517,"byte_end":10879524,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10880217,"byte_end":10880224,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5845},{"krate":0,"index":5846},{"krate":0,"index":5847}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885889,"byte_end":10885898,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5862},{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5867},{"krate":0,"index":5870},{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5875},{"krate":0,"index":5876},{"krate":0,"index":5877},{"krate":0,"index":5878},{"krate":0,"index":5880}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892899,"byte_end":10892908,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5885}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10894447,"byte_end":10894456,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5890},{"krate":0,"index":5891},{"krate":0,"index":5892}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":10895672,"byte_end":10895676,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5904}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":10895886,"byte_end":10895890,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5907}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":10896023,"byte_end":10896027,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5910},{"krate":0,"index":5911},{"krate":0,"index":5912}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":10897253,"byte_end":10897262,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5926}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":10897483,"byte_end":10897492,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5930}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":10897677,"byte_end":10897686,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5934},{"krate":0,"index":5935},{"krate":0,"index":5936}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":10899035,"byte_end":10899042,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":10899076,"byte_end":10899083,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5952}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":10899290,"byte_end":10899297,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":5957},{"krate":0,"index":5958}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":10899907,"byte_end":10899911,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5971}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":10900121,"byte_end":10900125,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5974}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":10900258,"byte_end":10900262,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5977},{"krate":0,"index":5978},{"krate":0,"index":5980}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":10901781,"byte_end":10901790,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5993}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":10902050,"byte_end":10902059,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5997}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":10902252,"byte_end":10902261,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6001},{"krate":0,"index":6002},{"krate":0,"index":6005}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\timeout.rs","byte_start":10933486,"byte_end":10933493,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6138}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\timeout.rs","byte_start":10933848,"byte_end":10933855,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6141},{"krate":0,"index":6142},{"krate":0,"index":6143}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10856330,"byte_end":10856332,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10952323,"byte_end":10952330,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6151},{"krate":0,"index":6152}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10955610,"byte_end":10955627,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6156}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966194,"byte_end":10966200,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6228}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966327,"byte_end":10966333,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6232}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966494,"byte_end":10966498,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966568,"byte_end":10966572,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969346,"byte_end":10969352,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969389,"byte_end":10969395,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969433,"byte_end":10969441,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969478,"byte_end":10969486,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969502,"byte_end":10969508,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6252},{"krate":0,"index":6254},{"krate":0,"index":6255},{"krate":0,"index":6256}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10975144,"byte_end":10975148,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6260}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10975540,"byte_end":10975546,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6263}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10975726,"byte_end":10975732,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6266}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10975886,"byte_end":10975894,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6269}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10980759,"byte_end":10980767,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6273},{"krate":0,"index":6274},{"krate":0,"index":6288}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10983520,"byte_end":10983525,"line_start":856,"line_end":856,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6286}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986939,"byte_end":10986947,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6293},{"krate":0,"index":6294}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10987397,"byte_end":10987405,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6298}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10988589,"byte_end":10988593,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6304},{"krate":0,"index":6305}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10989435,"byte_end":10989439,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6309},{"krate":0,"index":6310}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10990169,"byte_end":10990177,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7533}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10991489,"byte_end":10991493,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7538},{"krate":0,"index":7539}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10992217,"byte_end":10992221,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6314}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10993019,"byte_end":10993025,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6318},{"krate":0,"index":6319},{"krate":0,"index":6320},{"krate":0,"index":6321},{"krate":0,"index":6322}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10993440,"byte_end":10993446,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6325}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10993590,"byte_end":10993598,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6328}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10993733,"byte_end":10993742,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6332}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10993915,"byte_end":10993924,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6337}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10994215,"byte_end":10994224,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6340}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10994497,"byte_end":10994506,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10994533,"byte_end":10994545,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6343}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10994887,"byte_end":10994899,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\block.rs","byte_start":11001208,"byte_end":11001213,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6394},{"krate":0,"index":6395},{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6399},{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":6403},{"krate":0,"index":6405},{"krate":0,"index":6406},{"krate":0,"index":6407},{"krate":0,"index":6409},{"krate":0,"index":6410},{"krate":0,"index":6411}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\block.rs","byte_start":11011195,"byte_end":11011201,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6416}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\block.rs","byte_start":11011683,"byte_end":11011689,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6419},{"krate":0,"index":6420}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012327,"byte_end":11012333,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6438}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012465,"byte_end":11012471,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6441}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012878,"byte_end":11012886,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6447}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014658,"byte_end":11014666,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6453},{"krate":0,"index":6454},{"krate":0,"index":6459},{"krate":0,"index":6460},{"krate":0,"index":6461}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017094,"byte_end":11017102,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017162,"byte_end":11017170,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7546},{"krate":0,"index":7547}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017358,"byte_end":11017364,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6466},{"krate":0,"index":6467},{"krate":0,"index":6472},{"krate":0,"index":6473},{"krate":0,"index":6478},{"krate":0,"index":6480}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11028754,"byte_end":11028756,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6515}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11029157,"byte_end":11029159,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6523}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11029466,"byte_end":11029475,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6526}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11029737,"byte_end":11029749,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6529}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11031444,"byte_end":11031448,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6551}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11032081,"byte_end":11032089,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6558}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11032355,"byte_end":11032359,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11032408,"byte_end":11032412,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11032891,"byte_end":11032893,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6571},{"krate":0,"index":6572},{"krate":0,"index":6573},{"krate":0,"index":6574}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11033591,"byte_end":11033593,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6577}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11033741,"byte_end":11033743,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6580}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11033921,"byte_end":11033923,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6584}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11034323,"byte_end":11034325,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6588}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11034734,"byte_end":11034736,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6592},{"krate":0,"index":6593},{"krate":0,"index":6595},{"krate":0,"index":6599}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11037856,"byte_end":11037858,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6605}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11038294,"byte_end":11038298,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6611}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11038762,"byte_end":11038766,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6615}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11039315,"byte_end":11039327,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6620}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11040927,"byte_end":11040938,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6639},{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":6644},{"krate":0,"index":6646},{"krate":0,"index":6647},{"krate":0,"index":6648}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":11043655,"byte_end":11043657,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6678},{"krate":0,"index":6679},{"krate":0,"index":6680},{"krate":0,"index":6682}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":11049361,"byte_end":11049363,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6685}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":11049640,"byte_end":11049642,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6688},{"krate":0,"index":6689},{"krate":0,"index":6690},{"krate":0,"index":6691}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":11053041,"byte_end":11053043,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6694}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11053717,"byte_end":11053732,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6710}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11053873,"byte_end":11053888,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6713}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054346,"byte_end":11054363,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6719}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055341,"byte_end":11055358,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6725},{"krate":0,"index":6726},{"krate":0,"index":6727},{"krate":0,"index":6732},{"krate":0,"index":6733}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057830,"byte_end":11057847,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6736},{"krate":0,"index":6737}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058013,"byte_end":11058028,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6740},{"krate":0,"index":6741}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059138,"byte_end":11059147,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6751}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059307,"byte_end":11059316,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059802,"byte_end":11059814,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059847,"byte_end":11059859,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6758}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060199,"byte_end":11060211,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6761}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060440,"byte_end":11060449,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6763}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060579,"byte_end":11060588,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061074,"byte_end":11061086,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6766}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061392,"byte_end":11061404,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061561,"byte_end":11061572,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6769}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061671,"byte_end":11061682,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6771}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061812,"byte_end":11061823,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11062327,"byte_end":11062343,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11062380,"byte_end":11062396,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7603}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068712,"byte_end":11068717,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068771,"byte_end":11068776,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068830,"byte_end":11068840,"line_start":160,"line_end":160,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068905,"byte_end":11068920,"line_start":161,"line_end":161,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11069207,"byte_end":11069219,"line_start":171,"line_end":171,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6799}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11069356,"byte_end":11069368,"line_start":177,"line_end":177,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070176,"byte_end":11070181,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6803},{"krate":0,"index":6804},{"krate":0,"index":6807},{"krate":0,"index":6810},{"krate":0,"index":6814},{"krate":0,"index":6815},{"krate":0,"index":6816}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074754,"byte_end":11074759,"line_start":361,"line_end":361,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6819}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074843,"byte_end":11074848,"line_start":367,"line_end":367,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6822}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074997,"byte_end":11075007,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6825}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11075108,"byte_end":11075118,"line_start":384,"line_end":384,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6828},{"krate":0,"index":6829}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11075265,"byte_end":11075275,"line_start":391,"line_end":391,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6832}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11075432,"byte_end":11075442,"line_start":397,"line_end":397,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6835}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11075608,"byte_end":11075618,"line_start":403,"line_end":403,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6838}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11075796,"byte_end":11075811,"line_start":411,"line_end":411,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6841}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11075908,"byte_end":11075923,"line_start":417,"line_end":417,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6844},{"krate":0,"index":6845}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11076066,"byte_end":11076081,"line_start":424,"line_end":424,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6848}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11076234,"byte_end":11076249,"line_start":430,"line_end":430,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6851}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11076411,"byte_end":11076426,"line_start":436,"line_end":436,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":6854}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080390,"byte_end":11080398,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080431,"byte_end":11080439,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080702,"byte_end":11080708,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6884},{"krate":0,"index":6885},{"krate":0,"index":6888}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11084716,"byte_end":11084722,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6890}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11086460,"byte_end":11086468,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6893}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11086978,"byte_end":11086986,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6895},{"krate":0,"index":6896}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11091816,"byte_end":11091824,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6899}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11094782,"byte_end":11094788,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6902},{"krate":0,"index":6903},{"krate":0,"index":6904},{"krate":0,"index":6905},{"krate":0,"index":6906}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096664,"byte_end":11096673,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6932}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096835,"byte_end":11096844,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096913,"byte_end":11096925,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6935}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11097224,"byte_end":11097236,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099047,"byte_end":11099053,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6948},{"krate":0,"index":6951},{"krate":0,"index":6953},{"krate":0,"index":6958}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105354,"byte_end":11105360,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6961}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105499,"byte_end":11105507,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6964},{"krate":0,"index":6965}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11109898,"byte_end":11109906,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6968}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11110053,"byte_end":11110061,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6971},{"krate":0,"index":6972}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11110524,"byte_end":11110529,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6975},{"krate":0,"index":6976},{"krate":0,"index":6978},{"krate":0,"index":6979},{"krate":0,"index":6981},{"krate":0,"index":6985},{"krate":0,"index":6989},{"krate":0,"index":6991},{"krate":0,"index":6993},{"krate":0,"index":6995}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11114901,"byte_end":11114906,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11114943,"byte_end":11114948,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11114973,"byte_end":11114978,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7003}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11115347,"byte_end":11115352,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7007}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11115747,"byte_end":11115752,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7014},{"krate":0,"index":7015},{"krate":0,"index":7016},{"krate":0,"index":7017},{"krate":0,"index":7018},{"krate":0,"index":7019},{"krate":0,"index":7020},{"krate":0,"index":7021},{"krate":0,"index":7022},{"krate":0,"index":7023},{"krate":0,"index":7024},{"krate":0,"index":7025},{"krate":0,"index":7026}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11117465,"byte_end":11117470,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7028}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11120948,"byte_end":11120957,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7069},{"krate":0,"index":7070},{"krate":0,"index":7071},{"krate":0,"index":7072},{"krate":0,"index":7073},{"krate":0,"index":7074},{"krate":0,"index":7075},{"krate":0,"index":7077},{"krate":0,"index":7078},{"krate":0,"index":7079},{"krate":0,"index":7083}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11130878,"byte_end":11130887,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7087}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11131088,"byte_end":11131094,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7089},{"krate":0,"index":7090}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11131960,"byte_end":11131967,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7092},{"krate":0,"index":7093}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11132645,"byte_end":11132652,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7096},{"krate":0,"index":7097}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11133451,"byte_end":11133458,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7101}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11135100,"byte_end":11135107,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11135154,"byte_end":11135166,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7104}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11135259,"byte_end":11135271,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7106}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11135415,"byte_end":11135427,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11135474,"byte_end":11135489,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7109},{"krate":0,"index":7110}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11136111,"byte_end":11136126,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7112}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11136412,"byte_end":11136427,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11136520,"byte_end":11136526,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7115},{"krate":0,"index":7116},{"krate":0,"index":7117},{"krate":0,"index":7118},{"krate":0,"index":7119}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11141795,"byte_end":11141804,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7161},{"krate":0,"index":7162},{"krate":0,"index":7163},{"krate":0,"index":7166},{"krate":0,"index":7168},{"krate":0,"index":7172},{"krate":0,"index":7173},{"krate":0,"index":7174},{"krate":0,"index":7175},{"krate":0,"index":7180},{"krate":0,"index":7181},{"krate":0,"index":7182},{"krate":0,"index":7183}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11157998,"byte_end":11158007,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7185}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11158086,"byte_end":11158095,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7187}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11158473,"byte_end":11158482,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11158507,"byte_end":11158516,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11158554,"byte_end":11158560,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7192},{"krate":0,"index":7194},{"krate":0,"index":7195},{"krate":0,"index":7199},{"krate":0,"index":7201},{"krate":0,"index":7202}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11164966,"byte_end":11164972,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7205}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11165045,"byte_end":11165051,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7207}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11165473,"byte_end":11165485,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7209}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11165665,"byte_end":11165677,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7212}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11165821,"byte_end":11165833,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11165880,"byte_end":11165895,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7215},{"krate":0,"index":7216}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11166425,"byte_end":11166440,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7218}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11166726,"byte_end":11166741,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11166779,"byte_end":11166785,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7221},{"krate":0,"index":7222},{"krate":0,"index":7223},{"krate":0,"index":7224},{"krate":0,"index":7225},{"krate":0,"index":7226},{"krate":0,"index":7227},{"krate":0,"index":7228},{"krate":0,"index":7229}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11172198,"byte_end":11172206,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7231},{"krate":0,"index":7232},{"krate":0,"index":7233},{"krate":0,"index":7234},{"krate":0,"index":7235},{"krate":0,"index":7236},{"krate":0,"index":7237},{"krate":0,"index":7238},{"krate":0,"index":7239},{"krate":0,"index":7240},{"krate":0,"index":7241},{"krate":0,"index":7242},{"krate":0,"index":7243},{"krate":0,"index":7244},{"krate":0,"index":7245},{"krate":0,"index":7246}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11175869,"byte_end":11175877,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7248}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11176230,"byte_end":11176241,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7250},{"krate":0,"index":7251},{"krate":0,"index":7252},{"krate":0,"index":7253},{"krate":0,"index":7254},{"krate":0,"index":7255},{"krate":0,"index":7256},{"krate":0,"index":7257}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178970,"byte_end":11178979,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7262},{"krate":0,"index":7263},{"krate":0,"index":7264},{"krate":0,"index":7265},{"krate":0,"index":7268},{"krate":0,"index":7269},{"krate":0,"index":7272}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181074,"byte_end":11181089,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7275}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181334,"byte_end":11181354,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7277}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181608,"byte_end":11181623,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7280}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181731,"byte_end":11181751,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7282}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11185572,"byte_end":11185587,"line_start":113,"line_end":113,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7297}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11185854,"byte_end":11185869,"line_start":123,"line_end":123,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7302}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11186873,"byte_end":11186879,"line_start":156,"line_end":156,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11186933,"byte_end":11186939,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187000,"byte_end":11187015,"line_start":158,"line_end":158,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187080,"byte_end":11187096,"line_start":159,"line_end":159,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187154,"byte_end":11187160,"line_start":161,"line_end":161,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7313},{"krate":0,"index":7314},{"krate":0,"index":7318},{"krate":0,"index":7322}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11190277,"byte_end":11190292,"line_start":264,"line_end":264,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7325},{"krate":0,"index":7326}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11190431,"byte_end":11190447,"line_start":272,"line_end":272,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7329},{"krate":0,"index":7330}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11190589,"byte_end":11190605,"line_start":280,"line_end":280,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7333}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11190727,"byte_end":11190733,"line_start":286,"line_end":286,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7336}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11190817,"byte_end":11190823,"line_start":292,"line_end":292,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7339}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":11197098,"byte_end":11197109,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7363},{"krate":0,"index":7364},{"krate":0,"index":7365},{"krate":0,"index":7366},{"krate":0,"index":7370},{"krate":0,"index":7371}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":11203036,"byte_end":11203047,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7374}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":11203133,"byte_end":11203144,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7376}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":11203277,"byte_end":11203288,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":11203313,"byte_end":11203324,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":11203420,"byte_end":11203425,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7383},{"krate":0,"index":7384}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206966,"byte_end":11206975,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7415}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11207155,"byte_end":11207164,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209323,"byte_end":11209331,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7426},{"krate":0,"index":7427}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11210603,"byte_end":11210611,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7431}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211977,"byte_end":11211985,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7438},{"krate":0,"index":7439}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11212244,"byte_end":11212252,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7443}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11212555,"byte_end":11212563,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7446}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11212677,"byte_end":11212683,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7449},{"krate":0,"index":7450},{"krate":0,"index":7454}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11214218,"byte_end":11214224,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7459}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11214463,"byte_end":11214466,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7462},{"krate":0,"index":7463}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11214607,"byte_end":11214613,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7466}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11214715,"byte_end":11214722,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7468}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11214945,"byte_end":11214952,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7470}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11215069,"byte_end":11215076,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11215106,"byte_end":11215113,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7473}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11215260,"byte_end":11215267,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7476},{"krate":0,"index":7477}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\yield_now.rs","byte_start":11234078,"byte_end":11234086,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7898},{"krate":0,"index":7899}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11241218,"byte_end":11241226,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7933},{"krate":0,"index":7934},{"krate":0,"index":7936},{"krate":0,"index":7938},{"krate":0,"index":7942},{"krate":0,"index":7944},{"krate":0,"index":7947}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11249068,"byte_end":11249076,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7951}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11249215,"byte_end":11249223,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7953},{"krate":0,"index":7954}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11250188,"byte_end":11250196,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7957}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11250277,"byte_end":11250285,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7959}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11251152,"byte_end":11251160,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7963},{"krate":0,"index":7964}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11252045,"byte_end":11252051,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7968},{"krate":0,"index":7970}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11252614,"byte_end":11252617,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7972},{"krate":0,"index":7974},{"krate":0,"index":7977}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256032,"byte_end":11256040,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8000},{"krate":0,"index":8004},{"krate":0,"index":8007}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11257816,"byte_end":11257824,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8013}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11258032,"byte_end":11258040,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8017}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11258361,"byte_end":11258376,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8021},{"krate":0,"index":8022}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11258677,"byte_end":11258682,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8031}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11259300,"byte_end":11259301,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11259486,"byte_end":11259497,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8038}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11259641,"byte_end":11259652,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8040}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11259799,"byte_end":11259810,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\clock.rs","byte_start":11264395,"byte_end":11264400,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8543},{"krate":0,"index":8544},{"krate":0,"index":8545},{"krate":0,"index":8546}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11274922,"byte_end":11274932,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":8091},{"krate":0,"index":8092},{"krate":0,"index":8093},{"krate":0,"index":8094},{"krate":0,"index":8097},{"krate":0,"index":8098},{"krate":0,"index":8102},{"krate":0,"index":8104},{"krate":0,"index":8105},{"krate":0,"index":8107},{"krate":0,"index":8108},{"krate":0,"index":8109},{"krate":0,"index":8110},{"krate":0,"index":8111},{"krate":0,"index":8112},{"krate":0,"index":8113},{"krate":0,"index":8115}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11292575,"byte_end":11292585,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11292613,"byte_end":11292623,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8120}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11292760,"byte_end":11292770,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8123},{"krate":0,"index":8124}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11293152,"byte_end":11293157,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8127},{"krate":0,"index":8128},{"krate":0,"index":8129},{"krate":0,"index":8130},{"krate":0,"index":8131},{"krate":0,"index":8132},{"krate":0,"index":8133},{"krate":0,"index":8134}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295284,"byte_end":11295289,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8137}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295419,"byte_end":11295422,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":8139}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295509,"byte_end":11295516,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8142},{"krate":0,"index":8143},{"krate":0,"index":8144},{"krate":0,"index":8145}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298054,"byte_end":11298059,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8160},{"krate":0,"index":8161},{"krate":0,"index":8162},{"krate":0,"index":8163}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11299037,"byte_end":11299042,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8165},{"krate":0,"index":8166}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\atomic_stack.rs","byte_start":11312366,"byte_end":11312377,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8181},{"krate":0,"index":8182},{"krate":0,"index":8183},{"krate":0,"index":8184}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\atomic_stack.rs","byte_start":11314355,"byte_end":11314373,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8186},{"krate":0,"index":8187}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\atomic_stack.rs","byte_start":11314945,"byte_end":11314963,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8189}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":11318936,"byte_end":11318941,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8215},{"krate":0,"index":8216},{"krate":0,"index":8217},{"krate":0,"index":8218},{"krate":0,"index":8219},{"krate":0,"index":8220},{"krate":0,"index":8221},{"krate":0,"index":8222},{"krate":0,"index":8223},{"krate":0,"index":8224},{"krate":0,"index":8225},{"krate":0,"index":8226},{"krate":0,"index":8227},{"krate":0,"index":8228}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":11325169,"byte_end":11325174,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8231}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":11325382,"byte_end":11325387,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":11325412,"byte_end":11325417,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\handle.rs","byte_start":11325794,"byte_end":11325800,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8243},{"krate":0,"index":8244},{"krate":0,"index":8245}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\handle.rs","byte_start":11326445,"byte_end":11326451,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8247}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\registration.rs","byte_start":11326896,"byte_end":11326908,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8262},{"krate":0,"index":8263},{"krate":0,"index":8264},{"krate":0,"index":8265},{"krate":0,"index":8266}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\registration.rs","byte_start":11327818,"byte_end":11327830,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8269}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\stack.rs","byte_start":11328114,"byte_end":11328119,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8277}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\stack.rs","byte_start":11328210,"byte_end":11328215,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8279},{"krate":0,"index":8280},{"krate":0,"index":8281},{"krate":0,"index":8282},{"krate":0,"index":8283},{"krate":0,"index":8284},{"krate":0,"index":8285},{"krate":0,"index":8286}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":11303932,"byte_end":11303938,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8320},{"krate":0,"index":8321},{"krate":0,"index":8322},{"krate":0,"index":8323},{"krate":0,"index":8324},{"krate":0,"index":8325},{"krate":0,"index":8326}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":11307587,"byte_end":11307593,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8330},{"krate":0,"index":8331},{"krate":0,"index":8332},{"krate":0,"index":8333},{"krate":0,"index":8334}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":11309582,"byte_end":11309588,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8337}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":11310065,"byte_end":11310070,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8340},{"krate":0,"index":8341},{"krate":0,"index":8342},{"krate":0,"index":8343},{"krate":0,"index":8344},{"krate":0,"index":8345}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":11311687,"byte_end":11311692,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8347}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332487,"byte_end":11332492,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8353},{"krate":0,"index":8354},{"krate":0,"index":8355},{"krate":0,"index":8356}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11333207,"byte_end":11333212,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11333239,"byte_end":11333244,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8359}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11333950,"byte_end":11333957,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8367},{"krate":0,"index":8368},{"krate":0,"index":8369},{"krate":0,"index":8370},{"krate":0,"index":8371},{"krate":0,"index":8372},{"krate":0,"index":8373},{"krate":0,"index":8374},{"krate":0,"index":8375}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11337731,"byte_end":11337738,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8377}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11337867,"byte_end":11337874,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8379}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11337989,"byte_end":11337996,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8381},{"krate":0,"index":8382}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11338161,"byte_end":11338168,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8384}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11338273,"byte_end":11338280,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8386},{"krate":0,"index":8387}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11338421,"byte_end":11338428,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8389},{"krate":0,"index":8390}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11338589,"byte_end":11338596,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8392}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11338703,"byte_end":11338710,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8394}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11342446,"byte_end":11342454,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8414},{"krate":0,"index":8415}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343749,"byte_end":11343757,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8420},{"krate":0,"index":8421}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11347089,"byte_end":11347096,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8444}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11347225,"byte_end":11347232,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8447},{"krate":0,"index":8448},{"krate":0,"index":8449},{"krate":0,"index":8450}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11347770,"byte_end":11347777,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8453},{"krate":0,"index":8454}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11348355,"byte_end":11348362,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8456}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11348506,"byte_end":11348513,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11348550,"byte_end":11348555,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8459}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11366695,"byte_end":11366703,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8717},{"krate":0,"index":8718},{"krate":0,"index":8719}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11367518,"byte_end":11367526,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8722},{"krate":0,"index":8723}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\level.rs","byte_start":11358459,"byte_end":11358464,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8478},{"krate":0,"index":8480},{"krate":0,"index":8481},{"krate":0,"index":8482},{"krate":0,"index":8483},{"krate":0,"index":8484}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\level.rs","byte_start":11363216,"byte_end":11363221,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8487}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\mod.rs","byte_start":11350280,"byte_end":11350285,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8512},{"krate":0,"index":8513},{"krate":0,"index":8514},{"krate":0,"index":8515},{"krate":0,"index":8516},{"krate":0,"index":8518},{"krate":0,"index":8520},{"krate":0,"index":8521},{"krate":0,"index":8522},{"krate":0,"index":8523},{"krate":0,"index":8524},{"krate":0,"index":8525}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\mod.rs","byte_start":11355993,"byte_end":11355997,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":8528}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\bit.rs","byte_start":11368359,"byte_end":11368363,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":8758},{"krate":0,"index":8759},{"krate":0,"index":8760},{"krate":0,"index":8761},{"krate":0,"index":8762},{"krate":0,"index":8763},{"krate":0,"index":8764}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\bit.rs","byte_start":11369837,"byte_end":11369841,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8766}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\addr.rs","byte_start":11377060,"byte_end":11377067,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8785},{"krate":0,"index":8786},{"krate":0,"index":8787},{"krate":0,"index":8788},{"krate":0,"index":8789},{"krate":0,"index":8790},{"krate":0,"index":8791},{"krate":0,"index":8792}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\generation.rs","byte_start":11380096,"byte_end":11380106,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8804},{"krate":0,"index":8805},{"krate":0,"index":8806},{"krate":0,"index":8807},{"krate":0,"index":8808}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":11381245,"byte_end":11381250,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8829},{"krate":0,"index":8830},{"krate":0,"index":8832}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":11381592,"byte_end":11381598,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8836},{"krate":0,"index":8837},{"krate":0,"index":8839},{"krate":0,"index":8842},{"krate":0,"index":8845},{"krate":0,"index":8848}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":11385550,"byte_end":11385555,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8853}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":11385861,"byte_end":11385867,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8857}],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\shard.rs","byte_start":11388010,"byte_end":11388015,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8871},{"krate":0,"index":8874},{"krate":0,"index":8875},{"krate":0,"index":8876},{"krate":0,"index":8877},{"krate":0,"index":8878}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\shard.rs","byte_start":11389694,"byte_end":11389699,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8881}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\slot.rs","byte_start":11390076,"byte_end":11390080,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8894},{"krate":0,"index":8895},{"krate":0,"index":8896},{"krate":0,"index":8897},{"krate":0,"index":8898},{"krate":0,"index":8900}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\stack.rs","byte_start":11391051,"byte_end":11391064,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":8912},{"krate":0,"index":8913},{"krate":0,"index":8914}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\stack.rs","byte_start":11391892,"byte_end":11391905,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8917}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":11371439,"byte_end":11371443,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":11371480,"byte_end":11371484,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":11371507,"byte_end":11371511,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8934},{"krate":0,"index":8935},{"krate":0,"index":8936},{"krate":0,"index":8937}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":11373026,"byte_end":11373030,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8940}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":185134,"byte_end":185144,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8989}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":185544,"byte_end":185554,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8997}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":185776,"byte_end":185780,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9001},{"krate":0,"index":9002}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11392717,"byte_end":11392724,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11392761,"byte_end":11392768,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11392806,"byte_end":11392815,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11393001,"byte_end":11393008,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9046},{"krate":0,"index":9047}],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11393642,"byte_end":11393651,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9050},{"krate":0,"index":9051}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11393783,"byte_end":11393792,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9054}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11393914,"byte_end":11393923,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9057}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14158,"byte_end":14164,"line_start":347,"line_end":347,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\mod.rs","byte_start":16275,"byte_end":16282,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14189,"byte_end":14191,"line_start":350,"line_end":350,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":896}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\mod.rs","byte_start":10229436,"byte_end":10229438,"line_start":51,"line_end":51,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1090}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\os\\mod.rs","byte_start":10279386,"byte_end":10279393,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1091}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14219,"byte_end":14225,"line_start":354,"line_end":354,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14236,"byte_end":14238,"line_start":356,"line_end":356,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14248,"byte_end":14251,"line_start":357,"line_end":357,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":308}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72787,"byte_end":72790,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3251}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72894,"byte_end":72897,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3546}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14283,"byte_end":14290,"line_start":362,"line_end":362,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":556}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14320,"byte_end":14327,"line_start":365,"line_end":365,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3792}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14340,"byte_end":14347,"line_start":368,"line_end":368,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":562}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14398,"byte_end":14404,"line_start":373,"line_end":373,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5315}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":10794776,"byte_end":10794783,"line_start":60,"line_end":60,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":5375}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14435,"byte_end":14441,"line_start":377,"line_end":377,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5457}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14470,"byte_end":14474,"line_start":381,"line_end":381,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6146}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950068,"byte_end":10950077,"line_start":435,"line_end":435,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":6160}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950235,"byte_end":10950239,"line_start":442,"line_end":442,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6347}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":10998625,"byte_end":10998630,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6746}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950386,"byte_end":10950393,"line_start":450,"line_end":450,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":6910}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":10950707,"byte_end":10950712,"line_start":463,"line_end":463,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7390}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14538,"byte_end":14542,"line_start":388,"line_end":388,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7863}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14596,"byte_end":14600,"line_start":393,"line_end":393,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":8067}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":11262684,"byte_end":11262695,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":8070}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":68},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\dir_builder.rs","byte_start":10236457,"byte_end":10236467,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10242238,"byte_end":10242242,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10255467,"byte_end":10255471,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10257955,"byte_end":10257959,"line_start":606,"line_end":606,"column_start":20,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":246}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10260384,"byte_end":10260388,"line_start":676,"line_end":676,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10263359,"byte_end":10263363,"line_start":764,"line_end":764,"column_start":26,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10263461,"byte_end":10263465,"line_start":770,"line_end":770,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\file.rs","byte_start":10263852,"byte_end":10263856,"line_start":786,"line_end":786,"column_start":44,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":967},"to":{"krate":1,"index":9264}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10268623,"byte_end":10268634,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10279103,"byte_end":10279114,"line_start":393,"line_end":393,"column_start":37,"column_end":48},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1318},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\open_options.rs","byte_start":10279232,"byte_end":10279243,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1318},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10283715,"byte_end":10283722,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10284957,"byte_end":10284964,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1325},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\fs\\read_dir.rs","byte_start":10285791,"byte_end":10285799,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1344},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1344},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1357},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1357},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\blocking.rs","byte_start":10295564,"byte_end":10295572,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\blocking.rs","byte_start":10295845,"byte_end":10295853,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1463},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\blocking.rs","byte_start":10297458,"byte_end":10297466,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1463},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\blocking.rs","byte_start":10300191,"byte_end":10300194,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\blocking.rs","byte_start":10302009,"byte_end":10302012,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47374,"byte_end":47383,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":2,"index":34793},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":33}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":34}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":2,"index":34793},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":36}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":37}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":246}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":2,"index":34793},"to":{"krate":0,"index":246}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":39}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":246}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":34793},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":10314285,"byte_end":10314296,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1693},"to":{"krate":0,"index":8796}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":10315055,"byte_end":10315066,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1693},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":10315273,"byte_end":10315284,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":10317906,"byte_end":10317917,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1693},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10303654,"byte_end":10303660,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10306521,"byte_end":10306527,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1561},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10306895,"byte_end":10306901,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1561},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10307037,"byte_end":10307043,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10308186,"byte_end":10308192,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1699},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10308270,"byte_end":10308276,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1699},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10308411,"byte_end":10308416,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":10309960,"byte_end":10309969,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10324475,"byte_end":10324486,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10332277,"byte_end":10332288,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1719},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10332781,"byte_end":10332792,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1719},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10333873,"byte_end":10333884,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1719},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":10334057,"byte_end":10334068,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1719},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10336216,"byte_end":10336228,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10347098,"byte_end":10347110,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1723},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10347135,"byte_end":10347147,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1723},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":10347166,"byte_end":10347178,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1723},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stderr.rs","byte_start":10349906,"byte_end":10349912,"line_start":83,"line_end":83,"column_start":44,"column_end":50},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1776},"to":{"krate":1,"index":9264}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stderr.rs","byte_start":10350051,"byte_end":10350057,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1776},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stdin.rs","byte_start":10352632,"byte_end":10352637,"line_start":59,"line_end":59,"column_start":44,"column_end":49},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1781},"to":{"krate":1,"index":9264}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stdin.rs","byte_start":10352774,"byte_end":10352779,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1781},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stdout.rs","byte_start":10355731,"byte_end":10355737,"line_start":83,"line_end":83,"column_start":44,"column_end":50},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1786},"to":{"krate":1,"index":9264}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\stdout.rs","byte_start":10355876,"byte_end":10355882,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1786},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358002,"byte_end":10358010,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10358927,"byte_end":10358936,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10359186,"byte_end":10359194,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1904},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10359749,"byte_end":10359758,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1907},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10360707,"byte_end":10360712,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361105,"byte_end":10361110,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361363,"byte_end":10361368,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1813},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361491,"byte_end":10361499,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1904},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361536,"byte_end":10361545,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1907},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361582,"byte_end":10361590,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1904},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361627,"byte_end":10361636,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1907},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361679,"byte_end":10361687,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1904},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":10361855,"byte_end":10361864,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1907},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\seek.rs","byte_start":10362554,"byte_end":10362558,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1912},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10365475,"byte_end":10365487,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":2602}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10374508,"byte_end":10374509,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1936},"to":{"krate":0,"index":2602}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10376536,"byte_end":10376545,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":2610}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":10413794,"byte_end":10413795,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1983},"to":{"krate":0,"index":2610}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10414674,"byte_end":10414683,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":246},"to":{"krate":0,"index":1991}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":10415553,"byte_end":10415554,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1994},"to":{"krate":0,"index":1991}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10417611,"byte_end":10417621,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":271},"to":{"krate":0,"index":2662}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":10450831,"byte_end":10450832,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2035},"to":{"krate":0,"index":2662}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10452248,"byte_end":10452257,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":11760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10454436,"byte_end":10454445,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":11760},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10455421,"byte_end":10455430,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":11760},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10456261,"byte_end":10456270,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":11760},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":10456986,"byte_end":10456995,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":11760},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10458502,"byte_end":10458511,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":11746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10460348,"byte_end":10460357,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":11746},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10460499,"byte_end":10460508,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":11746},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10461220,"byte_end":10461229,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":11746},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10461759,"byte_end":10461768,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":11746},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":10462247,"byte_end":10462256,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":11746},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10464210,"byte_end":10464219,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":11683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10466497,"byte_end":10466506,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":11683},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10467396,"byte_end":10467405,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":11683},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10467887,"byte_end":10467896,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":11683},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":10468183,"byte_end":10468192,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":11683},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10469361,"byte_end":10469366,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":11634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10470506,"byte_end":10470511,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":11634},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10470790,"byte_end":10470795,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":11634},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":10471618,"byte_end":10471623,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":11634},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\copy.rs","byte_start":10474666,"byte_end":10474670,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":10477780,"byte_end":10477785,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2728},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":10478114,"byte_end":10478119,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2728},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":10478352,"byte_end":10478357,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2728},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\flush.rs","byte_start":10479178,"byte_end":10479183,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2731},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10480363,"byte_end":10480368,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":11611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10481620,"byte_end":10481625,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":11611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":10482372,"byte_end":10482377,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":11611},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read.rs","byte_start":10483775,"byte_end":10483779,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2739},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_buf.rs","byte_start":10484840,"byte_end":10484847,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2748},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_exact.rs","byte_start":10486212,"byte_end":10486221,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2759},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_line.rs","byte_start":10493756,"byte_end":10493764,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2913},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_end.rs","byte_start":10494990,"byte_end":10494995,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2386},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_end.rs","byte_start":10496671,"byte_end":10496680,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2924},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_string.rs","byte_start":10498744,"byte_end":10498756,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2935},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_until.rs","byte_start":10501408,"byte_end":10501417,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2946},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\repeat.rs","byte_start":10503251,"byte_end":10503257,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2958},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\shutdown.rs","byte_start":10504379,"byte_end":10504387,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2962},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\sink.rs","byte_start":10506220,"byte_end":10506224,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2970},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\sink.rs","byte_start":10506734,"byte_end":10506738,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2970},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10507703,"byte_end":10507708,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":10777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10508447,"byte_end":10508452,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":10777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":10509231,"byte_end":10509236,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":10777},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10522775,"byte_end":10522787,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":10731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10523292,"byte_end":10523304,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":10731},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":10524843,"byte_end":10524855,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":10731},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10510404,"byte_end":10510408,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":10686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10512036,"byte_end":10512040,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":10686},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":10512697,"byte_end":10512701,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":10686},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write.rs","byte_start":10514258,"byte_end":10514263,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_all.rs","byte_start":10515056,"byte_end":10515064,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3020},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_buf.rs","byte_start":10516572,"byte_end":10516580,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3029},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73921,"byte_end":73938,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":368},"to":{"krate":0,"index":319}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":144}},"from":{"krate":1,"index":7260},"to":{"krate":0,"index":319}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":145}},"from":{"krate":1,"index":7260},"to":{"krate":0,"index":368}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":146}},"from":{"krate":1,"index":7288},"to":{"krate":0,"index":319}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":147}},"from":{"krate":1,"index":7288},"to":{"krate":0,"index":368}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":1,"index":7291},"to":{"krate":0,"index":319}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":149}},"from":{"krate":1,"index":7291},"to":{"krate":0,"index":368}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":78793,"byte_end":78799,"line_start":206,"line_end":206,"column_start":28,"column_end":34},"kind":{"Impl":{"id":152}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":319}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":78843,"byte_end":78849,"line_start":208,"line_end":208,"column_start":40,"column_end":46},"kind":{"Impl":{"id":153}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":368}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":80215,"byte_end":80225,"line_start":259,"line_end":259,"column_start":25,"column_end":35},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3223},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":80873,"byte_end":80882,"line_start":277,"line_end":277,"column_start":27,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10529777,"byte_end":10529788,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540492,"byte_end":10540503,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3507},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10540818,"byte_end":10540829,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":158}},"from":{"krate":16,"index":966},"to":{"krate":2,"index":2004}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10541269,"byte_end":10541280,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3507},"to":{"krate":2,"index":2004}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":10541606,"byte_end":10541617,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3507},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10542676,"byte_end":10542684,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":10543322,"byte_end":10543330,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3509},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10545480,"byte_end":10545488,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10547943,"byte_end":10547951,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3515},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10548271,"byte_end":10548280,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3522},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10549093,"byte_end":10549101,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3515},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":10549195,"byte_end":10549204,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3522},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552267,"byte_end":10552279,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3538},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552482,"byte_end":10552494,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3538},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10552504,"byte_end":10552517,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555351,"byte_end":10555364,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3529},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10555669,"byte_end":10555683,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10556235,"byte_end":10556249,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3533},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10556409,"byte_end":10556423,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3533},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10557244,"byte_end":10557257,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3529},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":10557353,"byte_end":10557367,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3533},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10559502,"byte_end":10559511,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10584317,"byte_end":10584326,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"kind":{"Impl":{"id":178}},"from":{"krate":16,"index":910},"to":{"krate":2,"index":2004}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10584762,"byte_end":10584771,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3544},"to":{"krate":2,"index":2004}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10585124,"byte_end":10585133,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3544},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10585447,"byte_end":10585456,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3544},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":10586200,"byte_end":10586209,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3544},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10587438,"byte_end":10587447,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10601003,"byte_end":10601012,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"kind":{"Impl":{"id":184}},"from":{"krate":16,"index":1006},"to":{"krate":2,"index":2004}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10601448,"byte_end":10601457,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3669},"to":{"krate":2,"index":2004}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":10601777,"byte_end":10601786,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3669},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10604095,"byte_end":10604107,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3681},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10604310,"byte_end":10604322,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3681},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10604849,"byte_end":10604857,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10606489,"byte_end":10606497,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607817,"byte_end":10607825,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3671},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":10607916,"byte_end":10607924,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3676},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\either.rs","byte_start":10608137,"byte_end":10608143,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3700},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\either.rs","byte_start":10608949,"byte_end":10608955,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3700},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\either.rs","byte_start":10609169,"byte_end":10609175,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3700},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3726},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3726},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3730},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3780},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":94870,"byte_end":94874,"line_start":94,"line_end":94,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":94877,"byte_end":94881,"line_start":94,"line_end":94,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"kind":{"Impl":{"id":230}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"kind":{"Impl":{"id":231}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10644916,"byte_end":10644921,"line_start":49,"line_end":49,"column_start":21,"column_end":26},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3828},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10645309,"byte_end":10645316,"line_start":65,"line_end":65,"column_start":22,"column_end":29},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3833},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10645341,"byte_end":10645348,"line_start":66,"line_end":66,"column_start":22,"column_end":29},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3833},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10645763,"byte_end":10645768,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10645855,"byte_end":10645860,"line_start":91,"line_end":91,"column_start":15,"column_end":20},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3828},"to":{"krate":0,"index":3858}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10645957,"byte_end":10645962,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3828},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\windows.rs","byte_start":10647576,"byte_end":10647583,"line_start":143,"line_end":143,"column_start":15,"column_end":22},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3833},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10614713,"byte_end":10614720,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10630970,"byte_end":10630977,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3979},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10631307,"byte_end":10631321,"line_start":683,"line_end":683,"column_start":24,"column_end":38},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3984},"to":{"krate":0,"index":3858}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10631527,"byte_end":10631541,"line_start":695,"line_end":695,"column_start":24,"column_end":38},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3984},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10631678,"byte_end":10631692,"line_start":703,"line_end":703,"column_start":26,"column_end":40},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3984},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10633541,"byte_end":10633546,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10636059,"byte_end":10636064,"line_start":832,"line_end":832,"column_start":17,"column_end":22},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3991},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10637029,"byte_end":10637039,"line_start":867,"line_end":867,"column_start":21,"column_end":31},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3998},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10637564,"byte_end":10637575,"line_start":885,"line_end":885,"column_start":20,"column_end":31},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4002},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10638039,"byte_end":10638050,"line_start":900,"line_end":900,"column_start":20,"column_end":31},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4006},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10639193,"byte_end":10639203,"line_start":946,"line_end":946,"column_start":26,"column_end":36},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3998},"to":{"krate":1,"index":9264}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10639344,"byte_end":10639355,"line_start":952,"line_end":952,"column_start":26,"column_end":37},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4002},"to":{"krate":1,"index":9264}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\process\\mod.rs","byte_start":10639496,"byte_end":10639507,"line_start":958,"line_end":958,"column_start":26,"column_end":37},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4006},"to":{"krate":1,"index":9264}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":571},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10651251,"byte_end":10651265,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10654804,"byte_end":10654809,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4078},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10655496,"byte_end":10655510,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4043},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10656397,"byte_end":10656411,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4043},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10656577,"byte_end":10656584,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10657042,"byte_end":10657049,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4549},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10657217,"byte_end":10657220,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":259}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":4513}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":10658318,"byte_end":10658324,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4052},"to":{"krate":0,"index":825}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":10666007,"byte_end":10666013,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4143},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":10666038,"byte_end":10666044,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4143},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":10666403,"byte_end":10666407,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":10667185,"byte_end":10667189,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":10672940,"byte_end":10672946,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10673571,"byte_end":10673580,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676659,"byte_end":10676668,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4561},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10676911,"byte_end":10676920,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4561},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10677197,"byte_end":10677206,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4561},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":10677240,"byte_end":10677245,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":270}},"from":{"krate":1,"index":2782},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\harness.rs","byte_start":10677923,"byte_end":10677930,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\harness.rs","byte_start":10678407,"byte_end":10678414,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":4239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\harness.rs","byte_start":10680585,"byte_end":10680590,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4255},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10692894,"byte_end":10692904,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10692941,"byte_end":10692951,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10692967,"byte_end":10692977,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10693153,"byte_end":10693163,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10693190,"byte_end":10693200,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10694426,"byte_end":10694436,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":10694702,"byte_end":10694712,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\raw.rs","byte_start":10695959,"byte_end":10695966,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\raw.rs","byte_start":10697497,"byte_end":10697504,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4328},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\raw.rs","byte_start":10697594,"byte_end":10697601,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4328},"to":{"krate":2,"index":2091}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":10700283,"byte_end":10700288,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":10709144,"byte_end":10709152,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":10711029,"byte_end":10711034,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4377},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":10711193,"byte_end":10711201,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4567},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\waker.rs","byte_start":10713019,"byte_end":10713027,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4461},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\stack.rs","byte_start":10714775,"byte_end":10714788,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\stack.rs","byte_start":10715946,"byte_end":10715950,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4597},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\stack.rs","byte_start":10716350,"byte_end":10716354,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4597},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10659337,"byte_end":10659341,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4495},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10659372,"byte_end":10659376,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4495},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10659513,"byte_end":10659521,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4503},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10659562,"byte_end":10659570,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4503},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10659695,"byte_end":10659699,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":4513}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10659702,"byte_end":10659707,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":4513}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10661494,"byte_end":10661498,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10661795,"byte_end":10661803,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10662054,"byte_end":10662058,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10662251,"byte_end":10662259,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10662390,"byte_end":10662394,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10662563,"byte_end":10662571,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10662857,"byte_end":10662861,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4495},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10663101,"byte_end":10663105,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4495},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10663257,"byte_end":10663265,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4503},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":10663481,"byte_end":10663485,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4495},"to":{"krate":0,"index":778}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\pool.rs","byte_start":10718662,"byte_end":10718674,"line_start":85,"line_end":85,"column_start":6,"column_end":18},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\pool.rs","byte_start":10720310,"byte_end":10720322,"line_start":136,"line_end":136,"column_start":15,"column_end":27},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4644},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\pool.rs","byte_start":10720408,"byte_end":10720420,"line_start":142,"line_end":142,"column_start":21,"column_end":33},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4644},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\pool.rs","byte_start":10720581,"byte_end":10720588,"line_start":150,"line_end":150,"column_start":6,"column_end":13},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\pool.rs","byte_start":10722752,"byte_end":10722757,"line_start":218,"line_end":218,"column_start":6,"column_end":11},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\pool.rs","byte_start":10725426,"byte_end":10725433,"line_start":303,"line_end":303,"column_start":21,"column_end":28},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4731},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\schedule.rs","byte_start":10725936,"byte_end":10725948,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4696},"to":{"krate":0,"index":4513}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\shutdown.rs","byte_start":10726821,"byte_end":10726829,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\task.rs","byte_start":10728449,"byte_end":10728461,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\task.rs","byte_start":10728687,"byte_end":10728699,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4716},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\task.rs","byte_start":10728729,"byte_end":10728741,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4716},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":140925,"byte_end":140932,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":145431,"byte_end":145436,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4797},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":148422,"byte_end":148427,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":159716,"byte_end":159722,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\park.rs","byte_start":10730712,"byte_end":10730718,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\park.rs","byte_start":10731187,"byte_end":10731193,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4864},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\park.rs","byte_start":10731509,"byte_end":10731515,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4864},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\park.rs","byte_start":10732167,"byte_end":10732175,"line_start":109,"line_end":109,"column_start":17,"column_end":25},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4866},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\park.rs","byte_start":10732244,"byte_end":10732249,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4906},"to":{"krate":0,"index":825}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10739297,"byte_end":10739302,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4962},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10739333,"byte_end":10739338,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4962},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10739369,"byte_end":10739375,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4957},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10739406,"byte_end":10739412,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4957},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10740271,"byte_end":10740276,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10746810,"byte_end":10746815,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10751983,"byte_end":10751988,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4953},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10752084,"byte_end":10752089,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4950},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10752248,"byte_end":10752253,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10752441,"byte_end":10752447,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\queue.rs","byte_start":10755952,"byte_end":10755958,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4957},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10760112,"byte_end":10760122,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5037},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10760159,"byte_end":10760169,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5037},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10760185,"byte_end":10760195,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10760982,"byte_end":10760992,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5037},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\idle.rs","byte_start":10761798,"byte_end":10761802,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\idle.rs","byte_start":10765675,"byte_end":10765680,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\idle.rs","byte_start":10767158,"byte_end":10767163,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5231},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\idle.rs","byte_start":10767336,"byte_end":10767341,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5231},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10773105,"byte_end":10773110,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5246},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10776875,"byte_end":10776881,"line_start":282,"line_end":282,"column_start":6,"column_end":12},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10777656,"byte_end":10777663,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10781929,"byte_end":10781933,"line_start":444,"line_end":444,"column_start":6,"column_end":10},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10786719,"byte_end":10786725,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10787165,"byte_end":10787168,"line_start":616,"line_end":616,"column_start":25,"column_end":28},"kind":{"Impl":{"id":370}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":4513}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\worker.rs","byte_start":10789739,"byte_end":10789745,"line_start":694,"line_end":694,"column_start":6,"column_end":12},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\mod.rs","byte_start":10758010,"byte_end":10758020,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\mod.rs","byte_start":10759175,"byte_end":10759185,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5212},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\mod.rs","byte_start":10759324,"byte_end":10759334,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5212},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\mod.rs","byte_start":10759441,"byte_end":10759448,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\thread_pool\\mod.rs","byte_start":10759793,"byte_end":10759800,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5255},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":5282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":172543,"byte_end":172549,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":757},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5302},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":10797592,"byte_end":10797595,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":384}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":5337}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":10798317,"byte_end":10798325,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":10798415,"byte_end":10798423,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":10800576,"byte_end":10800583,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5360},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":10800691,"byte_end":10800698,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10823469,"byte_end":10823478,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5438},"to":{"krate":0,"index":5347}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10823644,"byte_end":10823653,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5438},"to":{"krate":0,"index":5337}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10824126,"byte_end":10824137,"line_start":57,"line_end":57,"column_start":15,"column_end":26},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5443},"to":{"krate":0,"index":5347}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10825090,"byte_end":10825095,"line_start":86,"line_end":86,"column_start":6,"column_end":11},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10827014,"byte_end":10827023,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":10828827,"byte_end":10828836,"line_start":212,"line_end":212,"column_start":36,"column_end":45},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5450},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":10857100,"byte_end":10857109,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":6045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":10857255,"byte_end":10857264,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":6045},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":10857303,"byte_end":10857312,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6045},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":10858263,"byte_end":10858272,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":10858418,"byte_end":10858427,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6056},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":10858466,"byte_end":10858475,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6056},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\chain.rs","byte_start":10859398,"byte_end":10859403,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":9813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\chain.rs","byte_start":10859583,"byte_end":10859588,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":9813},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10861133,"byte_end":10861147,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":5606},"to":{"krate":0,"index":5535}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10861166,"byte_end":10861173,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":9792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10861457,"byte_end":10861464,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":9792},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10862440,"byte_end":10862446,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":405}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":5535}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10862501,"byte_end":10862507,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":406}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":5606}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10862896,"byte_end":10862899,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":407}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":5535}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10862945,"byte_end":10862948,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":408}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":5606}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10863331,"byte_end":10863334,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":409}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":5535}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10863382,"byte_end":10863385,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":410}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":5606}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10863900,"byte_end":10863906,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":411}},"from":{"krate":2,"index":34807},"to":{"krate":0,"index":5535}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10863995,"byte_end":10864001,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":412}},"from":{"krate":2,"index":34807},"to":{"krate":0,"index":5606}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10865079,"byte_end":10865084,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":413}},"from":{"krate":14,"index":341},"to":{"krate":0,"index":5535}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10865132,"byte_end":10865137,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":414}},"from":{"krate":14,"index":341},"to":{"krate":0,"index":5606}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10865537,"byte_end":10865545,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":415}},"from":{"krate":14,"index":535},"to":{"krate":0,"index":5535}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":10865593,"byte_end":10865601,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":416}},"from":{"krate":14,"index":535},"to":{"krate":0,"index":5606}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10866872,"byte_end":10866877,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6067},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10866908,"byte_end":10866913,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6067},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10866944,"byte_end":10866949,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":6067},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":10867492,"byte_end":10867497,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":6067},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":10868111,"byte_end":10868117,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":9719},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":10868335,"byte_end":10868341,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":9719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":10868460,"byte_end":10868466,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":9719},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":10869552,"byte_end":10869561,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":9674},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":10869782,"byte_end":10869791,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":9674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":10869913,"byte_end":10869922,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":9674},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fold.rs","byte_start":10870994,"byte_end":10871004,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":9646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fold.rs","byte_start":10871200,"byte_end":10871210,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":9646},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fuse.rs","byte_start":10872109,"byte_end":10872113,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":9598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fuse.rs","byte_start":10872273,"byte_end":10872277,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":9598},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873220,"byte_end":10873224,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":6074},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":10873886,"byte_end":10873890,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":6074},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":10874636,"byte_end":10874639,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":9531},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":10874828,"byte_end":10874831,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":9531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":10874952,"byte_end":10874955,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":9531},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\merge.rs","byte_start":10875800,"byte_end":10875805,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":9482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\merge.rs","byte_start":10876059,"byte_end":10876064,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":9482},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":10877576,"byte_end":10877580,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6080},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":10877614,"byte_end":10877618,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":10877759,"byte_end":10877763,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":6080},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878259,"byte_end":10878263,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6088},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":10878890,"byte_end":10878894,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6088},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879441,"byte_end":10879448,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6094},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879479,"byte_end":10879486,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6094},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10879517,"byte_end":10879524,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6094},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":10880217,"byte_end":10880224,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6094},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10885889,"byte_end":10885898,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10892899,"byte_end":10892908,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":6101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":10894447,"byte_end":10894456,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6101},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":10895672,"byte_end":10895676,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":9445},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":10895886,"byte_end":10895890,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":9445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":10896023,"byte_end":10896027,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":9445},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":10897253,"byte_end":10897262,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":9400},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":10897483,"byte_end":10897492,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":9400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":10897677,"byte_end":10897686,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":9400},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":10899035,"byte_end":10899042,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":6113},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":10899076,"byte_end":10899083,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":6113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":10899290,"byte_end":10899297,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":6113},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":10899907,"byte_end":10899911,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":9363},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":10900121,"byte_end":10900125,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":9363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":10900258,"byte_end":10900262,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":9363},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":10901781,"byte_end":10901790,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":9314},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":10902050,"byte_end":10902059,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":9314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":10902252,"byte_end":10902261,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":9314},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\timeout.rs","byte_start":10933486,"byte_end":10933493,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":9291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\timeout.rs","byte_start":10933848,"byte_end":10933855,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":9291},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10832342,"byte_end":10832348,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":15,"index":68},"to":{"krate":0,"index":6008}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":10856330,"byte_end":10856332,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6043},"to":{"krate":0,"index":6008}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10952323,"byte_end":10952330,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":7478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":10955610,"byte_end":10955627,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":7490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966194,"byte_end":10966200,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6222},"to":{"krate":2,"index":1991}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966327,"byte_end":10966333,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6222},"to":{"krate":2,"index":1991}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966494,"byte_end":10966498,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6216},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10966568,"byte_end":10966572,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6216},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969346,"byte_end":10969352,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":6182},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969389,"byte_end":10969395,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":6182},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969433,"byte_end":10969441,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":6185},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969478,"byte_end":10969486,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":6185},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10969502,"byte_end":10969508,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10975144,"byte_end":10975148,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10975540,"byte_end":10975546,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":6182},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10975726,"byte_end":10975732,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":6182},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10975886,"byte_end":10975894,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":6185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10980759,"byte_end":10980767,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":6185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10983520,"byte_end":10983525,"line_start":856,"line_end":856,"column_start":30,"column_end":35},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":6278},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10986939,"byte_end":10986947,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6185},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10987397,"byte_end":10987405,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6185},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10988589,"byte_end":10988593,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10989435,"byte_end":10989439,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6216},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10990169,"byte_end":10990177,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10991489,"byte_end":10991493,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6216},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10992217,"byte_end":10992221,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6216},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10993019,"byte_end":10993025,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6207},"to":{"krate":0,"index":778}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10993440,"byte_end":10993446,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6182},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10993590,"byte_end":10993598,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6185},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10993733,"byte_end":10993742,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10993915,"byte_end":10993924,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6212},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10994215,"byte_end":10994224,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":7504},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10994497,"byte_end":10994506,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":7504},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10994533,"byte_end":10994545,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":7516},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":10994887,"byte_end":10994899,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":7516},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\block.rs","byte_start":11001208,"byte_end":11001213,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\block.rs","byte_start":11011195,"byte_end":11011201,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\block.rs","byte_start":11011683,"byte_end":11011689,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6379},"to":{"krate":2,"index":2362}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012327,"byte_end":11012333,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6433},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012465,"byte_end":11012471,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6433},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11012878,"byte_end":11012886,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6442},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11014658,"byte_end":11014666,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017094,"byte_end":11017102,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6442},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017162,"byte_end":11017170,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6442},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":11017358,"byte_end":11017364,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11028754,"byte_end":11028756,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6507},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11029157,"byte_end":11029159,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6516},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11029466,"byte_end":11029475,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7561},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11029737,"byte_end":11029749,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":7568},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11031444,"byte_end":11031448,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6540},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11032081,"byte_end":11032089,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6552},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11032355,"byte_end":11032359,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6540},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11032408,"byte_end":11032412,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6540},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11032891,"byte_end":11032893,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11033591,"byte_end":11033593,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11033741,"byte_end":11033743,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11033921,"byte_end":11033923,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6507},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11034323,"byte_end":11034325,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6507},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11034734,"byte_end":11034736,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11037856,"byte_end":11037858,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6516},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11038294,"byte_end":11038298,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11038762,"byte_end":11038766,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6540},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11039315,"byte_end":11039327,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":7548},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":11040927,"byte_end":11040938,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":6530}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":11043655,"byte_end":11043657,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":11049361,"byte_end":11049363,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6665},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":11049640,"byte_end":11049642,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":11053041,"byte_end":11053043,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6669},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11053717,"byte_end":11053732,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6705},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11053873,"byte_end":11053888,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6705},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11054346,"byte_end":11054363,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6714},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11055341,"byte_end":11055358,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11057830,"byte_end":11057847,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6714},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":11058013,"byte_end":11058028,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059138,"byte_end":11059147,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":7561},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059307,"byte_end":11059316,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":7561},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059802,"byte_end":11059814,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":7568},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11059847,"byte_end":11059859,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":7568},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060199,"byte_end":11060211,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":7568},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060440,"byte_end":11060449,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":7579},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11060579,"byte_end":11060588,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":7579},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061074,"byte_end":11061086,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":7584},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061392,"byte_end":11061404,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":7584},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061561,"byte_end":11061572,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":7594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061671,"byte_end":11061682,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":7594},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11061812,"byte_end":11061823,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":7594},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11062327,"byte_end":11062343,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":7604},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":11062380,"byte_end":11062396,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":7604},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068712,"byte_end":11068717,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":7615},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068771,"byte_end":11068776,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":7615},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068830,"byte_end":11068840,"line_start":160,"line_end":160,"column_start":25,"column_end":35},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6783},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11068905,"byte_end":11068920,"line_start":161,"line_end":161,"column_start":25,"column_end":40},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6787},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11069207,"byte_end":11069219,"line_start":171,"line_end":171,"column_start":23,"column_end":35},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":7622},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11069356,"byte_end":11069368,"line_start":177,"line_end":177,"column_start":16,"column_end":28},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":7622},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11070176,"byte_end":11070181,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":7615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074754,"byte_end":11074759,"line_start":361,"line_end":361,"column_start":21,"column_end":26},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":7615},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074843,"byte_end":11074848,"line_start":367,"line_end":367,"column_start":21,"column_end":26},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":7615},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11074997,"byte_end":11075007,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6783},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11075108,"byte_end":11075118,"line_start":384,"line_end":384,"column_start":27,"column_end":37},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6783},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11075265,"byte_end":11075275,"line_start":391,"line_end":391,"column_start":30,"column_end":40},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6783},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11075432,"byte_end":11075442,"line_start":397,"line_end":397,"column_start":45,"column_end":55},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6783},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11075608,"byte_end":11075618,"line_start":403,"line_end":403,"column_start":49,"column_end":59},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6783},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11075796,"byte_end":11075811,"line_start":411,"line_end":411,"column_start":26,"column_end":41},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6787},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11075908,"byte_end":11075923,"line_start":417,"line_end":417,"column_start":27,"column_end":42},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6787},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11076066,"byte_end":11076081,"line_start":424,"line_end":424,"column_start":30,"column_end":45},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6787},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11076234,"byte_end":11076249,"line_start":430,"line_end":430,"column_start":45,"column_end":60},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6787},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":11076411,"byte_end":11076426,"line_start":436,"line_end":436,"column_start":49,"column_end":64},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6787},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080390,"byte_end":11080398,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":7639},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080431,"byte_end":11080439,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":7639},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11080702,"byte_end":11080708,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":7627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11084716,"byte_end":11084722,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7627},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11086460,"byte_end":11086468,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11086978,"byte_end":11086986,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":7639},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11091816,"byte_end":11091824,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":7639},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":11094782,"byte_end":11094788,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7632},"to":{"krate":0,"index":778}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096664,"byte_end":11096673,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7668},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096835,"byte_end":11096844,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7668},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11096913,"byte_end":11096925,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7680},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11097224,"byte_end":11097236,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7680},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11099047,"byte_end":11099053,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105354,"byte_end":11105360,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7656},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11105499,"byte_end":11105507,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":7662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11109898,"byte_end":11109906,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":7662},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11110053,"byte_end":11110061,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7662},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11110524,"byte_end":11110529,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":6938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11114901,"byte_end":11114906,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":6938},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11114943,"byte_end":11114948,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":6938},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11114973,"byte_end":11114978,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":6938},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11115347,"byte_end":11115352,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":6938},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11115747,"byte_end":11115752,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":11117465,"byte_end":11117470,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7693},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11120948,"byte_end":11120957,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":7051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11130878,"byte_end":11130887,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7051},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11131088,"byte_end":11131094,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11131960,"byte_end":11131967,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7057},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11132645,"byte_end":11132652,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11133451,"byte_end":11133458,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7057},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11135100,"byte_end":11135107,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7057},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11135154,"byte_end":11135166,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11135259,"byte_end":11135271,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7706},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11135415,"byte_end":11135427,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":7706},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11135474,"byte_end":11135489,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11136111,"byte_end":11136126,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7699},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11136412,"byte_end":11136427,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7699},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":11136520,"byte_end":11136526,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7063},"to":{"krate":0,"index":778}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11141795,"byte_end":11141804,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11157998,"byte_end":11158007,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7145},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11158086,"byte_end":11158095,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7145},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11158473,"byte_end":11158482,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7145},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11158507,"byte_end":11158516,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7145},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11158554,"byte_end":11158560,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11164966,"byte_end":11164972,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7711},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11165045,"byte_end":11165051,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7711},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11165473,"byte_end":11165485,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11165665,"byte_end":11165677,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":7716},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11165821,"byte_end":11165833,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":7716},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11165880,"byte_end":11165895,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":7721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11166425,"byte_end":11166440,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":7721},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11166726,"byte_end":11166741,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":7721},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11166779,"byte_end":11166785,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":7728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11172198,"byte_end":11172206,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11175869,"byte_end":11175877,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7734},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":11176230,"byte_end":11176241,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11178970,"byte_end":11178979,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181074,"byte_end":11181089,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181334,"byte_end":11181354,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181608,"byte_end":11181623,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":7764},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":11181731,"byte_end":11181751,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7771},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11185572,"byte_end":11185587,"line_start":113,"line_end":113,"column_start":21,"column_end":36},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11185854,"byte_end":11185869,"line_start":123,"line_end":123,"column_start":26,"column_end":41},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7806},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11186873,"byte_end":11186879,"line_start":156,"line_end":156,"column_start":25,"column_end":31},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":7781},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11186933,"byte_end":11186939,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7781},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187000,"byte_end":11187015,"line_start":158,"line_end":158,"column_start":25,"column_end":40},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7788},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187080,"byte_end":11187096,"line_start":159,"line_end":159,"column_start":25,"column_end":41},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7797},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11187154,"byte_end":11187160,"line_start":161,"line_end":161,"column_start":17,"column_end":23},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11190277,"byte_end":11190292,"line_start":264,"line_end":264,"column_start":32,"column_end":47},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7788},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11190431,"byte_end":11190447,"line_start":272,"line_end":272,"column_start":32,"column_end":48},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7797},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11190589,"byte_end":11190605,"line_start":280,"line_end":280,"column_start":35,"column_end":51},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7797},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11190727,"byte_end":11190733,"line_start":286,"line_end":286,"column_start":21,"column_end":27},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7781},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":11190817,"byte_end":11190823,"line_start":292,"line_end":292,"column_start":21,"column_end":27},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7781},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":11197098,"byte_end":11197109,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":11203036,"byte_end":11203047,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7356},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":11203133,"byte_end":11203144,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":7356},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":11203277,"byte_end":11203288,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7356},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":11203313,"byte_end":11203324,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7356},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":11203420,"byte_end":11203425,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":651}},"from":{"krate":2,"index":9770},"to":{"krate":0,"index":7379}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11206966,"byte_end":11206975,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":7836},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11207155,"byte_end":11207164,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":7836},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11209323,"byte_end":11209331,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":7815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11210603,"byte_end":11210611,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":7815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11211977,"byte_end":11211985,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":7815},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11212244,"byte_end":11212252,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7815},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11212555,"byte_end":11212563,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":7815},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11212677,"byte_end":11212683,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":7822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11214218,"byte_end":11214224,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7822},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11214463,"byte_end":11214466,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7828},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11214607,"byte_end":11214613,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7842},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11214715,"byte_end":11214722,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":7851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11214945,"byte_end":11214952,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":7851},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11215069,"byte_end":11215076,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":7851},"to":{"krate":2,"index":1803}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11215106,"byte_end":11215113,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":7851},"to":{"krate":2,"index":7148}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":11215260,"byte_end":11215267,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":7851},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\yield_now.rs","byte_start":11234078,"byte_end":11234086,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":7895},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11241218,"byte_end":11241226,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":8043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11249068,"byte_end":11249076,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":8043},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11249215,"byte_end":11249223,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":8043},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11250188,"byte_end":11250196,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":8043},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11250277,"byte_end":11250285,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":8043},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11251152,"byte_end":11251160,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":9245},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11252045,"byte_end":11252051,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":7926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":11252614,"byte_end":11252617,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"kind":{"Impl":{"id":676}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":4513}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11256032,"byte_end":11256040,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":7995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11257816,"byte_end":11257824,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":7995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11258032,"byte_end":11258040,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":7995},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11258361,"byte_end":11258376,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":9168},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11258677,"byte_end":11258682,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":8023},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11259300,"byte_end":11259301,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":8036},"to":{"krate":0,"index":8034}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11259486,"byte_end":11259497,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":8055},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11259641,"byte_end":11259652,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":8055},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":11259799,"byte_end":11259810,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":8055},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\clock.rs","byte_start":11264395,"byte_end":11264400,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":8547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11274922,"byte_end":11274932,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":8552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11292575,"byte_end":11292585,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":8552},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11292613,"byte_end":11292623,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":8552},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11292760,"byte_end":11292770,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":8552},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11293152,"byte_end":11293157,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":8577},"to":{"krate":0,"index":8496}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295284,"byte_end":11295289,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":8577},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295419,"byte_end":11295422,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":8571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":11295509,"byte_end":11295516,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":8563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11298054,"byte_end":11298059,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":8594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":11299037,"byte_end":11299042,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":8594},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\atomic_stack.rs","byte_start":11312366,"byte_end":11312377,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":8598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\atomic_stack.rs","byte_start":11314355,"byte_end":11314373,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":8602},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\atomic_stack.rs","byte_start":11314945,"byte_end":11314963,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":8602},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":11318936,"byte_end":11318941,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":8606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":11325169,"byte_end":11325174,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":8606},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":11325382,"byte_end":11325387,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":8606},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":11325412,"byte_end":11325417,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":8606},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\handle.rs","byte_start":11325794,"byte_end":11325800,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":8630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\handle.rs","byte_start":11326445,"byte_end":11326451,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":8630},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\registration.rs","byte_start":11326896,"byte_end":11326908,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":8634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\registration.rs","byte_start":11327818,"byte_end":11327830,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":8634},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\stack.rs","byte_start":11328114,"byte_end":11328119,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":8638},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\stack.rs","byte_start":11328210,"byte_end":11328215,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":8638},"to":{"krate":0,"index":8496}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":11303932,"byte_end":11303938,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":8642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":11307587,"byte_end":11307593,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":8642},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":11309582,"byte_end":11309588,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":8642},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":11310065,"byte_end":11310070,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":8311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":11311687,"byte_end":11311692,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":8311},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11332487,"byte_end":11332492,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":8651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11333207,"byte_end":11333212,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":8651},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":11333239,"byte_end":11333244,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":8651},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11333950,"byte_end":11333957,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":8663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11337731,"byte_end":11337738,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":8663},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11337867,"byte_end":11337874,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":720}},"from":{"krate":1,"index":8172},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11337989,"byte_end":11337996,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":8663},"to":{"krate":2,"index":2146}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11338161,"byte_end":11338168,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":8663},"to":{"krate":2,"index":2177}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11338273,"byte_end":11338280,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":8663},"to":{"krate":2,"index":2151}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11338421,"byte_end":11338428,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":8663},"to":{"krate":2,"index":2151}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11338589,"byte_end":11338596,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":8663},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":11338703,"byte_end":11338710,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":8663},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11342446,"byte_end":11342454,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":8686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":11343749,"byte_end":11343757,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":8686},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11347089,"byte_end":11347096,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":8691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11347225,"byte_end":11347232,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":9151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11347770,"byte_end":11347777,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":9151},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11348355,"byte_end":11348362,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":8691},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11348506,"byte_end":11348513,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":8691},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":11348550,"byte_end":11348555,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":734}},"from":{"krate":1,"index":2782},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11366695,"byte_end":11366703,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":9105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":11367518,"byte_end":11367526,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":9105},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\level.rs","byte_start":11358459,"byte_end":11358464,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":8469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\level.rs","byte_start":11363216,"byte_end":11363221,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":8469},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":11364337,"byte_end":11364344,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2069},"to":{"krate":0,"index":8496}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\mod.rs","byte_start":11350280,"byte_end":11350285,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":8733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\mod.rs","byte_start":11355993,"byte_end":11355997,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":8747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\bit.rs","byte_start":11368359,"byte_end":11368363,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":8941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\bit.rs","byte_start":11369837,"byte_end":11369841,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":8941},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\addr.rs","byte_start":11377060,"byte_end":11377067,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":8947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\entry.rs","byte_start":11379702,"byte_end":11379709,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2069},"to":{"krate":0,"index":8796}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\generation.rs","byte_start":11380096,"byte_end":11380106,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":8962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":11381245,"byte_end":11381250,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":8819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":11381592,"byte_end":11381598,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":8821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":11385550,"byte_end":11385555,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":8819},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":11385861,"byte_end":11385867,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":8821},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\shard.rs","byte_start":11388010,"byte_end":11388015,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":8865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\shard.rs","byte_start":11389694,"byte_end":11389699,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":8865},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\slot.rs","byte_start":11390076,"byte_end":11390080,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":8888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\stack.rs","byte_start":11391051,"byte_end":11391064,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":8909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\stack.rs","byte_start":11391892,"byte_end":11391905,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":8909},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":11371439,"byte_end":11371443,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":8924},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":11371480,"byte_end":11371484,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":8924},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":11371507,"byte_end":11371511,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":8924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":11373026,"byte_end":11373030,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":8924},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":185134,"byte_end":185144,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":185544,"byte_end":185554,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":185776,"byte_end":185780,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":8990},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":9003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\wake.rs","byte_start":198062,"byte_end":198066,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":825}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\wake.rs","byte_start":198069,"byte_end":198073,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":825}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":9012},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11392717,"byte_end":11392724,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11392761,"byte_end":11392768,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11392806,"byte_end":11392815,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":9032},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11393001,"byte_end":11393008,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":9028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11393642,"byte_end":11393651,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":9032},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11393783,"byte_end":11393792,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":9032},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\try_lock.rs","byte_start":11393914,"byte_end":11393923,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":9032},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":9061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":9061},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":9061},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":781}},"from":{"krate":0,"index":9070},"to":{"krate":4294967295,"index":4294967295}}]}