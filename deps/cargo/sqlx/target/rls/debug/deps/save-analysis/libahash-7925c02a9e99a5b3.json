{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5","program":"C:\\Users\\Michael Bao\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","ahash","--edition=2018","C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=7925c02a9e99a5b3","-C","extra-filename=-7925c02a9e99a5b3","--out-dir","a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps","-L","dependency=a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Michael Bao\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"a:\\Git\\SquadOVApiServer\\deps\\cargo\\sqlx\\target\\rls\\debug\\deps\\libahash-7925c02a9e99a5b3.rmeta"},"prelude":{"crate_id":{"name":"ahash","disambiguator":[11275355283855946280,14680449501103048388]},"crate_root":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src","external_crates":[{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}}],"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":0,"byte_end":6476,"line_start":1,"line_end":203,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":1560,"byte_end":1567,"line_start":42,"line_end":42,"column_start":31,"column_end":38},"alias_span":null,"name":"AHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":1598,"byte_end":1609,"line_start":43,"line_end":43,"column_start":30,"column_end":41},"alias_span":null,"name":"RandomState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":1639,"byte_end":1649,"line_start":45,"line_end":45,"column_start":28,"column_end":38},"alias_span":null,"name":"CallHasher","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":0,"byte_end":6476,"line_start":1,"line_end":203,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":44},{"krate":0,"index":65},{"krate":0,"index":78},{"krate":0,"index":102},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":121},{"krate":0,"index":124}],"decl_id":null,"docs":" # aHash","sig":null,"attributes":[{"value":"/ # aHash","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":0,"byte_end":11,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":12,"byte_end":15,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This hashing algorithm is intended to be a high performance, (hardware specific), keyed hash function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":16,"byte_end":122,"line_start":3,"line_end":3,"column_start":1,"column_end":107}},{"value":"/ This can be seen as a DOS resistant alternative to `FxHash`, or a fast equivalent to `SipHash`.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":123,"byte_end":222,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ It provides a high speed hash algorithm, but where the result is not predictable without knowing a Key.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":223,"byte_end":330,"line_start":5,"line_end":5,"column_start":1,"column_end":108}},{"value":"/ This allows it to be used in a `HashMap` without allowing for the possibility that an malicious user can","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":331,"byte_end":439,"line_start":6,"line_end":6,"column_start":1,"column_end":109}},{"value":"/ induce a collision.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":440,"byte_end":463,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":464,"byte_end":467,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # How aHash works","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":468,"byte_end":489,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":490,"byte_end":493,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ aHash uses the hardware AES instruction on x86 processors to provide a keyed hash function.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":494,"byte_end":589,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ aHash is not a cryptographically secure hash.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":590,"byte_end":639,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"deny(clippy :: correctness, clippy :: complexity, clippy :: perf)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":640,"byte_end":703,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"allow(clippy :: pedantic, clippy :: cast_lossless, clippy ::\n        unreadable_literal)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":704,"byte_end":782,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"no_std","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":833,"byte_end":839,"line_start":15,"line_end":15,"column_start":51,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":12215,"byte_end":12222,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"AHasher","qualname":"::fallback_hash::AHasher","value":"AHasher {  }","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671}],"decl_id":null,"docs":" A `Hasher` for hashing an arbitrary stream of bytes.","sig":null,"attributes":[{"value":"/ A `Hasher` for hashing an arbitrary stream of bytes.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":11721,"byte_end":11777,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":11778,"byte_end":11781,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Instances of [`AHasher`] represent state that is updated while hashing data.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":11782,"byte_end":11862,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":11863,"byte_end":11866,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Each method updates the internal state based on the new data provided. Once","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":11867,"byte_end":11946,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ all of the data has been provided, the resulting hash can be obtained by calling","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":11947,"byte_end":12031,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ `finish()`","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":12032,"byte_end":12046,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":12047,"byte_end":12050,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [Clone] is also provided in case you wish to calculate hashes for two different items that","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":12051,"byte_end":12145,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/ start with the same data.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":12146,"byte_end":12175,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":12176,"byte_end":12179,"line_start":21,"line_end":21,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":12452,"byte_end":12465,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<AHasher>::new_with_keys","value":"pub fn new_with_keys(u128, u128) -> AHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hasher keyed to the provided key.\n","sig":null,"attributes":[{"value":"/ Creates a new hasher keyed to the provided key.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":12304,"byte_end":12355,"line_start":30,"line_end":30,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":12360,"byte_end":12369,"line_start":31,"line_end":31,"column_start":5,"column_end":14}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":12374,"byte_end":12393,"line_start":32,"line_end":32,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":31206,"byte_end":31217,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"RandomState","qualname":"::random_state::RandomState","value":"RandomState {  }","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681}],"decl_id":null,"docs":" Provides a [Hasher] factory. This is typically used (e.g. by [HashMap]) to create\n [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","sig":null,"attributes":[{"value":"/ Provides a [Hasher] factory. This is typically used (e.g. by [HashMap]) to create","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":30866,"byte_end":30951,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":30952,"byte_end":31030,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":31031,"byte_end":31034,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [build_hasher]: ahash::","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":31035,"byte_end":31062,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/ [Hasher]: std::hash::Hasher","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":31063,"byte_end":31094,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ [BuildHasher]: std::hash::BuildHasher","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":31095,"byte_end":31136,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ [HashMap]: std::collections::HashMap","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":31137,"byte_end":31177,"line_start":35,"line_end":35,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":31505,"byte_end":31508,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<RandomState>::new","value":"pub fn new() -> RandomState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":31484,"byte_end":31493,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":32302,"byte_end":32312,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"name":"with_seeds","qualname":"<RandomState>::with_seeds","value":"pub const fn with_seeds(u64, u64) -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Allows for explicitly setting the seeds to used.\n","sig":null,"attributes":[{"value":"/ Allows for explicitly setting the seeds to used.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":32232,"byte_end":32284,"line_start":67,"line_end":67,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35847,"byte_end":35857,"line_start":20,"line_end":20,"column_start":11,"column_end":21},"name":"CallHasher","qualname":"::specialize::CallHasher","value":"CallHasher: Hash","parent":null,"children":[{"krate":0,"index":106}],"decl_id":null,"docs":" Provides a way to get an optimized hasher for a given data type.\n Rather than using a Hasher generically which can hash any value, this provides a way to get a specialized hash\n for a specific type. So this may be faster for primitive types. It does however consume the hasher in the process.\n #Example\n ```\n use std::hash::BuildHasher;\n use ahash::RandomState;\n use ahash::CallHasher;","sig":null,"attributes":[{"value":"/ Provides a way to get an optimized hasher for a given data type.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35281,"byte_end":35349,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ Rather than using a Hasher generically which can hash any value, this provides a way to get a specialized hash","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35350,"byte_end":35464,"line_start":7,"line_end":7,"column_start":1,"column_end":115}},{"value":"/ for a specific type. So this may be faster for primitive types. It does however consume the hasher in the process.","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35465,"byte_end":35583,"line_start":8,"line_end":8,"column_start":1,"column_end":119}},{"value":"/ #Example","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35584,"byte_end":35596,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35597,"byte_end":35604,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ use std::hash::BuildHasher;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35605,"byte_end":35636,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/ use ahash::RandomState;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35637,"byte_end":35664,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/ use ahash::CallHasher;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35665,"byte_end":35691,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35692,"byte_end":35695,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let hash_builder = RandomState::new();","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35696,"byte_end":35738,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ //...","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35739,"byte_end":35748,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ let value = 17;","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35749,"byte_end":35768,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/ let hash = value.get_hash(hash_builder.build_hasher());","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35769,"byte_end":35828,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35829,"byte_end":35836,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35873,"byte_end":35881,"line_start":21,"line_end":21,"column_start":8,"column_end":16},"name":"get_hash","qualname":"::specialize::CallHasher::get_hash","value":"pub fn get_hash<H: Hasher>(&Self, H) -> u64","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":12290,"byte_end":12297,"line_start":29,"line_end":29,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":17387,"byte_end":17394,"line_start":121,"line_end":121,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":31339,"byte_end":31350,"line_start":44,"line_end":44,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":31466,"byte_end":31477,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":33282,"byte_end":33293,"line_start":94,"line_end":94,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":33387,"byte_end":33398,"line_start":101,"line_end":101,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35981,"byte_end":35982,"line_start":25,"line_end":25,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":2603,"byte_end":2610,"line_start":74,"line_end":74,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":5001,"byte_end":5002,"line_start":142,"line_end":142,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":12290,"byte_end":12297,"line_start":29,"line_end":29,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\fallback_hash.rs","byte_start":17387,"byte_end":17394,"line_start":121,"line_end":121,"column_start":17,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":668},"to":{"krate":1,"index":7156}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":31339,"byte_end":31350,"line_start":44,"line_end":44,"column_start":21,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":677},"to":{"krate":1,"index":6960}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":31466,"byte_end":31477,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":33282,"byte_end":33293,"line_start":94,"line_end":94,"column_start":18,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":677},"to":{"krate":1,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\random_state.rs","byte_start":33387,"byte_end":33398,"line_start":101,"line_end":101,"column_start":22,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":677},"to":{"krate":1,"index":7187}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35859,"byte_end":35863,"line_start":20,"line_end":20,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":7148},"to":{"krate":0,"index":105}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src\\specialize.rs","byte_start":35981,"byte_end":35982,"line_start":25,"line_end":25,"column_start":24,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":109},"to":{"krate":0,"index":105}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":2603,"byte_end":2610,"line_start":74,"line_end":74,"column_start":18,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":668},"to":{"krate":1,"index":2069}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":4843,"byte_end":4849,"line_start":134,"line_end":134,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":7156},"to":{"krate":0,"index":121}},{"span":{"file_name":"C:\\Users\\Michael Bao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ahash-0.4.5\\src/lib.rs","byte_start":5001,"byte_end":5002,"line_start":142,"line_end":142,"column_start":31,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":125},"to":{"krate":0,"index":121}}]}